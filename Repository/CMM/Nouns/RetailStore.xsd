<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2021 rel. 2 sp1 (x64) (http://www.altova.com) by poliv02 (Albertsons) -->
<xs:schema xmlns="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://collab.safeway.com/it/architecture/AbsOmMaster" xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<!--V2.2 07/12/21 Patrick Oliver: Added LocationCoordinates to PickUpLocation and removed LatitudeDegree/LongitudeDegree; added DivisionNm-->
	<!--V2.1 06/22/21 Patrick Oliver: Added PartnerData to RetailStoreDigital -->
	<!--V2.0 06/10/21 Patrick Oliver: Added MultiDeliveryBannerType (this used with FulfillmentStoreId )-->
	<!--V1.9 06/03/21 Patrick Oliver: Added FirstEffectiveDt, LastEffectiveDt to Section-->
	<!--V1.8 06/01/21  created RetailStoreDigital complex type for a separate BOD to maintin store online profiles.-->
	<!--V1.7: 05/27/21: Added FulfillmentStoreId -->
	<!--V1.6 04/22/2021 Patrick Oliver: 
Added complex types EcomBusinessHours , EcomAlternateBusinessHours  
• Added EffectiveStartDt, EffectiveEndDt to FacilityProfileType
• Added SlotForecastEndDt to SlotConfigurationType
• Added ServiceFeeDsc to ServiceFeeType
• Added PickUpLocationDetail to PickUpLocation   
• Added typeCd to PickUpSchedule
• Removed PartnerOrderLimitTypeType-->
	<!--V1.5 02/24/2021 Sai N   Added Partner order limit type.-->
	<!--V1.4 011821 Sai N Added override Type in eCom profileType-->
	<!--V1.3 11/04/2020 Rosabel Macario- Added tag to resolve dateTimeStamp issue-->
	<!--V1.2  08/14/2020  Sai Nuthakki  Added Faciity online profile type-->
	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>
	<xs:complexType name="RetailStore">
		<xs:sequence>
			<xs:element name="Corporation" type="Abs:CorporationType" minOccurs="0"/>
			<xs:element name="Division" type="Abs:DivisionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information related to the operating division. Ex Norcal with Div Id 25 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReportingDivision" type="Abs:DivisionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information related to the accounts reporting division. Also known as Consolidation division for AP/AR.                            Ex Accounting division 17</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperatingArea" type="Abs:OperatingAreaType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Organization layer within the operating division. Generally it contains one or more operating districts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParentOperatingArea" type="OperatingAreaType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sometimes retail facilities may have a different reporting structure, generally a division.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="District" type="Abs:DistrictType" minOccurs="0"/>
			<xs:element name="Banner" type="Abs:BannerType" minOccurs="0"/>
			<xs:element name="RetailOrderGroup" type="Abs:RetailOrderGroupType" minOccurs="0"/>
			<xs:element name="StoreData" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:RetailStoreType">
							<xs:sequence>
								<xs:element ref="FulfillmentStoreId" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="StoreAddressData" type="Abs:AddressType" minOccurs="0"/>
			<xs:element name="StoreDigitalAddressData" type="StoreDigitalAddressDataType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Digital address for a retail store like url, facebook id, twitter account id, Instagram id, emial ..etc</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreDepartmentData" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:StoreDepartmentType">
							<xs:sequence>
								<xs:element name="DepartmentHours" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="Abs:StoreDepartmentHourType"/>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
								<xs:element name="DepartmentHolidayHours" type="HolidayWorkHoursType" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>Work hours during public holidays</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="StoreDepartmentSectionType" type="Abs:StoreDepartmentSectionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StoreHoursData" type="Abs:RetailStoreHourType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StoreHolidayHours" type="HolidayWorkHoursType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StoreCheckStandData" type="Abs:StoreCheckStandType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StoreControlData" type="RetailStoreControlType" minOccurs="0"/>
			<xs:element name="OrgEntityType" type="Abs:OrgMasterNameType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Generic type to capture different org structures.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RetailStoreDigital">
		<xs:annotation>
			<xs:documentation>Defines all the digital profiles of a retail store used in ecom business</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element name="DivisionNm" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the Safeway Divisionex: Norcal, Denver, Dominick&apos;s, Supply, Safeway Direct.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="BannerCd" minOccurs="0"/>
			<xs:element name="RetailStoreId" type="xs:integer"/>
			<xs:element name="AltStoreId">
				<xs:annotation>
					<xs:documentation>Alternate sotre id, generally store id in char format.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="FulfillmentStoreId" minOccurs="0"/>
			<xs:element name="DigitalAddress" type="StoreDigitalAddressDataType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="DigitalProfile" type="StoreOnlineProfileTypeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RetailStoreControlType">
		<xs:annotation>
			<xs:documentation>Store control data from SSSTOCTL table. Excluded store system related data for security reasons.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="WarehouseSystemInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether the store is supported on a Warehousing system like EXPRES.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CustomerAccntNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer account number uniquely identifies a store as custome to the company. A party is recognized as a customer on an Accounts Receivable account and a vendor on an Accounts Payable account. Valid customer accounts are on the Accounts Receive Master (ARPMAS_TABLE).  Customer account number together with customer sub account number uniquely identify a customer outlet on the Accounts Receivable Customer Master (ARCMAS_TABLE.)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CustomerSubAccntNbr" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TruckingGroupCd" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A code trucking assigns to a store which allows stores to be grouped together for load out recap purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TlogZoneInd" type="xs:integer" minOccurs="0"/>
			<xs:element name="MarketAreaCd" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A code to group stores within a division. Used by item movement history.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepStoreInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This switch will indicate that this Store is the Representative Store for this Retail Order Group.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ElectronicMarketingInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used to indicate the status of the electronic marketing/promo code in a store.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TargetMarketingInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This column indicates if the entity as described in the database is is participating in the target marketing promotion wherein promotions are specific to a population segment. Therefore, on COROGTAB, a value of Y indicates that the rog is participating in target marketing. On, SSSTOCTL, a value of Y indicates that the store is participating in target marketing.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CGOStoreInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A switch Y N or ' ' (space) to allow store to accept information from host for computer assisted ordering.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StoreClusterId" type="xs:integer" minOccurs="0"/>
			<xs:element name="NIMRequiredInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if nutrition data is required for this store.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreOnlineProfileTypeType">
		<xs:annotation>
			<xs:documentation> Represents online eCom attributes associated to a retail store</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EcommerceEnabledInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the facility is enabled for eCom business operations.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EcommerceStartDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the retail store started serving eComerce customers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EcommerceEndDt" type="xs:date" minOccurs="0"/>
			<xs:element name="EcommerceStatus" type="StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>defines the status of facility Online business </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MFCInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the facility is a MFC - micro fullfilment center.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DUGInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the facility has DUG option available. DUG- Drive up and Go. Customer can drive up to the point and pick up items ordered in online.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FacilityProfileType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines different types of store profiles to serve online business.
Ex: 3PL enabled store, Premium store, ERUM store, Auto Replenishment store, .etc</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="CodeWithDescription">
							<xs:sequence>
								<xs:element name="EnabledInd" type="xs:boolean" minOccurs="0"/>
								<xs:element name="ProfileValueTxt" minOccurs="0">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="200"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
								<xs:element name="EffectiveStartDt" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Date on which the store profile starts. </xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="EffectiveEndDt" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Date on which the store profile starts. </xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PickUpSchedule" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Customer pick up schedules at the facility.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DayOfWk" type="xs:string" minOccurs="0"/>
						<xs:element name="FirstPickUpTm" type="xs:string" minOccurs="0"/>
						<xs:element name="LastPickUpTm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="typeCode">
						<xs:annotation>
							<xs:documentation>Attribute used to describe what is the type of the associated entity. This allows for extension of the model without the need for pre-defining a static ID element.
			
Examples here are: Pick Up time, Last Pick Up time, etc.  </xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="EcomBusinessHours" type="EcomBusinessHoursType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Used to defined various types of eCom business hours.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EcomAlternateBusinessHours" type="EcomAlternateBusinessHoursType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Used to defined various types of eCom alternate business hours.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PickupAreaType" type="CodeWithDescription" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>type of  pickup points available in a facility.
ex: Inside Locker,Outside Locker, Outside Kiosk.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PickUpLocation" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Location details for customer order pickup.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PickupAreaTypeCd" minOccurs="0"/>
						<xs:element name="PickupAreaId" type="xs:string" minOccurs="0"/>
						<xs:element name="LocationPriorityNbr" type="xs:int" minOccurs="0"/>
						<xs:element name="MachineId" minOccurs="0" maxOccurs="5">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PickupAreaEnabledInd" type="xs:boolean" minOccurs="0"/>
						<xs:element name="PickupAreaNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AddressLineTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LocationCoordinates" minOccurs="0">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="CoordinatesType">
										<xs:attribute ref="typeCode"/>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="LocationCommentTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="2000"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InstructionsType" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="InstructionTypeCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="30"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="InstructionsTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="2000"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="PickUpLocationDetail" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to show additional details about pick up store locations. For example the pickup area may be in the back of a store and the pick up location details can specify the allocated parking lots for customers, vendors, etc.. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:element name="LocationTypeCd" minOccurs="0"/>
									<xs:element name="LocationAreaNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="LatitudeDegree" type="xs:decimal" minOccurs="0"/>
									<xs:element name="LongitudeDegree" type="xs:decimal" minOccurs="0"/>
									<xs:element name="Altitude" type="xs:decimal" minOccurs="0"/>
									<xs:element name="CommentTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="2000"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DeliveryAreaType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Customer delivery areas covered in online business from the store. ex zip codes or cities</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AreaTypeCd" type="xs:string" minOccurs="0"/>
						<xs:element name="AreaTypeValueTxt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Delivery areas covered like zip codes covered from the store.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MultiBannerPostalCodes" type="MultiBannerPostalCodesType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Used to show a list of cross banner postal codes that a MFC has the ability to service.  Ex: In SoCal there are certain zip codes that contain both Pavilions and ABS stores. If a customer is using the Pavilions website for delivery, and enters a zip code outside of Pavilions, they may be given an option of using an alternate ABS store MFC to see the list of zip codes that the MFC services.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceFeeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Various types of service fee for online business at a store level. Like door delivery fee for business or residential..etc</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ServiceFeeTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServiceFeeDsc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServiceFeeCategoryCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServiceFeeAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="6"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServiceFeeItemId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>item id for the service fee like upc or scan cd.
ex: scan cd for bag fee.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BusinessContactType" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ContactTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ContactNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ContactPhoneNbr" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="EmailAddressTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SlotConfigurationType" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SlotTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SlotForecastModelStoreId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="10"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SlotForecastLaunchDt" type="xs:date" minOccurs="0"/>
						<xs:element name="SlotForecastEndDt" type="xs:date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FacilityOverrideType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Various ecom override profiles maintianed at a retail store level.
Ex: Store can be designated to manually override an automated 3PL delivery schedule. They can refuse to use the serives of a 3PL driver for various reasons.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0">
						<xs:element name="OverrideType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="OverrideInd" type="xs:boolean" minOccurs="0"/>
						<xs:element name="OverrideReasonType" type="CodeWithDescription" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PartnerData" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A business partner can be a supplier, a vendor, a customer or any other third party from which a business alliance has been associated. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PartnerId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PartnerNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PartnerTypeCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Business partner types (Fuel partner, Delivery partner, Fullfillment partner, Picker partner, etc. ). </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="CodeWithDescription"/>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OnlineProfileAuditData" type="RecordAuditData" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EcomBusinessHoursType">
		<xs:annotation>
			<xs:documentation>Used to define types of eCom business hours.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BusinessHrsType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of eCom business hours. Ex: Operation hours, Staffing hours, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BusinessHrsSubType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sub type of the eCom business hours. Ex: Fulfillment, Delivery, etc. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BusinessHrs" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StartDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date on which the eCom business hours starts. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EndDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date on which the eCom business hours ends.  </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DayOfWk" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Day of week</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartHr" type="xs:time" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Starting hour of the eCom business operation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EndHr" type="xs:time" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ending hour of the eCom business operation.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EcomAlternateBusinessHoursType">
		<xs:annotation>
			<xs:documentation>Used to define types of eCom alternate business hours.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AlternateBusinessHrsType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of eCom alternate business hours. Ex: Emergency hours, Exception hours, etc.,</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternateBusinessHrsSubType" type="CodeWithDescription" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Sub type of the alternate eCom business hours. Ex: Fulfillment, Delivery, etc.         Note that the alternate business hours can apply to multiple sub types at the same time.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternateBusinessHrs" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StartDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date on which the eCom alternate business hours starts. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EndDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date on which the eCom alternate business hours ends. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DayOfWk" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Day of week.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:sequence minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Note: There can be multiple alternate start and end hours for the type and subtype (ex: OpeartiontarttHr, OperationEndHr, StaffingSarttHr, StaffingEndHr, etc.</xs:documentation>
							</xs:annotation>
							<xs:element name="StartHr" nillable="false" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Starting hour of the eCom business operation.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:time">
											<xs:attribute name="typeCode">
												<xs:annotation>
													<xs:documentation>Ex: OperationStartHr, StaffingStartHr, etc.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="EndHr" nillable="false" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Ending hour of the eCom business operation.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:time">
											<xs:attribute name="typeCode">
												<xs:annotation>
													<xs:documentation>Ex: OperationEndHr, StaffingEndHr, etc.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AlternateBusinessHrsReason" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Business reason for the eCom alternate business hours Ex: Holiday, Store clousure, etc. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternateBusinessHrsStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Statuses of the eCom alternate business hours. Ex: Pending, Complete, etc.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StatusType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AlternateBusinessHrsComment" minOccurs="0">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute ref="typeCode"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="RequestedByType" type="RequestedByType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Business user who requested the eCom alternate business hours. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApprovedByType" type="ApprovedByType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Business user who approved the eCom alternate business hours. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RequestedByType">
		<xs:annotation>
			<xs:documentation>Contains data for business users who request alternate eCom business hours.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FirstNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LastNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RequestedByDtTm" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ApprovedByType">
		<xs:annotation>
			<xs:documentation>Contains data for business users who approve alternate eCom business hours. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FirstNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LastNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ApprovedByDtTm" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PartnerOrderLimitType">
		<xs:annotation>
			<xs:documentation>Details business partner identification and contractual order limts for store delivery and pickup </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PartnerId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PartnerNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderLimitCnt" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define threshold at which point we stop allocating orders to a given vendor for a given day for given store</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaximumItemCnt" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define, by an order's item count, a threshold to qualify orders to be eligible for assigning to a 3PL (i.e. we will only assign an order to Shipt if the item count is between 1-70)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumItemCnt" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define, by an order's item count, a threshold to qualify orders to be eligible for assigning to a 3PL (i.e. we will only assign an order to Shipt if the item count is between 1-70)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToteCnt" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define, by an order's tote count, a threshold to qualify orders to be eligible for assigning to a 3PL (i.e. we will only assign an order to Shipt if the tote count is between 10-20)

</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaximumToteCnt" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define, by an order's tote count, a threshold to qualify orders to be eligible for assigning to a 3PL (i.e. we will only assign an order to Shipt if the tote count is between 10-20)

</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderAllocationPct" minOccurs="0">
				<xs:annotation>
					<xs:documentation>purpose is to define percentage of orders to be delivered by a partner for a given store for a given day(this value will override the order count)

</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="6"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreDigitalAddressDataType">
		<xs:sequence>
			<xs:element name="DigitalAddressType" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="DigitalAddressTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="FulfillmentStoreId">
		<xs:annotation>
			<xs:documentation>For online Ecommerce orders an alternate store may be used to fulfill orders.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="InstructionTxt">
		<xs:annotation>
			<xs:documentation>Any free format text pertaining to the delivery order.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute ref="typeCode"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="MultiBannerPostalCodesType">
		<xs:annotation>
			<xs:documentation>Used to show a list of cross banner postal codes that a MFC has the ability to service.  Ex: In SoCal there are certain zip codes that contain both Pavilions and ABS stores. If a customer is using the Pavilions website for delivery, and enters a zip code outside of Pavilions, they will be shown an alternate ABS MFC along with a list of zip codes that the MFC services.   </xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="PostalCd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Postal code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="BannerCd" minOccurs="0"/>
			<xs:element ref="InstructionTxt" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute ref="typeCode"/>
	</xs:complexType>
	<xs:complexType name="CoordinatesType">
		<xs:sequence>
			<xs:element name="XCoordinateNbr" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="10"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="YCoordinateNbr" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="10"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ZCoordinateNbr" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="10"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CoordinateUOMCd" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>