<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2021 rel. 2 sp1 (x64) (http://www.altova.com) by poliv02 (Albertsons) -->
<xs:schema xmlns="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<!--V1.13 Patrick Oliver 07/13/21 - Updated StockingSection to unbounded in Merchandise Hierarchy.-->
	<!--v1.12 - Alex Nunes - 6/17/2021 - Added CostMemoAmt to DisplayItem type section Noun.-->
	<!--v1.11 - Alex Nunes - 5/18/2021 - Added additional elements from SSITMROG and Label elements from URX to SupplyChainItem ROGItemRefrence section Noun.-->
	<!--V1.10 snuth00 5/7/21 Added Business Unit in Merchandise Hierarchy.-->
	<!--v1.9 - Alex Nunes - 3/1/2021 - System of record changed from SIMS to EXE for the following elements: ItemSizeNbr,WarehouseUnitWidth,WarehouseUnitLength,WarehouseUnitHeight,WarehouseCube,WarehouseUnitWt,PalletLayer,PalletHeight. Lengths adjusted accordingly.-->
	<!--V1.8 Patrick Oliver 12/10/20: Updated LeadVendorInd to PrimaryVendorInd in ItemPriceAreaVendorType -->
	<!--V1,7 Alex Nunes 8/10/2002 - Modified SizeRangeDsc from 200 to 300 string in CIG type.-->
	<!--V1.6 Patrick Oliver 7/22/20 - Updated VendorId & VendorSubAccountNbr to string(20)-->
	<!--Alex Nunes 6/4/2020 Renamed Digital Promotion Group type to Common Item Group type.-->
	<!--V1.5 Patrick Oliver - Added UnitPriceTableCd from SSITMPOS and UP elements from SSUNITPR for Catalog Item team (UnitPriceTableCd, UnitPriceMeasureUnit, UnitPriceLabelUnit, UnitPriceMultiFactor). Added new mapping from SSITMTRT for ItemPackUOMCd and ItemWt           -->
	<!--V 1.1  Alex Nunes  11/27/2018 Change on SupplyChainItem Type. Adding Pull Date flag attribute which tells the DC if the item has a code date. Goes with Code Date Variance (Shelf Life Days). //element(*,SupplyChainItemType)/PullDateInd-->
	<!--V 1.2 Alex Nunes 12/4/2018 Add ItemRecode Type as the new BOD is be based on.-->
	<!--V 1.3  Sai Nuthakki 02/11/2019  Added Catalog Item Type-->
	<!--V1.4 Patrick Oliver - Added RetailDepartmentId & MerchDepartmentId to CMM-->
	<!--Sai Nuthakki 06/26/2019 - added ItemUsageType and DisplayInd to CIC in RetailItem-->
	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>
	<xs:complexType name="CommonItemGroupType">
		<xs:annotation>
			<xs:documentation>Defines common item group aka CIG, for a CIC at retail division level.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element name="CommonItemGroup">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CommonItemGroupCd">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CommonItemGroupNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CommonItemGroupDsc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UOM" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="MinimumSizeQty" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Minimum sizes of items this group covers.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="MaximumSizeQty" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Maximum sizes of items this group covers.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeRangeDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>description for the size ranges this promo group covers.
Ex:6.49 to 10.50-oz. Selected varieties.
10.5 to 14-oz. Selected varieties.
7-oz. Selected varieties.
</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="300"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="GroupCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Group code. Represents the first two digits of SMIC (Safeway Merchandise Item Configuaration).</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:int">
									<xs:totalDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CategoryCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Category code. Represents the thrid and fourth digits of SMIC (Safeway Merchandise Item Configuaration).</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:int">
									<xs:totalDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CreateTs" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Time stamp of when message was created at source.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LastUpdateTs" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date and time stamp of when message was last modified at source.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CorporateItemCodeData" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="CorporateItemCd"/>
									<xs:element name="CreateTs" type="xs:dateTime" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Time stamp of when message was created at source.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="LastUpdateTs" type="xs:dateTime" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Date and time stamp of when message was last modified at source.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ItemMaster" type="xs:string">
		<xs:annotation>
			<xs:documentation>Item master data</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ItemLocation">
		<xs:annotation>
			<xs:documentation>Item location data in a facility - also known as tag data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Department" type="IdWithNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store dept or warehouse dept.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section" type="IdWithNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Retail store section or warehouse section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Aisle" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Store or Whse aisle nbr and description.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="IdWithNameType">
							<xs:sequence>
								<xs:element name="AisleSection" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>Stocking section with in an Aisle</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="IdWithNameType">
												<xs:sequence>
													<xs:element name="AisleSide" type="IdWithNameType" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Describes the side of an Aisle</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="AisleSectionShelf" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Shelf Number that contain the item with in a section in an Aisle.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:complexContent>
																<xs:extension base="IdWithNameType">
																	<xs:sequence maxOccurs="unbounded">
																		<xs:element name="LastPOSMaintenanceDt" type="xs:date" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>date from which the item location is effective as per the last POS file maintenance.</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																		<xs:element ref="CorporateItemCd" minOccurs="0"/>
																		<xs:element name="ItemId" type="ItemId" minOccurs="0"/>
																		<xs:element name="ItemDsc" type="ItemDscType" minOccurs="0"/>
																		<xs:element name="ProductHierarchy" type="ProductHierarchy" minOccurs="0"/>
																		<xs:element name="LocationNbr" type="xs:integer" minOccurs="0"/>
																		<xs:element name="TagNbr" minOccurs="0">
																			<xs:simpleType>
																				<xs:restriction base="xs:string">
																					<xs:maxLength value="20"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="FacingItemCnt" type="xs:integer" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Number of items facing to the customer in the shelf.</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																		<xs:element name="ShelfCapacityCnt" minOccurs="0">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:totalDigits value="9"/>
																					<xs:fractionDigits value="4"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="PresentationStockCnt" minOccurs="0">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:totalDigits value="9"/>
																					<xs:fractionDigits value="4"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="FormAndOverrides" minOccurs="0" maxOccurs="5">
																			<xs:complexType>
																				<xs:sequence>
																					<xs:element name="FormId" minOccurs="0">
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="20"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="FormQty" minOccurs="0">
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="20"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="OverrideQty" minOccurs="0">
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="20"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="OverrideFlag" minOccurs="0">
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="1"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																				</xs:sequence>
																				<xs:attribute ref="sequenceNbr"/>
																			</xs:complexType>
																		</xs:element>
																		<xs:element name="AltLocationInd" minOccurs="0">
																			<xs:simpleType>
																				<xs:restriction base="xs:string">
																					<xs:maxLength value="2"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="DocumentAction" type="DocumentActionType" minOccurs="0"/>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute ref="typeCode" use="optional"/>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute ref="typeCode" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CICType">
		<xs:annotation>
			<xs:documentation>Corporateitemcd type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporateItemCd" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="Qualifier"/>
	</xs:complexType>
	<xs:complexType name="CatalogItem">
		<xs:annotation>
			<xs:documentation>Defines items published in online catalog like e-commerce site or any other medium.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId" minOccurs="0"/>
			<xs:element ref="Abs:DivisionId" minOccurs="0"/>
			<xs:element name="GeoLocationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Catalogs can be pulished at a geographic location level as well instead of a store or store group. Geo location can be a city, county, state.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0">
						<xs:element name="GeoLocationTypeNm" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of the geo loation, ex city, county or state.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="GeoLocationValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Actual value of the geo location where the item catalog is effective.
Ex:  name of the city, county or a state.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RetailStoreGroup" type="RetailStoreGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Catalog items can be published at a group of stores level or at an individual store level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FacilityId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be any facility like a retail store or micro fullfillment center or any other Albertsons location facility from where items published in catalog can be picked to fulfill a customer online order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FacilityType" type="CodeWithDescription" minOccurs="0"/>
			<xs:element ref="EffectiveTimePeriod" minOccurs="0"/>
			<xs:element name="CatalogId">
				<xs:annotation>
					<xs:documentation>Unique identifier for the published catalog either at a facility or location level.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="BaseProductNbr"/>
			<xs:element name="FacilityItemStatus" type="StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item status in a facility liek store or MFC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CatalogItemStatus" type="StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the status of an item in a catlog as active or Inactive.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CeatedDt" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="PublishedDt" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="BlockStatus" type="StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bolck or Unblock to publish in catalog.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UPC" type="UPC" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Digital catalog items are published bt BPN Nbr and each BPN is acollection of UPCs. One of the UPC is identiifed as primary UPC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CIC" type="CICType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="PriceLookUpCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the PLU to be used for the paper coupon This is the PLU for the item in this ROG. It is used by stores to enter into the cashiers scanner instead of the UPC for items that have no UPC, such as produce items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CatalogItemNm" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the item in Catalog.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CatalogItemDetail" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CatalogItemDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Detail description of the catalog item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="EnrichedDsc" type="xs:string" minOccurs="0"/>
						<xs:element name="ProductDsc" type="xs:string" minOccurs="0"/>
						<xs:element name="WarningTxt" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>ike contains peanuts, cashews..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IngredientTxt" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dairy, penuts..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DirectionTxt" type="xs:string" minOccurs="0"/>
						<xs:element name="IndicationTxt" type="xs:string" minOccurs="0"/>
						<xs:element name="InteractionTxt" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>like drug interactions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="VintageTxt" type="xs:string" minOccurs="0"/>
						<xs:element name="AllergyInfoTxt" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DisplayType" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="Dimensions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ContainsCatalog Item measurements</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ShelfUnitSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The generic size of goods. It may be actual size Example: 340 g or a unit type (packet). For SSITMSGNTABLE - Common Sign Size, the size Dsc associated with the Common Sign Cd for the Common Retail Cd.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The size of the product as a numeric quantity that can be used in in calculations as compared to SIZE-DESC, which is a descriptive size for printing.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="12"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeUOM" type="CodeWithDescription" nillable="false" minOccurs="0"/>
						<xs:element name="AlternateSizeInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Specifies that an alternate size may be substituted.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternateSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This column allows user to specify an alternate size Dsc for an item on a purchase order.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemHeight" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The height of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemDepth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The depth of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWidth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The width of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemPackUOMCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UOM for shelf item pack measuremenmts.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemAverageWt" type="ItemAverageWtType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Average weight of a weighted item.
 Ex wt of each banana, though bananas are sold by weight.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItemMinimumWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemMaximumWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemUnitWt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unit by which permissible sizes within the range of min to max weight are displayed. E.g. If a product has a minimum weight of 5 lb and and max of 10 lb and the increment is 1 lb, then the possible package sizes are 5 lb, 6 lb, 7 lb, 8 lb, 9 lb, 10 lb. </xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWtUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InnerPackQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Nbr of non-decomposable units in the selling unit.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="4"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShelfPackageCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>type of shelf package in which an item is sold (box, can, bottle, etc.). This is also used to show the type of material of which a container is made (glass, plastic, aluminum, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemPickTypeCd" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute has the following values :
• 1 - Item picked by numbers and sold by weight
• 2 - Item picked and sold by weight
• 3 - Pre-packaged and picked by each, but the package has a price which is based on the weight. (eg. Ground beef) 
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductHierarchy" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="ProductHierarchy">
							<xs:sequence>
								<xs:element name="SMICDsc" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Description of the product hierarchy as in SMIC (Safeway MerchandiseItem Configuaration) system</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Brand" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains item brand information.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BrandCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This Cd is used to indicate the brand Nm of an item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="BrandNm" type="xs:string" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Brand Name</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ManufacturerType" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="ManufacturerTypeType">
							<xs:sequence>
								<xs:element name="CopyrightTxt" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>copyright for the manufactured published item info.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="RestrictionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>restrictions like transaction limits or customer limits.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="LimitQty" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Maximum qty that can be purchased.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SalesRestrictionCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if sale of the item is to be restricted when the store activates limited sales. (eg. no alcohol on Sundays).  Remark: Refer to the store level options as well.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="1"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="DepartmentOverride" type="CodeWithDescription" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Features" minOccurs="0">
				<xs:annotation>
					<xs:documentation>general features of the item</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="OrganicItemInd" type="xs:string" minOccurs="0"/>
						<xs:element name="EthnicItemType" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A 2-character code that identifies the ethnicity by which an item might be classified. AS-Asian; CA-Canadian; CH-Chinese; IN-Indian; MX-Mexican, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SalesRankNbr" type="xs:int" minOccurs="0"/>
						<xs:element name="ImageURLTxt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>URL for the catalog item image.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="500"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ManufacturerTypeInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation> This column is used to indicate if an item is either:
 C = Coupon 
 G = Generic item 
 H = House brand item
 L = Local
 N = National Brand Item</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferType" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="NutritionalInfoType" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NutritionalFact" type="IdWithNameType" minOccurs="0"/>
						<xs:element name="FactQty" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="FactUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="FactPct" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ContainsTxt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>text message like 'item contains peanuts'</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ConsumerWarningType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Any regulatory consumer warnings like prop65 associated with the item</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="WarningMessage" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="DisplayInd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ServingSizeType" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ServingsPerContainerTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServingSizeTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ServingSizeUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AddedItemTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LocationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>location of the item in retail faclity for consumer pickup or online order fulfillment pickup.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="LocationType" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Idenitifies the loaction type.
Ex: Dept, Section, Aisle, Shelf..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LocationId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LocationNm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the location. 
It is a department name like 'Produce' if LocationType is 'Dept'</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LocationURLTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="500"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LocationImageURLTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="500"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="TemperatureZone" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A 2 char code telling store pickers what temperature the picked item needs kept at prior and during delivery to the  customer.  Available codes are:
CH - Chilled
AM - Ambient (room temperature)
FZ - Frozen </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemPrice" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>pricing details of the catlog item. They depend on promotions and type of delivery to the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DeliveryType" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item delivery type like Home dleivery or Drive Up and Go (DUG) or third party delivery. Item prices epend on delivery type.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RegularPriceAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UnitPriceAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LimitQty" type="xs:integer" minOccurs="0"/>
						<xs:element name="UOMCd" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="RingTypeCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates how the price is determined for items with PLUs and UPCs.Indicates how an item is being sold by, like each or by random wieght.
Valid Ring Type Codes are:
• "0" - Price on file
• "1" - Random Dollar - weight 
• "2" - Random Weight 
• "3" - Store Coupon
• "4" - Vendor Coupon   
• "5" - Random Dollar – each</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="1"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SellByWeightInd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PromotionType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="PromotionDsc" type="xs:string" minOccurs="0"/>
						<xs:element name="PromotionPeriod" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="StartDt" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="EndDt" type="xs:dateTime" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="TriggerQty" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorporateItemType">
		<xs:annotation>
			<xs:documentation>Contains basic item information as defined at corporate level so that it canbe applied to downstream item definitions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="CorporateItemCd"/>
			<xs:element name="CorporateItemDescription" type="ItemDscType" minOccurs="0"/>
			<xs:element name="CorporateItemStatus" type="StatusType"/>
			<xs:element name="CorporateItemLifeCycle">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CreatedUserId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CreatedTs" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="ApprovedUserId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ApprovedTs" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="ApprovalCommentTxt" type="xs:string" minOccurs="0"/>
						<xs:element name="RejectedUserId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RejectedTs" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="RejectionCommentTxt" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SupplyChainItemType">
		<xs:annotation>
			<xs:documentation>Contains Item information from Supply Chain context. The information is at the level of products ordered and received from vendros into Warehouses, DCs and DSD.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId"/>
			<xs:element ref="Abs:DivisionId"/>
			<xs:element ref="Abs:DistributionCenterId" minOccurs="0"/>
			<xs:element ref="Abs:WarehouseId"/>
			<xs:element ref="Abs:CorporateItemCd"/>
			<xs:element name="DepartmentId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Warehouse department id.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RetailDepartmentId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Retail department Id.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MerchDepartmentId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Merch department id.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemId" type="ItemId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alternate Item Identifers of various types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductHierarchy" type="ProductHierarchy" minOccurs="0"/>
			<xs:element name="SMIC" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains Safeway Merchandising Item Classification(SMIC) data.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SMICGroupCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique Id of a SMIC category, derived from Group Cd + Category Cd + Class Cd + Sub Class Cd + Sub Sub Class Cd. Group Cd is the first level in the SMIC classification for the Smatch system. It must exist on MEPRDCLF where the Category, Class, Sub Class, and Sub-Sub Class are zero. SMIC = Safeway Merchandising Item Cd.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SMICCategoryCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique Id of a SMIC category derived from Group Cd + Category Cd + Class Cd + Sub Class Cd + Sub Sub Class Cd. Category Cd is the second level in the SMIC classification for the Smatch system. SMIC = Safeway Merchandising Item Cd.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SMICClassCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique Id of a SMIC category derived from Group Cd + Category Cd + Class Cd + Sub Class Cd + Sub Sub Class Cd. Class Cd is the third level in the SMIC classification for the Smatch system. SMIC = Safeway Merchandising Item Cd.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SMICSubClassCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique Id of a SMIC category, derived from Group Cd + Category Cd + Class Cd + Sub Class Cd + Sub Sub Class Cd. Sub Class Cd is the fourth level in the SMIC classification for the Smatch system. SMIC = Safeway Merchandising Item Cd.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SMICSub-SubClassCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique Id of a SMIC category, derived from Group Cd + Category Cd + Class Cd + Sub Class Cd + Sub Sub Class Cd. Sub Sub Class Cd is the fifth level in the SMIC classification for the Smatch system. SMIC = Safeway Merchandising Item Cd.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductionGroupHierarchy" type="ProductHierarchy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Product hierearchy defined for manufacturing/production.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryManager" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CategoryManagerNbr" type="xs:string" minOccurs="0"/>
						<xs:element name="CategoryManagerNm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CorpItemReference" type="CorpItemReferenceType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>CIC and UPC reference at Corporate level.
from SSITMXRF</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ROGItemReference" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>CIC and UPC cross reference at ROG level.
fro SSITMURX</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element ref="DivisionId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Retail Division to which ROG belongs to.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="Abs:ROGCd" minOccurs="0"/>
						<xs:element name="UPCID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UPC Cd used in retail systems and scanned during the sale transction at retail facility.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="14"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UPCNbr" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UPC as numeric field</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UPCComponents" type="UPCComponentsType" minOccurs="0"/>
						<xs:element name="UPCType" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shows which of the Consumer, Multipack, or Case UPCs is used to make up the right 5 digitis of the UPC. One of these must be chosen.Called UNIT_TYPE in legacy systems.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StatusCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="StatusDsc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PrimaryUPCInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Since a  CIC can have mutiple UPCs associated with it over a period of time, need to identify one of the UPC as primary for pricing and ordering perspective.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RetailSectionCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code for the store retail section in which the item is placed for sale.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="10"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RetailSectionNm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the store retail section in which the item is placed for sale.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RetailShelfUnitDimension" type="RetailShelfUnitDimensionType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the dimensions of the item available in a retail facility shelf, unlike defined at corporate level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PackNutrientInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field indicates if the package contains all the nutrient information wanted on a label.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="NutriEnvirItemCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This indicates if the UPC is a nutritional or environmental item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="HazardousItemInd" nillable="true" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates whether the item is considered hazardous or not. Corresponding hazardous class information will be available in MEHPITM table.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="HazardousClassCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="HazardousClassDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of hazardous class information, available in MEHPITM table.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RetailStatusInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the status of the item as it applies to the ROG. (the warehouse item at retail)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OptionalOrderInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A code used for several purposes including optional ordering restricted ordering times, and a shelf end display indicator to indicate what type of display this item will receive. (Printed on the Warehouse Selection List, Bar Code Tickets, and the Order Guide.)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OrderGuide" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="NewItemInd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>This field is used to identify new items which have been received.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SuppressedInd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates if the price and/or Order Guide information is suppressed for this item.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="DisplayGroupSuppressedInd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates if the display group contents are printed or suppressed for this item.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ItemTypeCd" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This code is used to break down items into groups so that like items can be compared. It is a finer level than product group and is usually used between items in the same common code. Item Type Codes are found on the Item Type Table(SMITMTYP_TABLE)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ProductSourceInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the source of a retail Item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemOnDSDInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation> This column indicates if the item is on the new DSD system, meaning, vendor product lines, dominant vendor and cost calculations are done, product lines, dominant vendor and cost calculations are done, and specific store authorizations are set up for this item. If the item is not on the new and specific store authorizations are set up for this item. If the item DSD system, we are assuming one vendor, therefore, one cost and all stores are is not on the new DSD system, we are assuming one vendor, therefore, one cost and all stores are authorized for the item (treated like a authorized for the item (treated like a warehoused item). Values: 'Y' - item warehoused item). is DSD and is on the new system. Values: ' ' or 'N' - item is either warehoused</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ProductTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OffInvoiceInCostInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Y - this item must have off invoice allowances calculated as part of the cost  N or blank indicates that this item does not need allowances included in the cost</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemLabelType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines labels needed for the item in retail shelf.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="LabelType" type="CodeWithDescription" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Type of the label</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="LabelCnt" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number of labels needed for the item.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="LabelPrintType" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="LabelSizeType" type="CodeWithDescription" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="OriginOrder" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Corpotation and Division used to specify item and facility that store orders which will be routed to for this item (for warehouse items) and which item/division/CIC combination this item/rog combination is being maintained under (for DSD items). These are required due to business processes exceptions in which sometimes the WAREHOUSE division in WHSE Item is different than the RETAIL division. Examples are all Item ROG records for various divisions that order from the cross-division serving Sundries (WSUN) or Ponca (WPON) DCs.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence minOccurs="0">
									<xs:element ref="CorporationId" minOccurs="0"/>
									<xs:element ref="DivisionId" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="GapTargetInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identifies the National Brand item that will be targeted when pricing House Brand and Generic items.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LockGapPricingInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field indicates if Gap pricing is not to happen on a specific item when used at the SSITMROG level or not on a whole product group and item type when used at the Gap Control level.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LockCSRInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Lock from computer suggested retails indicator.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ProcurementRestriction" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Any restriction that must exist in a store in order for the item to be sold.  
</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence minOccurs="0">
									<xs:element name="OrganizationTypeCd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Restrictions can be at different levels such as Department, Section, etc Valid values are ‘Department’, ‘Section’, ‘Store, etc. </xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="OrganizationValueTxt" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Valid values are DepartmentId, SectionCd, etc. </xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ApprovalInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field is specifically for store created items that requires approval within Optiva before sending to store. When the item is first setup, MDS (Merchandising Data Service) will set to ‘O’. [Approval Outstanding]. The item details are not eligible to send to store.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LoadStoreInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to trigger UPC System = 4 items that need to be loaded down to the Stores.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="StatusEffDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Dt the Status on ITMCDS changed from New to Valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CreateDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item create date at corporate level.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CommonGroup" type="CommonGroupType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains various types of common groups to which an item belongs to.
Thease common Cds are used for different purposes like Promotions, Pricing or Costing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of an item at various levels.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CorpItemStatus" type="CorpItemStatusType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The status of the item as it applies to the corporation.
V Valid item
D discontinued item
N New item</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseItemStatus" type="WarehouseItemStatusType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The status of the item as it applies to the warehouse/distribution centre.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemDsc" type="ItemDscType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>contains various types of item descriptions used as per the context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Buyer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Party responsible for ordering the Qty. It could be a Buyer, Forecaster or any other party. He also handles bouncers that is items in which the descrepency between our cost and the vendor cost exceeds the threshold of what we accept as the variance.                       source WMBUYOPT</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BuyerId" type="xs:string" minOccurs="0"/>
						<xs:element name="BuyerNm" type="xs:string" minOccurs="0"/>
						<xs:element name="FacilityId" type="xs:string" minOccurs="0"/>
						<xs:element name="BuyerPhoneNbr" type="xs:string" minOccurs="0"/>
						<xs:element name="BuyerEmailId" type="xs:string" minOccurs="0"/>
						<xs:element name="BuyerComment" minOccurs="0" maxOccurs="5">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="CommentType" type="xs:string"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Vendor" type="ItemVendor" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Vendors supplying the item</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShelfUnitDimensions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains Retail Shelf Item measurements stored at corporate level.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ShelfUnitSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The generic size of goods. It may be actual size Example: 340 g or a unit type (packet). For SSITMSGNTABLE - Common Sign Size, the size Dsc associated with the Common Sign Cd for the Common Retail Cd.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The size of the product as a numeric quantity that can be used in in calculations as compared to SIZE-DESC, which is a descriptive size for printing.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeUOMCd" nillable="false" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternateSizeInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Specifies that an alternate size may be substituted.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternateSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This column allows user to specify an alternate size Dsc for an item on a purchase order.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemHeight" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The height of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemDepth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The depth of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWidth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The width of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemPackUOMCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UOM for shelf item pack measuremenmts.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWtUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InnerPackQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Nbr of non-decomposable units in the selling unit.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="4"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShelfPackageCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>type of shelf package in which an item is sold (box, can, bottle, etc.). This is also used to show the type of material of which a container is made (glass, plastic, aluminum, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ShelfPackageDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>gives description of how many retail shelf units in a warehouse pack.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ShipUnitDimensions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains details of the shipping unit shipped from Warehouse to Retail store or Vendor to Retail Store.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ShipUnitPackTypeCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A 3-character Cd that identifies the pack type in which an Item is received/ shipped from the Warehouse or Vendor to a Store.  Example: SHP, PLT, CTN, XDP (StorePackType)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShipUnitPackQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The quantity of shelf units in a warehouse unit, or pack for the item at a corporate level. e.g. 24 shelf units in a warehouse unit. Nbr of consumer units per warehouse shipping pack (or store receiving pack for DSD) with Descriptive Size, appears on Purchase Orders for warehoused items. This tells our retail operations how many shelf units are in the warehouse pack (Itempack) Known as PACK_WHSE in SSITMCDS</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShipUnitWt" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Weight of a warehouse shipping unit (single case) to the retail store.(WarehouseWt)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShipUnitWtUOMCd" nillable="false" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StorageUnitDimensions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains warehouse storage unit dimensions of an item.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="WarehouseUnitWidth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the height of one warehouse case and is used to calculate the case cube size.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseUnitLength" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the length of a warehouse case and is used when calculating the case cube size.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseUnitHeight" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the height of one warehouse case and is used to calculate the case cube size.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseCube" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Warehouse case cube size in feet, of a warehouse unit. Recalculated when the width, length or height is changed.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseMeasureUOMCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field indicates the system of measure used for the warehouse width, length and height fields.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseUnitWt" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Weight of a warehouse shipping unit (single case).</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="WarehouseUnitWtUOMCd" nillable="false" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PalletLayer" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nbr of units that make up a layer on a warehouse pallet.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PalletHeight" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nbr of layers of cases on a warehouse pallet.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PalletStackLimitNbr" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the maximum Nbr of pallets that can be stacked on top of each other.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="WarehouseStationId" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This identifies a location within a warehouse. It is mainly used as a sorting sequence for the selection list.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="2"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Brand" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains item brand information.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BrandCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This Cd is used to indicate the brand Nm of an item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="BrandNm" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Brand Name</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Usage" type="UsageType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains Item Usage information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Billing" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains Item Billing profiles.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BillingTypeInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The billing type indicator indicates if the item is an
Average weight item (A) 
a Postbill item (P) or 
a normal item.
 Average weight means that the weight of the case varies from case to case. This is similiar to Postbill items except each case is not weighed as it leaves the warehouse. The stores are billed at the average cost per case. This field also indicates that the cost on the purchase order is LB or KG. Postbill replaces a status of P. Any programs that determine if an item is a Postbill item using warehouse status can now use this field.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="MultiDeptBillingInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>An indicator that an item can be billed (charged) to multiple departments. An indicator that an item can be billed (charged) to multiple departments.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TCACd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Transfer Charge Adjustment Cd used for Safeway Items so the store charge system can distribute TCA.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LitreEquiFactor" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Factor used to convert the whse pack into a standard litre measure for milk items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DisplayItemInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates that this is a display group item with rows in in the Display Group table.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AssortedPackInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies this as an assorted pack that contains many flavours. Multiple UPCs will exist for the item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NutriEnvirQualitiyInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This indicator shows if a product has nutritional or environmental qualities.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ManufacturerTypeInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> This column is used to indicate if an item is either:
 C = Coupon 
 G = Generic item 
 H = House brand item
 L = Local
 N = National Brand Item</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TariffItemCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is a 10-Nbr Cd used by Canada Customs, US Customs and Mexico Customs to group commodities. When used with a specific Tariff Treatment, it is used to group items that have the same rate of duty.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TariffTreatmentCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Cd indicating the treatment that goods are entitled to when calculating duty. This may be influenced by country of origin or trade agreements. Tariff Treatment Cds are only used by Canada and the US (as of 12/31/1994), so we use our own Cds for importations into Mexico.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RestrictedDrugItemInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field restricts, by province, the selling of this item to stores which have a pharmacy.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="12"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HealthMarkInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if Healthmark bibs are to be printed instead of labels.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="JurisdictionInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This switch indicates that there is POS jurisdictional information setup for this item in tables PSJURITM or PSJURTAR.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BottleDepositInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This switch indicates that there is a bottle deposit information setup for POSJurisdiction in PSJURITM</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BottleDepositCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to reference the value of bottle deposits charged at the check stand. Also used to reference a table keyed by province.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BestBallInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This column is used by the system to indicate whether the item is a best ball item. For example it may be used in conjunction with CPS (corporate purchasing warehouse system) to denote a best ball item . It is maintained via the MEC030 program.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="IncompatibilityCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Incompatibility Cd. A 2 digit Cd that indicates an incompatibility condition or reason that prevents an item from being loaded with other items. This is only for produce items. Default is spaces.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ScalePretextInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An indicator to identify if the item has pre-text associated with it. If so the pre-text will be displayed on the department scale User Interface and label appended to the beginning of the text associated to the item. For example:  W - Wild  F - Farm Raised</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="COOL" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains COOL (Country of origin Label) data</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CountryOfOriginItemInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>An indicator to identify items that contain Country Of Origin Labeling (COOL) information. </xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="CountryOfOriginLabelingClassCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This identifies the Classification for a COOL UP/PLU. For example BEEF LAMB PORK FARM FISH WILD FISH will each be considered distinct classifications for COOL. The information is used in the scale UI to control what options are available to create Custom COOL.  This field will having the following values (but not limited to these values)  000 - All Categories  001 - Beef  002 - Lamb  003 - Pork  004 - Wild Fish  005 - Farm Fish  006 - Other Category  ...  999 - Other Category</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BiologicalTerrorActInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies whether item is covered by the United States Public Health Security and Bioterrorism Preparedness and Response Act of 2002 (the Bioterrorism Act). For more information on the Bioterrorism Act please refer to the FDA web site: http://www.fda.gov/oc/bioterrorism/bioact.html This indicator field will be maintained on the host and downloaded to other systems as needed.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HACCPCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field will contain the valid Hazard Analysis and Critical Control Point (HACCP) Cds.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EthnicItemTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A 2-character Cd that identifies the ethnicity by which an item might be classified.  Example: IT, MX, AS, IN</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SeasonalItemTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A 2-character Cd that identifies the seasonal Cds by which an item might be classified.  Example: EA, VL, HW, SG</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SeasonalItemTypeNm" type="xs:string" minOccurs="0"/>
			<xs:element name="SpecialPackagingTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A 2-character Cd that identifies the special packaging type in which an item might be physically packaged.  Example: BP, VP</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrganicItemInd" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OneTimeBuyInd" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BranchItemCd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the old five digit item Cd used with the MCL branch to identify an item. This is Used to interface to detail files systems not converted to corporate item Cd and divisional users. It is sometimes referred to as Division Item Cd.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeCustomerInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When this switch is set (Y) the deposit should not be charged to the store in cost or retail as the store will crush the containers.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AlternateCIC" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="8"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SubstituteCIC" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CIC eligible to substitute. Source it from SSITMSUB not WDS</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="8"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DealInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> indicates deals or pending deals on items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RestrictedItemInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> identifies items that can only be ordered on certain days of the week.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FullCasePack" type="xs:short" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used by milk plant to indicate the size of container used to ship multiple warehouse units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductionWeight" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the production weight of the item not including the package or container. Remarks: Assigned by the buying departments. Most commonly used by the Milk and Bakery departments.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SelectedItemCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An indicator used to identify what type of store may purchase an item affiliated with this column. To control items from selling to outside customers.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RandomWeightCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies which items have a random weight for the warehous unit.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShelfLifeDys" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The default shelf life days used by WIMS if the shelf life on WIMSUB is missing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PullDateInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Communicates to the warehouse whether or not the item carries a Code Date Expiration.  ' ' - No (default), 'Y' - Yes, item has Code Date.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OnOrderingInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Signals that the item is to be ordered by WIMS.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderModelCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item order model type Cd for WIMS ordering. Sales determine the order model. R for Retail sales.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ForcedQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A specific quantity that must be ordered by the stores.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BackOrderedQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows a specific amount to be held in reserve.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemLeadTime" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This value is the time from when an order is placed until delivery by the vendor. Remarks: overrides the vendor lead time for this item. Expressed in weeks. Each 0.2 represents 1 day.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderPackQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains a Nbr of vendor units. WIMS will attempt to order in multiples of this quantity. Remarks: If not present WIMS uses the pallet pattern to determine order quantity.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BuyerCaseCube" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to calculate a cube order within WIMS Remarks: This is used when we have a cube vendor and the cube is a unit of the OQ pack not the case as on the Warehouse Table. Used with Kellogs or bulk items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SeasonalWeekNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>These are week Nbrs that will bring an item to a buyers attention when that week Nbr is reached. Remarks: A week Nbr here will bring up any item when a buyer needs to review it again (ex Easter, Christmas etc.).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemClassCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates what type of item this is in terms of its buying strategy.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SupplySourceType" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Distinquishes the different types of finished products and materials in supply corporations. Other than where noted, these values only appear on supply plant rows.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CMRNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Id of the Commodity Marketing Representative responsible for selling the item to Safeway.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemHandlingCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the type of handling required for this Item in a Store, to help determine resource planning.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StateRestrictions" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Province or State restrictions on an item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DSDReceivingInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This column indicates if the item is on the new DSD system,  meaning, vendor product lines, dominant vendor and cost calculations are done, and specific store authorizations are set up for this item. (NewItemonDSDsw)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SpecialMessageCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field will be used to print special messages on shelf labels (i.e. OTB - One Time Buy).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ButterfatPercent" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Decimal ratio expression used as a multiplier to determine percent of butterfat in milk and milk products</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="4"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StackabilityCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>It is a Cd that is used to indicate the relative ability of an item to be stacked in a pallet</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ReserveQty" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reserve qty need to be kept in warehouse for an item.</xs:documentation>
					<xs:documentation/>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SafetyStockQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This the Safety stock for the item when it was last allocated by the Daily Allocation program. Note SAFETYSTOCK will be calculated and saved to SSITMWDS if the Vendor for this item is allocated. </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InitialOrderQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the Initial Order quantity recommended by the Daily Allocation to meet Service Level. Initial order quantity will be stored in Warehouse units.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OverseasReferenceNbr" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used as a reference key to allowance rates in WMALMOVS. Used for items shipped thru ocean carriers to Hawaii and Alaska.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionalOrderDt" type="xs:date" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the Dt when the buyer wants the system to buy the promotion amount entered by WMC470.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvestmentOrderDt" type="xs:date" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates when the buyer wants the system to buy the investment amount entered from WMC470.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WarehouseInterfaceInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether or not an item should be included in the interface file, i.e. Item Download with the Tandem.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WarehouseLotCd" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RebillPartyInd" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InternetItemInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A switch that identifies whether an item is sold over the internet. Valid values are:  Y - Item is an internet item,  blank,  N - Item is NOT an internet item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BuyingProcessCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Cd that designates the business process used for buying an item at t he warehouse level. CDefault value is   which means SIMS-Inforem CA - means Agribuys/REQ process.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PurchaserId" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An Id of the individual who purchases items. This is a redefinition of a Buyer. What one Grocery/GMHBC buyer does today (forecasting and purchasing), Produce and Meat split amongst separate people (forecaster, and purchaser). This is because grocery/gmhbc items have a regular primary vendor who is almost guaranteed to be able to supply what Safeway needs, whereas produce and meat do not have a steady supply and must go to multiple growers to buy from (weather, crop failure, etc). The Commodity Supervisor job title may change, so Purchaser is used, as it correctly indicates the function while still being different from Buyernum. In the DA application, the forecaster shows up as the WIMS Buyer, and the forecasters name and telephone Nbr show up on the P/O header. The forecaster needs to show up as the WIMS buyer because he/she is the one ultimately responsible for making sure inventory levels are as they should be. The purchaserid will show up on the PO detail. One Forecasters items could be sourced by multiple purchasers in the Meat/Produce worlds.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemSetNbr" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Nbr used to identify a set of items. An item set is some grouping of warehouse-items (SKUs) determined by the users as being a logical grouping of items for a purchaser to work with. Could be Chickens, Pork;Chickens and Pork;, whatever and however the users department wants to split their workload out amongst its staff. Today, item sets are used in the MSP (Meat Seafood Procurement) system. It was added to the REQ Recap and Worksheet screens for Meat and Produce users to give them a flexible, non-SMIC related way to group items. Unlike Grocery and GMHBC users who purchase by primary vendor, Meat and Produce do not have primary vendors, buying instead from whichever grower has available product.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransferLevelCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The level at which the product should be transferred in or out of this warehouse. Required if Transfer Level Method Id is present. Transfers from satellite warehouse to main warehouse.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:short">
						<xs:totalDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TransferLevelMethodId" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Cd identifying the method on which the trasfer level is dependent. If the trasfer method is D, then the transfer level will be multiplied by the warehouses required Nbr of days supplied. If the transfer method is P, then pallets indicate the tansfer level. If the transfer method is C, then cases indicate the transfer level. Required if Transfer Level is present.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PickToLightCaseUnitQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Numeric Nbr which holds the total Nbr of units which make up a case in a PLANT. This Nbr is used throughout the picking process to determine how many cases + single units are needed to fill an order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PickToLightFullPalletInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Y/N indicator used to identify whether an item is stored/shipped as a full pallet.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ScanItemInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item is ready for scanning for LOT Tracking at the warehouse</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WarehouseAltId" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alternate identifier for a warehouse like old warehouse id.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DistributionCenterAltId" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alternate identifier for a DC like old DC id.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataExtractInd" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates warehouse readiness to receive extracted orders for fullfilment.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrgMasterNameType" type="OrgMasterNameType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="DefaultWarehouseItemInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The indicator to show either the Mcl/Br (Mcdonolds Consolidated Branch)         
                                                  Item Code or Warehouse Item ID on the screen.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ROGRetailItemType">
		<xs:annotation>
			<xs:documentation>Contains Item information from Retail context at ROG level. Item sold in retail stores.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId"/>
			<xs:element ref="Abs:DivisionId"/>
			<xs:element ref="Abs:ROGCd"/>
			<xs:element name="RetailScanCd" type="Abs:UPC">
				<xs:annotation>
					<xs:documentation>Contains scan code of the item used at retail POS</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorporateItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines related CICs at ROG level for a UPC.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="CorporateItemCd" minOccurs="0"/>
						<xs:element name="PreferredSeqNbr" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UPC can be related to multiple CICs and preferred sequence Number identifies CIC preference in cross reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="UPCType" minOccurs="0"/>
						<xs:element name="CorporateItemStatus" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of CIC at ROG level.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="StatusCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="5"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="StatusDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="StatusEffDt" type="xs:date" minOccurs="0">
										<xs:annotation>
											<xs:documentation>ex: The Dt the Status at ROG changed from New to Valid.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CreateDt" type="xs:date" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Item create date at ROG level.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="DisplayItemInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates that this is a display group item with rows in in the Display Group table.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemUsageType" type="UsageType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductHierarchy" type="ProductHierarchy"/>
			<xs:element name="ItemDsc">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="POSItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Abreviated Dsc of the item that will appear on scanner store receipts.</xs:documentation>
								<xs:documentation>Dsc of the item in retail POS.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RetailItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of item in Retail systems.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InternetItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dsc used in internet for various promotions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseItemDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the Dsc of a warehoused item. It contains the brand and Dsc of the item. The brand occurs first. The space after the brand is located using the column brand end position. The space before the flavor/type in the Dsc is located using the column SUFFIXPOS.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="VendorItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item Dsc provided by the vendor</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemId" type="ItemId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Other standard identifiers for an item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceLookUpCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the PLU to be used for the paper coupon This is the PLU for the item in this ROG. It is used by stores to enter into the cashiers scanner instead of the UPC for items that have no UPC, such as produce items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShelfUnitDimensions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains Retail Shelf Item measurements stored at Corporate level.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ShelfUnitSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The generic size of goods. It may be actual size Example: 340 g or a unit type (packet). For SSITMSGNTABLE - Common Sign Size, the size Dsc associated with the Common Sign Cd for the Common Retail Cd.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The size of the product as a numeric quantity that can be used in in calculations as compared to SIZE-DESC, which is a descriptive size for printing.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="12"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SizeUOMCd" nillable="false" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternateSizeInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Specifies that an alternate size may be substituted.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternateSizeDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This column allows user to specify an alternate size Dsc for an item on a purchase order.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemHeight" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The height of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemDepth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The depth of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWidth" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The width of the actual shelf item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemPackUOMCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UOM for shelf item pack measuremenmts.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="12"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemWtUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InnerPackQty" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Nbr of non-decomposable units in the selling unit.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="4"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ShelfPackageCd" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>type of shelf package in which an item is sold (box, can, bottle, etc.). This is also used to show the type of material of which a container is made (glass, plastic, aluminum, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RetailShelfUnitDimension" type="RetailShelfUnitDimensionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the dimensions of the item available in a retail facility shelf, unlike defined at corporate level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleUnitDimension" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Netweight" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Net weight of the product.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="NetWeightUOM" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unit of measure for net weight.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScalePackageType" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates package type used.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Packagesize" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the package size used.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Packagecolor" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the package color used.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PackagesoakpadInd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if package soak pad was used.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of an item at ROG level. UPC status.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StatusCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="StatusDsc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="StatusEffDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>ex: The Dt the Status at ROG changed from New to Valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CreateDt" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item create date at ROG level.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CommonItemGroup" type="CommonGroupType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains various types of common groups to which an item belongs to.
These common Cds are used for different purposes like Promotions, Pricing or Costing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSourcingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>contains various types of item sourcing at ROG level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DSDInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item sourcing by vendor direct Store delivery.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item sourcing from internal warehouses.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ManufacturingPlantInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>sourced from manufacturing plants like milk plant, bread plant.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WholesaleInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>sourced from a wholesaler, delivered as DSD or cross dock at internal warehouse.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StoreCreatedItemInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Items created within the store depts like Bakery, deli..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemSourcingFacilityDivisionId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Division to which the sourcing facility belongs to. Generally a supply division id.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemSourcingFacilityId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Preferred internal sourcing facility id like warehouse id or plant id for the retail item at the rog level.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RetailSection" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="RetailStoreLevelAttributes" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines optiional item attributes manitained at a store level for a ROG level item.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="Abs:RetailStoreId" minOccurs="0"/>
						<xs:element ref="CorporateItemCd" minOccurs="0"/>
						<xs:element name="ItemSourcingType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>contains various types of item sourcing at retail facilities level.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DSDInd" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Item sourcing by vendor direct Store delivery.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="WarehouseInd" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Item sourcing from internal warehouses.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ManufacturingPlantInd" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>sourced from manufacturing plants like milk plant, bread plant.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="WholesaleInd" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>sourced from a wholesaler, delivered as DSD or cross dock at internal warehouse.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="StoreCreatedItemInd" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Items created within the store depts like Bakery, deli..etc</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="WICItemInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if the item is part of the WIC (women Infant children) program by jurisdiction. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FSAEligibleInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Flexible spending Account eligilibility indicator.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BottleDepositCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to reference the value of bottle deposits charged at the check stand. Also used to reference a table keyed by province.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="3"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Brand" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains item brand information.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BrandCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This Cd is used to indicate the brand Nm of an item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="BrandNm" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Brand Name</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RingTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how the price is determined for items with PLUs and UPCs.Indicates how an item is being sold by, like each or by random wieght.
Valid Ring Type Codes are:
• "0" - Price on file
• "1" - Random Dollar - weight 
• "2" - Random Weight 
• "3" - Store Coupon
• "4" - Vendor Coupon   
• "5" - Random Dollar – each</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PrimaryCSCInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates that this particular UPC is primary in case of multiple UPCs in a CSC- Consumer Selling code.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PrimaryUPCInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Since a  CIC can have mutiple UPCs associated with it over a period of time, need to identify one of the UPC as primary for pricing and ordering perspective.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DemographicCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Cd that will allow future monitoring of the items by demographic areas in NSC stores only.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FoodStampCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicated if Food Stamps may be used to purchase this item</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HiconeInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if a hicone (plastic collar) is used to fasten several items together (e.g. a six pack of canned drinks). Remarks: refer to the store level options for the handling of hicones.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TradingStampCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the item is eligible for trading stamps.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SalesRestrictionCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if sale of the item is to be restricted when the store activates limited sales. (eg. no alcohol on Sundays).  Remark: Refer to the store level options as well.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorCouponGroupCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The group classification of vendor coupons. Remark: Not currently used</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MixAndMatchGroupCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to group items that may be mixed in multiple pricing schemes. Allows correct use of the price factor.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DepartmentOverrideCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies a PSUEDO department used for reclassification of the item into a specific department at store level while retaining its correct department Cd at host.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceMeasureNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Use in the calculation of unit price for each item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceMeasureCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unit Price Measure Code.  A code that represents the number of  'ounces' in a Consumer unit.  eg 
 12.0 Fl Oz,  or whatever unit pricing unit is being used.  eg. 32.0 Oz,
 64.0 Oz,  2.0 lb etc.          </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceTableCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unit Price Table Number </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:totalDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceMeasureUnit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>selling unit size   Size of the selling unit to be expressed in label units for customer cost comparisions. </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceLabelUnit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Label price unit. Unit of measure that price will be per on labels.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UnitPriceMultiFactor" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unit price multiplication factor. A mathematical conversion factor used to convert each Unit of Measure. 
  OZ==> LB(16) , LB ==> OZ,(1/16) OZ ==> QT (32)......etc.       </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PricerCommentTxt" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is a free format comment area for the pricer</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ReviewCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used for new item setup for the ESLS people.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LastFileMaintenanceDt" type="xs:date" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dt of the last POS file maintenance transaction for this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleData" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ScaleShelfLifeUseByDays" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Orginally obtained from, the SSOTMWDS shelf life field the correct naming of this variable should have been USE BY DAYS. This is the Nbr of days the product can be safely used by the consumer before they should discard the product.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="4"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleMessageCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Specifies a message to be printed on the store scale.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="2"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleActionNbr" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action Nbr for Hobart scales. Used to control the external labeller.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="3"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleDestCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A value that will point to a Retail Network component. I.E. Bakery printer or Deli Scale</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="3"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleGradeCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the grade.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleActionCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the action Cd that works with the action Nbr field for the hobart scale system</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="1"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SellByDaysNbr" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the Nbr of days the product should be sold by.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ScalePullByDaysNbr" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The proper naming of this variable should have been: PULL BY It indicates the Nbr of days the product should be allowed on the shelf, before it should be PULL OFF the shelf.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ScaleGraphic1Nbr" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is a Nbr that is transmitted down to the store scales. This Nbr instructs the scale labeller what type of graphic to print on the food label</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="3"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleGraphic2Nbr" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is a Nbr that is sent down to the hobart scales. It tells the scale labeller what type of graphic to print on the food label.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="3"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScalePLUCd" nillable="false" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="5"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleNetWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="8"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScaleNetWtUOM" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ScalePackageType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="ScalePackageColour" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="ScalePackagePad" type="CodeWithDescription" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CouponTypeInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the item is a coupon or not. If it is a coupon it indicates the type of coupon or voucher.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CouponFamilyCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>New coupon family Cd. Set up by batch program and sent to the stores by POS. This is a Nbr assiged by the products manufacturer which is used at the checkstand to verify vendor coupons</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PricerequiredInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies that the cashier must key in a price for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NonCashAccountNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The account for recording non-cash sales at the store.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NonCashAccountType" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of account for recording non-cash sales at the store.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemLabelType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines labels needed for the eitem in retail shelf.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="LabelType" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of the label</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LabelCnt" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of labels needed for the item.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LabelPrintType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="LabelSizeType" type="CodeWithDescription" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SignCount1" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> SGNCOUNT1 is the count of TALKER signs for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SignCount2" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> SGNCOUNT2 is the count of the MOULDING signs for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SignCount3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>SGNCOUNT2 is the count of the DISPLAY signs for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NIMInfoInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is a switch that if set on Y indicates that the Nutritional Ingredient Maintenance (NIM) system has information for this row of SSITMPOS.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SubClubGroup1Id" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sub Club Group One Id. Identifies the first electronic marketing promotional group to which this item can be associated.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SubClubGroup2Id" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sub Club Group Two Id. Identifies a second electronic marketing promotional group to which this item can be associated.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="GiftCardTypeInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gift Card Type Cd indicates if the item is a gift card item. Valid values are:   - Not a gift card item. S - Safeway gift card item redeemable at any Safeway store. 1 - An external gift card redeemable at any of our partner retailers.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrganicItemInd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HazardousItemInd" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether the item is considered hazardous or not. Corresponding hazardous class information will be available in MEHPITM table.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HazardousClassCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="HazardousClassDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of hazardous class information, available in MEHPITM table.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrgMasterNameType" type="OrgMasterNameType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemPriceType">
		<xs:annotation>
			<xs:documentation>Contains item pricing information from retail sale point of view. Item prices are dynamic in nature and changes by retail store facility location, time period and marketing events like promotions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element ref="ROGCd"/>
			<xs:element ref="PriceAreaCd" minOccurs="0"/>
			<xs:element ref="Abs:CorporateItemCd" minOccurs="0"/>
			<xs:element name="RetailScanCd" type="Abs:UPC"/>
			<xs:element name="UPCComponents" type="UPCComponentsType" minOccurs="0"/>
			<xs:element name="ProductHierarchy" type="ProductHierarchy" minOccurs="0"/>
			<xs:element name="ItemDsc" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="POSItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Abreviated Dsc of the item that will appear on scanner store receipts.</xs:documentation>
								<xs:documentation>Dsc of the item in retail POS.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RetailItemDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of item in Retail systems.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InternetItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dsc used in internet for various promotions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseItemDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the Dsc of a warehoused item. It contains the brand and Dsc of the item. The brand occurs first. The space after the brand is located using the column brand end position. The space before the flavor/type in the Dsc is located using the column SUFFIXPOS.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="VendorItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item Dsc provided by the vendor</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EffectiveStartDt" type="xs:date" minOccurs="0"/>
			<xs:element name="EffectiveEndDt" type="xs:date" minOccurs="0"/>
			<xs:element name="PriceMethodCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the method of item pricing.
G = Group Price Method – if customer is purchasing in groups (Limit Quantity), Alternate Price is used.  Items not purchased in these groups are charged at        Regular Price.
M = Minimum Price Method – if customer purchases a minimum amount (Limit Quantity), Alternate Price is used.  If customer purchases below a minimum        amount, Regular Price is used.
R = Regular Price Method – Regular Price is always used.
L = Limit Quantity Pricing – if customer purchases an amount under the limit (Limit Quantity), Alternate Price is used.  If customer purchases an amount over the limit, Regular Price is used. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemLimtQty" type="xs:integer" minOccurs="0"/>
			<xs:element name="ItemPriceAmt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the retail price charged to the customer for each shelf unit, or if the price factor is > 1, for price factor number of units. EG. It is the '.99 cents' in '2/.99 cents'. It is also used as the over the limit price.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="12"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemPriceFactor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the number of shelf items received for the price e.g. it is the '2' in '2/99 cents'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternatePriceAmt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is an alternate price charged if Price Method is not R and the Limit Quantity purchased.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="12"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AlternatePriceFactor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of items that are associated with the Alternate Price, ie: the 2 in “2 for $1.80.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReasonCd" type="xs:string" minOccurs="0"/>
			<xs:element name="PriceChangeDt" type="xs:date" minOccurs="0"/>
			<xs:element name="SensitiveItemCd" type="xs:short" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sensitive item code identifies the pricing strategy assigned to the item's category and the targeted competitor type as defined at SCOP sessions (if the category has been through SCOP); it can change by Price Area.  If multiple sensitivity values apply and Pre-priced is one of those values, a '9' must be entered in the Sensitive Item field. Pre-priced overrides everything at the ROG level.  Item sensitivity automatically copies to all items that share a Common Retail Code; there is no turn-off option.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SensitiveItem" minOccurs="0"/>
			<xs:element name="RegularRetailItemPriceAmt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the regular billing store retail that was last seen at the store by the consumer. If the item is currently on regular retail, this will be the same as the retail in the PRICE column. If the item is currently on LTS, this column will contain the retail of the item prior to being on LTS - it will not match the retail in PRICE. If the item is currently on Ad (and not on LTS), it will contain the retail of the item prior to being on Ad - it will match the retail in PRICE. If the item is currently on both Ad and LTS, it will contain the previous regular (non-LTS) retail - it will not match the retail in PRICE, since that would be the LTS retail.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="12"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RegularRetailItemPriceFactor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the price factor associated with the underlying Regular Price fields.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegularRetailItemAltPriceAmt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the alternate price associated with the underlying Regular Price fields.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="12"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RegularRetailItemAltPriceFactor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the alternate price associated with the underlying Regular Price fields.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegularItemLimitQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>limited quantity associated with the underlying Regular Price fields.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceChangeReasonCd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>contain the price change reason, whether it was an advance or decline, that occurred prior to the current LTS or AD.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BIBTypeCd" type="xs:string" minOccurs="0"/>
			<xs:element name="BIBTagNbr" type="xs:string" minOccurs="0"/>
			<xs:element name="SignHeaderId" type="xs:string" minOccurs="0"/>
			<xs:element name="SignTypeCd" minOccurs="0"/>
			<xs:element name="SignCount1" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> SGNCOUNT1 is the count of TALKER signs for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SignCount2" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> SGNCOUNT2 is the count of the MOULDING signs for this item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SignCount3" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>SGNCOUNT2 is the count of the DISPLAY signs for this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongTermSpecialInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>shows whether or not a UPC price is an LTS. (Long Term Special)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdvertisedPriceInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>shows whether or not a UPC price has an AD currently running.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreItemOverrides" minOccurs="0">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element ref="RetailStoreId" minOccurs="0"/>
						<xs:element name="RetailScanCd" type="Abs:UPC" minOccurs="0"/>
						<xs:element name="EffectiveStartDt" type="xs:date" minOccurs="0"/>
						<xs:element name="EffectiveEndDt" type="xs:date" minOccurs="0"/>
						<xs:element name="PriceMethodCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identifies the method of item pricing.
G = Group Price Method – if customer is purchasing in groups (Limit Quantity), Alternate Price is used.  Items not purchased in these groups are charged at        Regular Price.
M = Minimum Price Method – if customer purchases a minimum amount (Limit Quantity), Alternate Price is used.  If customer purchases below a minimum        amount, Regular Price is used.
R = Regular Price Method – Regular Price is always used.
L = Limit Quantity Pricing – if customer purchases an amount under the limit (Limit Quantity), Alternate Price is used.  If customer purchases an amount over the limit, Regular Price is used. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItemLimtQty" type="xs:integer" minOccurs="0"/>
						<xs:element name="ItemPriceAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the retail price charged to the customer for each shelf unit, or if the price factor is > 1, for price factor number of units. EG. It is the '.99 cents' in '2/.99 cents'. It is also used as the over the limit price.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="12"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ItemPriceFactor" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the number of shelf items received for the price e.g. it is the '2' in '2/99 cents'.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AlternatePriceAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is an alternate price charged if Price Method is not R and the Limit Quantity purchased.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="12"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AlternatePriceFactor" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The number of items that are associated with the Alternate Price, ie: the 2 in “2 for $1.80.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ReasonCd" type="xs:string" minOccurs="0"/>
						<xs:element name="CommonCdUsedInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if Common Code was used to create Bib.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PromotionInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This indicates if the item is on Ad or Long Term Special on the delivery date, as 'out of stock's do not have the selection list quantity adjusted for ADs, or LTSs.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceOverrideInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This tells the POS system that the normal price precedence rules do not apply, and that this price will override LTS and regular prices</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BIBTypeCd" type="xs:string" minOccurs="0"/>
						<xs:element name="BIBTagNbr" type="xs:string" minOccurs="0"/>
						<xs:element name="SignHeaderId" type="xs:string" minOccurs="0"/>
						<xs:element name="SignTypeCd" minOccurs="0"/>
						<xs:element name="SignCount1" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation> SGNCOUNT1 is the count of TALKER signs for this item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="1"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SignCount2" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation> SGNCOUNT2 is the count of the MOULDING signs for this item.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="1"/>
									<xs:fractionDigits value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SignCount3" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>SGNCOUNT2 is the count of the DISPLAY signs for this item.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceChangeBy" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>UserId of the person changed the price</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceChangeTs" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date and time when the change happened.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PriceWarInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The price war flag indicates that this item is involved in a price war with competitors in this price area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginTxt" type="xs:string" minOccurs="0"/>
			<xs:element name="PricingStatus" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StorePriceStatusInd" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This byte indicates the status of the price at the store. Sample values: 0
1
6
7
8
9
</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItemPreviousStatusInd" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The previous status of the item before the POS system set the current status. POS maintained.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceRecordStatusInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This byte indicates the status of this record. Possible values are X, N, D</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="POSPriceResendInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is on then POS must resend this price to the store group Remarks: POS Should reset to blank after use</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SendPriceInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to indicate if and what combination of the of the PLU and UPC we want sent to the store</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrevSendPriceInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to hold the last value of SEND_PRICE_SW so the POS system can determine what change has been made</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SendShelfLabelInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to indicate if we want to send a shelf label to the store for this item</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegularPriceMethodCd" type="xs:string" minOccurs="0"/>
			<xs:element name="SendBIBInd" type="xs:string" minOccurs="0"/>
			<xs:element name="SendNewItemBIBInd" type="xs:string" minOccurs="0"/>
			<xs:element name="RegularReasonCd" type="xs:string" minOccurs="0"/>
			<xs:element name="PromoEndDt" type="xs:date" minOccurs="0"/>
			<xs:element name="CommonId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Common code links items with common pricing structures.  All packs of 60 gm jello jelly powder will have the same common code. They will get the same price. When used with the cost subcode similar packs will </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdSelectId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is an interanl identification number used by the Merchandisers to separate ADs that run in the same period.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="POSPriceSendInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by the Point of Sale system to determine if the price has been sent to the stores.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MasterUpdateProcessInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This byte is used to indicate that the Master Updating program has already processed the pending record.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PendingPriceReasonCd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This switch tells POS if the price is an advance or decline Remarks: Must be set by file maintenance program</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UnitTypeNbr" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shows which of the Consumer, Multipack, or Case UPCs is used to make up the right 5 digitis of the UPC. One of these must be chosen.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BillingDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the effective Billing Date for the stores. In most cases this date will be the same as the Effective Date for a Retail Price Change. For selected LTS items the Billing Date can be set to be BEFORE the Effective </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChangeDtTm" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the date and time when the last change was made to the information on a table row.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OldItemPriceAmt" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Old item price as represented in SSPENPRC PRICE_O</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OldItemPriceFactor" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Old Item Price Factor as represented in SSPENPRC PRICE_FCTR_O</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PharmacyItemType">
		<xs:annotation>
			<xs:documentation>Contains Pharmacy drug item information</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="ExpenseItemType">
		<xs:annotation>
			<xs:documentation>Contains Items from Expense context like items needed to perform the operations in albertsons facilities like tools, equipment, cleaning supplies, stationary, furniture..etc</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="ItemVendor">
		<xs:annotation>
			<xs:documentation>Contains vendor information related to the Item procured in a warehouse or store.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="VendorId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate vendor Nbr that uniquely identifies a vendor within a corporation. A vendor is a Company we purchase from. VEND-NUM is generally used with Vendor Sub-Account Nbr (VEND-SUB-ACNT) or WIMS Sub-Vendor Nbr (WIMS-SUB-VEND).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorSubAccountNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies a particular outlet of a company we purchase from. EG. The Vancouver outlet of Nabob. This is used by the Accounts Payable System</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WarehouseVendorId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the WIMS Vendor Nbr set up by the Buyer. The first character of the Nbr indicates the location e.g. V - Vancouver, E - Edmonton.  Buyer/Merchandisers may break a Vendor outlet into different WIMS Vendors to suit their own purposes. Some of the reasons a Vendor may have several WIMS Vendor records are: 1. Several Buyers buying from the same Vendor. 2. A buyer buying different commodity groups from the same Vendor. 3. A Vendor offering different purchasing terms on different product lines. 4. A Buyer buying some products through a Broker and some directly from the Vendor.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BDRVendorId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique vendor id within store Back door receiving system.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PACSVendorNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This identifies the U.S. PACS/Tandem and OMI Char(8) vendor Nbr.  For warehouse vendors, the first four digits in PACS Vendor Nbr are the last four digits in the Corporate Vendor Nbr (VEND-NUM).  In DSD, the system generates a PACS Vendor Nbr after Cost Areas are added for a distributor. For vendors less than 10000, the PACS Vendor Nbr consists of: - The last four digits of the Corporate Vendor Nbr (VEND-NUM), plus - The three-digit Vendor Sub Account Nbr (VEND-SUB-ACNT), plus - The one-digit Cost Area. SSVENXRF</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorConversionFactor" type="xs:short" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Factor used to convert a vendor pack to a warehouse pack.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorUPC" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies thevendor UPC.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorProductNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A short version of the Nbr used by the vendor to identify their products.  When it was found that vendors had internal reference Nbrs that were larger than 6, a new CHAR(12) element was set up, VEND-PROD-CDE on the SSITMVPL table. The shorter VEND-PROD-NUM element was kept because of the many programs that have to be changed to use the longer version. text line:  USE VEND-PROD-CDE rather than VEND-PROD-NUM in new tables.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorItemDimensions" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="VendorPackCd" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The package in which the vendor unit is shipped. For example: case or bag, etc.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="VendorPackCube" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Warehouse case cube size in feet, of a warehouse unit. Recalculated when the width, length or height is changed.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PalletLayer" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nbr of units that make up a layer on a warehouse pallet.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PalletHeight" type="xs:short" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nbr of layers of cases on a warehouse pallet.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItemUnitNbr" type="xs:integer" minOccurs="0"/>
						<xs:element name="ItemSizeNbr" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UOMCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VendorCostAreaCd" type="xs:short" nillable="false" minOccurs="0"/>
			<xs:element name="VendorServiceLevel" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Minimum service level desired for the Vendor; ratio of dollar value shipped to dollar value demand. This field is used by WMD510 - default value is 98.5.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorNm" type="xs:string" minOccurs="0"/>
			<xs:element name="VendorDUNSNbr" minOccurs="0">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="Qualifier" type="xs:string"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PrimaryVendorInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This flags who is the primary distributor for a Direct Store  
Delivery Item in a ROG and Price Area.                        </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorContact" minOccurs="0" maxOccurs="2">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ContactNm" type="xs:string" minOccurs="0"/>
						<xs:element name="PhoneNbr" type="xs:string" minOccurs="0"/>
						<xs:element name="EmailAddresstxt" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" type="Abs:AddressType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MerchHierarchyType">
		<xs:annotation>
			<xs:documentation>Contains product hierarchy information like group, class, category..etc to which a product belongs to in a dept/section.Same as prod hierarchy but to consume as it's own BOD</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProductGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductGroup" type="IdWithNameType" minOccurs="0"/>
						<xs:element name="RollOut" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="ProductCategoryCd" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ProductCategory" type="IdWithNameType" minOccurs="0"/>
									<xs:element name="RetailSection" type="IdWithNameType" minOccurs="0"/>
									<xs:element name="RetailDepartment" type="IdWithNameType" minOccurs="0"/>
									<xs:element name="SMICGroup" type="IdWithNameType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>SMIC group code for tax reporting, Also known as lifo pool cd.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MerchandiseGroup" type="IdWithNameType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A code that uniquely identifies a merchandising group description. It provides a finer breakdown of the existing merchandising departments.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SizeUOM" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="RollOut" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="ProductClass" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="ProductClass" type="IdWithNameType" minOccurs="0"/>
												<xs:element name="RollOut" type="CodeWithDescription" minOccurs="0"/>
												<xs:element name="ProductSubClassLevel1" minOccurs="0" maxOccurs="unbounded">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ProductSubClassLevel1" type="IdWithNameType" minOccurs="0"/>
															<xs:element name="RollOut" type="CodeWithDescription" minOccurs="0"/>
															<xs:element name="ProductSubClassLevel2" minOccurs="0" maxOccurs="unbounded">
																<xs:complexType>
																	<xs:sequence>
																		<xs:element name="ProductSubClassLevel2" type="IdWithNameType" minOccurs="0"/>
																		<xs:element name="RollOut" type="CodeWithDescription" minOccurs="0"/>
																		<xs:sequence/>
																		<xs:element name="BusinessUnitType" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Defines business units and groups(BUGM and BGGM) that owns and responsible for the procurement of items in a merchandise hierarchy level.</xs:documentation>
																			</xs:annotation>
																			<xs:complexType>
																				<xs:sequence>
																					<xs:element name="StockingSection" minOccurs="0" maxOccurs="unbounded">
																						<xs:complexType>
																							<xs:sequence>
																								<xs:element ref="StockingSectionId" minOccurs="0"/>
																								<xs:element ref="StockingSectionNm" minOccurs="0"/>
																								<xs:element name="PrimaryStockingSectionInd" type="xs:boolean" minOccurs="0"/>
																								<xs:element name="ParentStockingSection" minOccurs="0" maxOccurs="unbounded">
																									<xs:complexType>
																										<xs:sequence>
																											<xs:element ref="StockingSectionId" minOccurs="0"/>
																											<xs:element ref="StockingSectionNm" minOccurs="0"/>
																										</xs:sequence>
																									</xs:complexType>
																								</xs:element>
																							</xs:sequence>
																						</xs:complexType>
																					</xs:element>
																					<xs:element name="BusinessUnitId" type="xs:integer" minOccurs="0"/>
																					<xs:element name="BusinessUnitNm" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Business unit: a group of retail sections make up a business unit. E.G. the Cheese, Refrigerated, Milk, and Eggs retail sections make up the Dairy/Refrigerated business unit.</xs:documentation>
																						</xs:annotation>
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="250"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="BusinessGroupId" type="xs:integer" minOccurs="0"/>
																					<xs:element name="BusinessGroupNm" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Business group: a group of business units make up a business group. E.G. the Dairy/Refrigerated and Frozen business units make up the Dairy/Refrigerated/Frozen business group.</xs:documentation>
																						</xs:annotation>
																						<xs:simpleType>
																							<xs:restriction base="xs:string">
																								<xs:maxLength value="250"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																				</xs:sequence>
																			</xs:complexType>
																		</xs:element>
																	</xs:sequence>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductHierarchy">
		<xs:annotation>
			<xs:documentation>Contains product hierarchy information like group, class, category..etc to which a product belongs to.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProductGroup" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductGroupCd" type="xs:integer" minOccurs="0"/>
						<xs:element name="ProductGroupNm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductCategoryCd" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductCategoryCd" type="xs:integer" minOccurs="0"/>
						<xs:element name="ProductCategoryNm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductClassCd" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductClassCd" type="xs:integer" minOccurs="0"/>
						<xs:element name="ProductClassNm" type="xs:string" minOccurs="0"/>
						<xs:element name="RetailSectionCd" minOccurs="0"/>
						<xs:element name="RetailSectionNm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductSubClassLevel1" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductSubClassLevel1Cd" type="xs:integer" minOccurs="0"/>
						<xs:element name="ProductSubClassLevel1Nm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductSubClassLevel2" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ProductSubClassLevel2Cd" type="xs:integer" minOccurs="0"/>
						<xs:element name="ProductSubClassLevel2Nm" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemId">
		<xs:annotation>
			<xs:documentation>Contains various types of Ids for an item like UPC, GTIN ..etc</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UPC" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:UPC"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="UPCComponents" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UPC ID broken into individual Components.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="UPCComponentsType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="GTINID" type="xs:string" minOccurs="0"/>
			<xs:element name="VendorProductID" type="xs:string" minOccurs="0"/>
			<xs:element name="ManufProductId" type="xs:string" minOccurs="0"/>
			<xs:element name="SystemSpecificItemId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Like NDA id for Drugs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RFID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> NOT USED  :   Allows an instance of an item to carry any radio frequency Id (RFID) that maybe used by a supply chain.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternalItemId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Albertsons internal unique item Id. Ex Corporate Item Cd</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MCLBRNbr" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Branch identifier, to be used in conjucton with branch item code to make branch item cd unique. Old legacy identifier for warehouse items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BranchItemCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the old five digit item code used with the MCL branch to identify an item. This is Used to interface to detail files systems not converted to corporate item code and divisional users. It is sometimes referred to as Division Item Code.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="BaseProductNbr" minOccurs="0"/>
			<xs:element name="ItemDescription" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemForecastType">
		<xs:annotation>
			<xs:documentation>Contains item data related to supplychain procurement forecasting.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId"/>
			<xs:element ref="Abs:DivisionId"/>
			<xs:element ref="Abs:DistributionCenterId"/>
			<xs:element ref="Abs:WarehouseId"/>
			<xs:element ref="Abs:CorporateItemCd"/>
			<xs:element name="OnForecastingInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be used to prevent WIMS from forecasting for an item. Remarks: Used to set an item on or off WIMS.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ForecastModel" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Remarks: WIMS is presently set up only for horizontal.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SingleSmoothedValue" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Forecast info - separate msg?   An average of the Nbr of items sold in a week. It represents a forecast of next weeks demand. Remarks: A weighted average of the previous forecast and the previous weeks actual movement calculated using a smoothing factor (alpha).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ALPHAforSSV1" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Controls the percentage of the new single smoothed value that comes from the last weeks movement. The default smoothing factor is used in WIMS forecasting if the Alpha on SSITMWDS is zero. Used by WMW740 - default value is 0.15.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ALPHAforFastSmoothing" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A greater smoothin factor that is used when the SSV1 cannot keep up with the change in demand. The default fast smoothing on SSITMWDS is zero. This field is used by WMW740 and the default value is 0.30.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MeanAbsoluteDeviation" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A measure of the variability or deviation between projected and actual demand. Remark: Used in forecasting and safety stock calculations.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MADLowerLimitPercent" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The lowest value of MAD that is used in the WIMS forcasting routine during the tracking signal and demand filter tests. The MAD is checked against this percentage of the SSV1. If it is lower, a new MAD is calculated by multiplying this figure times the SSV1. This field is used by WMW740 and the default value is 0.10.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NextPeriodForecastNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Units expected to be sold next week. Remarks: Calculated on the last 6 weeks without any promotions being applied.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrackingSignalError" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The smoothed error that is calculated as a weighted average of the current error (difference between actual and projected demand) and previous error. Remarks: Divided by MAD to give tracking signal - this is compared to the tracking signal limit and will cause a tracking signal trip if greater.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrackingSignalCounter" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Determines whether fast smoothing is to be performed and when to change back to mormal smoothing when calculating the SSV1. A tracking signal trip will set this field to +9. It will be decremented by 1 each time the ssv1 is recalculated. It is used by WMW740. The default is 5.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DemandFilterCounter" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Nbr of continuous weeks there has been a demand filter trip. A demand filter trip is when the variation between actual and forecast demand falls outside specified limits. The SSV1 is not recalculated. This field is used by WMW740. The default value is 9.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OnOrderingInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Signals that the item is to be ordered by WIMS.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderModelCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item order model type Cd for WIMS ordering. Sales determine the order model. R for Retail sales.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ForcedQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A specific quantity that must be ordered by the stores.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BackOrderedQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows a specific amount to be held in reserve.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemLeadTime" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This value is the time from when an order is placed until delivery by the vendor. Remarks: overrides the vendor lead time for this item. Expressed in weeks. Each 0.2 represents 1 day.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderPackQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains a Nbr of vendor units. WIMS will attempt to order in multiples of this quantity. Remarks: If not present WIMS uses the pallet pattern to determine order quantity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeasonalWeeks" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>These are week Nbrs that will bring an item to a buyers attention when that week Nbr is reached. Remarks: A week Nbr here will bring up any item when a buyer needs to review it again (ex Easter, Christmas etc.).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Last4wkReceived" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The amount of warehouse units received in the last 4 week period.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Last4wkReceivedWeight" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The weight of the receivings during the last 4 week period.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Last4wkAdjusted" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The quantity in warehouse units of the adjustments made to the inventory or receivings in the last 4 weeks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastQuarterReceivedQuantity" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The receivings at the warehouse in warehouse units for the last quarter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastQtrReceivedWeight" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The weight of the receivings during the last quarter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastQuarterAdjusted" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The quantity in warehouse units of the adjustments made to the inventory or receivings last quarter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SafetyStockQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This the Safety stock for the item when it was last allocated by the Daily Allocation program. Note SAFETYSTOCK will be calculated and saved to SSITMWDS if the Vendor for this item is allocated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InitialOrderQty" type="xs:integer" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the Initial Order quantity recommended by the Daily Allocation to meet Service Level. Initial order quantity will be stored in Warehouse units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutoBuyInd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MinimumOrderQty" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Item Order Minimum - the minimum qty that should be suggested on a PO if the item is ordered</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MaximumOrderQty" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Item Order Maximum - the maximum qty that should be suggested on a PO if the item is ordered</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemSupplyLimitDys" minOccurs="0">
				<xs:annotation>
					<xs:documentation> item supply limit (value is in days)
it's the MAX amount of time supply that should be ordered on 1 PO</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DesiredServiceLevel" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>system generates a service level for each item based on forecasted volume out of the facility, and based on that collective forecast, each item is assigned a Classification value of A - F
A items would have higher service level requirements than F items
but in most cases, people don't want to know the actual service level % of the item, they just want to know it's classification</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecialWatchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Special watch is a flag that is manually set by the user, so he can use it as a filter for items that he wants to watch the forecast on - like maybe water and batteries if he knows there is a natural disaster occurring in his local area</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrgMasterNameType" type="OrgMasterNameType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemPendingCostType">
		<xs:annotation>
			<xs:documentation>Contains pending cost info for both DSD and Warehouse items in Supply Chain. Whse pending costs data comes from SSPENVCC and DSD pending costs from DSPENDCC in SSIMS.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemTypeCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if it s DSD or Warehouse item  costs. Values 'D' or 'W'.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorUnitCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the base cost charged by a vendor for the product for a vendor unit. It does not include allowances or discounts. VEND-CONV-FCTR is used to convert the cost from a vendor pack to a warehouse pack.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorCostEffectiveDt" type="xs:date" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This Dt should be set each time the vendor cost is changed in this table.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorCostChangeNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Vendors cost change Nbr: The Nbr assigned by the vendor to identify a cost change. The Nbr is alphanumeric.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="16"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CostChangeCreatedDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cost change created date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CostChangeCreatedBy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>User id / origin of cost change</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemPriceAreaVendorType">
		<xs:annotation>
			<xs:documentation>Contains item price area and dominant vendor cost area cross reference information to derive best possible cost for an item during an item pricing process.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element ref="ROGCd"/>
			<xs:element ref="PriceAreaCd"/>
			<xs:element ref="CorporateItemCd"/>
			<xs:element name="ItemDsc" type="xs:string" minOccurs="0"/>
			<xs:element name="CurrentVendor" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Current dominant vendor in a particular price area.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Vendor" type="ItemVendor" minOccurs="0"/>
						<xs:element ref="EffectiveTimePeriod" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FutureVendor" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Pending dominant vendors of an item in a price area with effective periods.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Vendor" type="ItemVendor" minOccurs="0"/>
						<xs:element ref="EffectiveTimePeriod" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemCostType">
		<xs:annotation>
			<xs:documentation>Contains cost of the Item information by facility, Vendor. In case of manufacturing plants, where M3 is hte source of this data, CIC, vendor and Warehouse information is not available. Item costs from M3 are at Division lelvel.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId"/>
			<xs:element ref="Abs:DivisionId"/>
			<xs:element ref="Abs:DistributionCenterId" minOccurs="0"/>
			<xs:element ref="Abs:WarehouseId" minOccurs="0"/>
			<xs:element ref="Abs:CorporateItemCd" minOccurs="0"/>
			<xs:element name="ItemId" type="ItemId" minOccurs="0"/>
			<xs:element name="ItemDsc" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="WarehouseItemDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the Dsc of a warehoused item. It contains the brand and Dsc of the item. The brand occurs first. The space after the brand is located using the column brand end position. The space before the flavor/type in the Dsc is located using the column SUFFIXPOS.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InternetItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dsc used in internet for various promotions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RetailItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dsc of the item in retail.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="VendorItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item Dsc provided by the vendor</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Vendor" type="ItemVendor" minOccurs="0"/>
			<xs:element name="SupplyDivisionId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Supply division id to which the manufacturing plant belongs to. </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="DepartmentId" minOccurs="0"/>
			<xs:element name="ItemShelfUnitSizeDsc" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The generic size of goods. It may be actual size Example: 340 g or a unit type (packet). For SSITMSGNTABLE - Common Sign Size, the size Dsc associated with the Common Sign Cd for the Common Retail Cd.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShipUnitPackQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The quantity of shelf units in a warehouse unit, or pack for the item at a corporate level. e.g. 24 shelf units in a warehouse unit. Nbr of consumer units per warehouse shipping pack (or store receiving pack for DSD) with Descriptive Size, appears on Purchase Orders for warehoused items. This tells our retail operations how many shelf units are in the warehouse pack (Itempack) Known as PACK_WHSE in SSITMCDS</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemTypeCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if it s DSD or Warehouse item costs. Values 'D' or 'W'.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorUnitCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the base cost charged by a vendor for the product for a vendor unit. It does not include allowances or discounts. VEND-CONV-FCTR is used to convert the cost from a vendor pack to a warehouse pack.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="VendorCostEffectiveDt" type="xs:date" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This Dt should be set each time the vendor cost is changed in this table.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorCostChangeNbr" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Vendors cost change Nbr: The Nbr assigned by the vendor to identify a cost change. The Nbr is alphanumeric.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="16"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemBillingCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the item billing cost of the item to Safeway stores per warehouse unit (usually case) at Dt of delivery.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemBillingCostEffectiveDt" type="xs:date" minOccurs="0"/>
			<xs:element name="InventoryCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the inventory cost used for calculating warehouse markdowns determining the value of inventory. For an item with multiple lots it is the inventory cost on the last lot received. This field is used by the Batch programs to upDt the extended inventory cost fields on the Item Destination AccumulatorTable SSITMACC AP Definition: The cost used to determine the value of inventory.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InventoryCostEffectiveDt" type="xs:date" minOccurs="0"/>
			<xs:element name="LotInvCost" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AllowancesIncludedInCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the sum of the allowances included in the item billing (IB) cost (Vendor Cost = IB Cost + Allowances).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AllowancesExcludedInCost" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the sum of the allowances not included in the IB cost.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SwellAllowancePercent" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Swell Allowance Rate. Swell Allowance is expressed as a percentage. This is a discount the Vendor offers for all items attached to the WIMSUB. The discount is to account for damaged or spoiled items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FreightAllowanceAmt" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the rate of the freight allowance. This allowance is offered to us since they do not deliver the goods to our warehouse.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FreightAllowanceTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how the freight allowance is calculated. An allowance is some form of moneys given from the vendor to subsidize the cost.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FreightChargeTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how the freight charge is calculated. A charge is an additional cost incurred by the receiving company when an item is shipped from a vendor.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FreightChargeAmt" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the rate of the Freight Charge. This is the amount that is charged us to have produce delivered to our warehouse from a Vendor. A Freight Charge is usually from an outside trucking company. Vendors usually offer a Freight Allowance to offset the cost of delivery.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TariffItemCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is a 10-Nbr Cd used by Canada Customs, US Customs and Mexico Customs to group commodities. When used with a specific Tariff Treatment, it is used to group items that have the same rate of duty.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TariffTreatmentCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A Cd indicating the treatment that goods are entitled to when calculating duty. This may be influenced by country of origin or trade agreements. Tariff Treatment Cds are only used by Canada and the US (as of 12/31/1994), so we use our own Cds for importations into Mexico.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="IndipendentsPricingData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alaska Indipendents pricing information which is at warehouse/cic level also included in cost object due to the granularity. These prices are offered to wholesale customers thru a new system called UWARE.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ListPriceAreaCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ListPriceAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the list price charged on this item for this group. You must add the PBA for the customers province.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AllowanceAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the amount the customer is saving compared with the regular list price.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OriginalMarkUpAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="7"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="NewMarkUpAmt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="9"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PriceChangeStatusCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code indicating change type
'B' - Original Price Change Transaction
‘W’ – New Price Information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceListReference" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceListNbr" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identification number assigned by a vendor to a
price list</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceListIssueNbr" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number assigned to revised or new issues of a
price list</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceListDt" type="xs:date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProcessDt" type="xs:date" minOccurs="0"/>
			<xs:element name="FirstShipDt" type="xs:date" minOccurs="0"/>
			<xs:element name="FirstOrderDt" type="xs:date" minOccurs="0"/>
			<xs:element name="OldPriceChangeDt" type="xs:date" minOccurs="0"/>
			<xs:element name="ItemBracketPrice" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceBracketId" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identifier assigned by the vendor for a specific
price bracket</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NewItemListCost" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unit price within the appropriate price bracket for
a line item on or after an effective price date</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OldItemListCost" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unit price within the appropriate price bracket for
a line item before an effective date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ItemSourcingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>contains various types of item sourcing at retail facilities.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DSDInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item sourcing by vendor direct Store delivery.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item sourcing from internal warehouses.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ManufacturingPlantInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>sourced from manufacturing plants like milk plant, bread plant.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WholesaleInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>sourced from a wholesaler, delivered as DSD or cross dock at internal warehouse.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StoreCreatedItemInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Items created within the store depts like Bakery, deli..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AutoCostInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if auto cost callucation is needed for this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrgMasterNameType" type="OrgMasterNameType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ItemPendingCost" type="ItemPendingCostType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemConsumerWarningType">
		<xs:annotation>
			<xs:documentation>Contains all types of consumer warnings attached to an item due to the  regulations enforced by various agencies. Generally warnings are related to health hazards like cancer, birth defects that may be caused by chemicals in additives/ingrediats of an item. Retailors have to display these warnings either as shelf tags or warning labels on the item itself. In case of online sales warning messages ahve to be displayed based on consumer zip code and contents of an item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:CorporationId" minOccurs="0"/>
			<xs:element ref="Abs:DivisionId" minOccurs="0"/>
			<xs:element ref="Abs:ROGCd" minOccurs="0"/>
			<xs:element ref="RetailStoreId" minOccurs="0"/>
			<xs:element ref="Abs:CorporateItemCd" minOccurs="0"/>
			<xs:element name="RetailScanCd" type="Abs:UPC">
				<xs:annotation>
					<xs:documentation>Contains scan code of the item used at retail POS</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemId" type="ItemId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Other standard identifiers for an item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemDsc" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="POSItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Abreviated Dsc of the item that will appear on scanner store receipts.</xs:documentation>
								<xs:documentation>Dsc of the item in retail POS.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RetailItemDsc" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of item in Retail systems.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InternetItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dsc used in internet for various promotions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarehouseItemDsc" nillable="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the Dsc of a warehoused item. It contains the brand and Dsc of the item. The brand occurs first. The space after the brand is located using the column brand end position. The space before the flavor/type in the Dsc is located using the column SUFFIXPOS.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="VendorItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Item Dsc provided by the vendor</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Vendor" type="ItemVendor" minOccurs="0" maxOccurs="10"/>
			<xs:element name="ConsumerWarning" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="WarningSource" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Origin of consumer warning; ex California proposition 65.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="CodeWithDescription">
										<xs:sequence>
											<xs:element name="WarningSourceNm" type="xs:string" minOccurs="0"/>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Enforcement" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Regulatory body responsible for the enforcement of consumer warning.
ex: FDA, State of CA, EPA</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="CodeWithDescription">
										<xs:sequence>
											<xs:element name="EffectiveStartDtTm" type="xs:dateTime" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Effective start date and time for the consumer warning enforcement.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="RiskLevel" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>risk level associated with the non compliance of the warning messages.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WarningMessage" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>warning messages associated with in item that need to be communicated to the consumer. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="CodeWithDescription">
										<xs:sequence>
											<xs:element name="MessageShortTxt" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Short warning msg; 
0 – no warning needed
1 – Short form cancer warning 
2 – Shor form birth defects warning 
3 – Short form cancer and birth defects
</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="MessageLongTxt" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Long warning message
</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Chemical" minOccurs="0" maxOccurs="5">
												<xs:complexType>
													<xs:sequence>
														<xs:element name="ChemicalNm" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Name of the chemical responsible for the consumer warning message.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="Strength" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>chemical strength in terms concentration percentage</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="ChemicalSourceType" minOccurs="0">
															<xs:annotation>
																<xs:documentation>type of the chemical source as synthetic or naturally sourced.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="SafeharborLevel" type="CodeWithDescription" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The Office of Environmental Health Hazard AssessmenOEHHA develops “safe harbor numbers” for determining whether a warning is necessary.These safe harbor levels consist of No Significant Risk Levels for chemicals listed as causing cancer and Maximum Allowable Dose Levels for chemicals listed as causing birth defects or other reproductive harm. </xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="DisplayType" type="CodeWithDescription" minOccurs="0" maxOccurs="5">
												<xs:annotation>
													<xs:documentation>Warning message diplay type to the consumer,        ex:
 in case of ecom it could be a pop-up screen,
 in case of retail, shelf tag, on item pckg.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="WarningRecvDtTm" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="WarningStatus" type="StatusType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Warning message approved or rejected to implement status with effective date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LabelInd" minOccurs="0"/>
						<xs:element name="WarningMessageApproval" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines special approval process if needed to implement the consumer warning message in retail facilites.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="NeedApprovalInd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates if special approval is needed to implement his consumer warning message in retail facilities.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ApprovalStatus" type="StatusType" minOccurs="0"/>
									<xs:element name="ApproverNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ApproverSystemId" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ApproverCommentTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="2000"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="MessageSubmittedBy" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="SubmittedVendorNm" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Person or a third party vendor submitting the consumer warning message info to Albertsons.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="150"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SubmittedPersonFirstNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SubmittedPersonLastNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ContactPhoneNbr" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="25"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ContactEmailTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="AltContactEmailTxt" minOccurs="0">
										<xs:annotation>
											<xs:documentation>submitters alternate contact email.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SubmittedTs" type="xs:dateTime" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CommentTxt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="2000"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FoodInd" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreItemLocationType">
		<xs:annotation>
			<xs:documentation>Location of an Item with in a retail store facility.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element ref="BannerCd" minOccurs="0"/>
			<xs:element ref="ROGCd" minOccurs="0"/>
			<xs:element ref="RetailStoreId"/>
			<xs:element name="ItemLocation" type="ItemLocation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="OrgMasterName" type="OrgMasterNameType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemDscType">
		<xs:annotation>
			<xs:documentation>Various kinds of item descriptions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CorporateItemDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item description defined at corporate level.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WarehouseItemDsc" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the Dsc of a warehoused item. It contains the brand and Dsc of the item. The brand occurs first. The space after the brand is located using the column brand end position. The space before the flavor/type in the Dsc is located using the column SUFFIXPOS.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InternetItemDsc" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dsc used in internet for various promotions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetailItemDsc" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dsc of the item in retail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorItemDsc" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item Dsc provided by the vendor</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemRecodeType">
		<xs:annotation>
			<xs:documentation>Contains Item Recode and item Merger information. A Corporate Item Code can change or merge to another CIC for various business reasons. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CurrentCIC">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="CorporateItemCd"/>
						<xs:element name="ItemDsc" type="ItemDscType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="NewCIC">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="CorporateItemCd"/>
						<xs:element name="ItemDsc" type="ItemDscType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DateChangeTS" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>The date and time when the item code changed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="FirstEffectiveDt" minOccurs="0"/>
			<xs:element ref="LastEffectiveDt" minOccurs="0"/>
			<xs:element name="RecodeIndicatorData" minOccurs="0">
				<xs:complexType>
					<xs:sequence minOccurs="0">
						<xs:element name="ExpressInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to the express tables.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MENDInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if MEND table records have been updated for the Item Merge and Item Code change.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DmndAggrInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This column indicates the recode processing status for the Demand Aggregation system. 'Y' indicates the recode has been completed blank indicates the recode has not been completed.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItmSyncInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if record has been processed by EBIM.Used to automate the adjustments to EBIM when there's a merge or recode.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrentInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to the current files.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HistoryInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to the history files.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PendingInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to the pending files.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WIMSInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to WIMS tables.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ShipHistInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This item code change has been applied to shipping history files.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InvoiceInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field indicates that item code change has been applied to Invoice History Detail table.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MergeInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if the item records are Ok for merging.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ChangeMergeInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Specifies if this is an item change or merge request.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PACSInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This field indicates that the item code change has been applied to the PACS tables.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItmMovInd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates whether Item Movement has been updated.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ItemAverageWtType">
		<xs:annotation>
			<xs:documentation>Average weight of a weighted item.
 Ex: wt of each banana, though bananas are sold by weight.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:totalDigits value="14"/>
			<xs:fractionDigits value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RetailShelfUnitDimensionType">
		<xs:annotation>
			<xs:documentation>Defines the dimensions of the item available in a retail facility shelf, unlike defined at corporate level.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RetailUnitPackNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of shelf units in one warehouse unit. The shelf unit for the retail unit pack is defined by the ROG and is the amount of units sold together. For instance, Retail unit pack would be 1 if an item is sold by the case, 4 (four 6-packs) for 6-pack UPC, 24 for single can UPC (24/case). The acronym RUP is sometimes used for Retail Unit Pack.  This field is used in all calculations requiring the retail pack.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShelfUnitSizeDsc" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The generic size of goods.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShelfUnitPackDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the shelf unit pack. ex. pack of 6 cans, case pack..etc</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SizeQty" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The size of the product as a numeric quantity that can be used in in calculations as compared to SIZE-DESC, which is a descriptive size for printing.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SizeUOMCd" nillable="false" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemHeight" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The height of the actual shelf item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemHeightUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemDepth" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The depth of the actual shelf item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemDepthUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemWidth" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The width of the actual shelf item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemWidthUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemPackUOMCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UOM for shelf item pack measuremenmts.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemWt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemWtUOM" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayHeight" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The height of the actual shelf tray where items are placed. candy bars in a open tray, healthy nut bars in cover open tray. Tray dimensions are needed for space planning.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayHeightUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayDepth" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The depth of the actual shelf item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayDepthUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayWidth" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The width of the actual shelf item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayWidthUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayWt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="9"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrayWtUOMCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MeatItemYieldType">
		<xs:annotation>
			<xs:documentation>Defines primal meat items and all by product meat items created from primal and the yield by ROG.  identifies a method of breaking down a Prime item into other items for re-sale. A Prime item is usually a "Primal" meat item. This is a large section of a carcus that usually is not sold to the public. Usually this is shipped to the store where the item is "cut" into resale items. There is a optimal way of cutting the Primal so that it will yield the most profitable items. There are sometime multiple ways to break down a primal which means a Primal item can have multiple items. Yield charts allow Merchandisers to see the profit that can be made from a Primal when all the seperate cuts are retailed. Each warehouse can have different methods of cutting the Primal because of local market requirements. This means each warehouse will have it's own set of "Charts".</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId" minOccurs="0"/>
			<xs:element ref="DivisionId" minOccurs="0"/>
			<xs:element ref="WarehouseId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Primal meat item supply warehouse.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ROGCd" minOccurs="0"/>
			<xs:element name="Primalltem" minOccurs="0">
				<xs:annotation>
					<xs:documentation> A Primal item is usually a large section of a carcus that usually is not sold to the public. Usually this is shipped to the store where the item is "cut" into resale items.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="CorporateItemCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>CIC for a primal item</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="UPCType" minOccurs="0"/>
						<xs:element name="PrimalItemDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of the prime CIC</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RetailSection" type="IdWithNameType" minOccurs="0"/>
						<xs:element name="YieldChartNbr" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This the number of the Yield Chart. Each item can have multiple Yield Charts</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="YieldChartDsc" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of the yield chart.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BaseItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>contains the "Cuts" of meat that are cut from the Primal item in the Yield Chart. Each "Cut" of meat has a percentage figure attached which indicates how much of that item (or Cut) can be obtained from the Primal. All the percentages of the items in a Yield Chart should add up to 100%. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="CorporateItemCd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>CIC for a base cut item from a primal item.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="UPCType" minOccurs="0"/>
									<xs:element name="BaseItemDsc" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Description for the base cut item.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="YieldPct" minOccurs="0">
										<xs:annotation>
											<xs:documentation>This is the percentage of Yield that the 'Base Cut' item is of the Prime Item 'Primal'. For example if a butcher can cut 30% T-BONE steak from a Primal the Yield for the T-BONE steak item would be 30% for the Prime item's Yield Chart.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="6"/>
												<xs:fractionDigits value="3"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="RetailSection" type="IdWithNameType" minOccurs="0"/>
									<xs:element name="OptionalItem" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>An Optional item is another method of selling the "Base" item in a different format. They are optional items the selling price of the item is based on the "Base" item. A formula can be used which will determine the retail price based on the Base item's retail price. Optional items can be value packs. If the base item is T-Bone steaks then an option item could be value pack T-Bone steaks. If they always sell for 50 cents less then the T-Bone (base item) then a formula with -.50 can be placed in the table. Optional items can sell for more then the Base Item. If there is more labour required to produce the Optional Item (Cutting Thin T-Bone steaks, appling a pepper coating for Pepper Steak) the formula will indicate to add an amount. When the Retail of Base Item is changed all optional items will have their Retail set base on the formula.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element ref="CorporateItemCd" minOccurs="0">
													<xs:annotation>
														<xs:documentation>CIC for an optional meat item created from a base cut.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element ref="UPCType" minOccurs="0"/>
												<xs:element name="OptionalItemDsc" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Description for an optional item.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="RetailSection" type="IdWithNameType" minOccurs="0"/>
												<xs:element name="OptionalItemPriceArea" minOccurs="0" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Price areas applicable for each optional item.</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:sequence>
															<xs:element name="PriceArea" type="CodeWithDescription" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Price areas are groups of stores within a ROG that have the same Pricing structure. This is the individual price area within the Price Area group.</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="GapAmt" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>This amount will be applied to the 'Base Cut' retail to determine the retail price of the Optional Item. Each time the 'Base Cut' is priced, the Optional item will also be priced. The Gap will either set the Optional item's price higher or lower (or the same) then the 'Base Cut'.</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:decimal">
																		<xs:totalDigits value="6"/>
																		<xs:fractionDigits value="3"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:element>
															<xs:element name="OptionalItemYieldPct" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>This is a percentage that will apply to the 'Base Cut' price. This represents the the 'Yield' of the optional item from the Base Cut. For example if the Base Cut is T-Bone Steak and the Optional Item is Thin Cut T-Bone Steak you loose some of the meat (Cutting Loss or Bone Dust) when the optional item is made. That means you have to increase the retail of the Optional Item to make the same amount of money as the T-Bone. This is a fixed rate and will not change. If you want to add labour costs as well this can be done thru the Optional Item Gap. If the loss was 5% then the Base Cut Retail can be multipled by 5% giving a higher retail for the Optional Item. Producing the item might even increase the yield in some cases. You would divide the retail by this to increase it.</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:decimal">
																		<xs:totalDigits value="6"/>
																		<xs:fractionDigits value="3"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="UPCType" type="CodeWithDescription">
		<xs:annotation>
			<xs:documentation>Shows which of the Consumer, Multipack, or Case UPCs is used to make up the right 5 digitis of the UPC. One of these must be chosen.Called UNIT_TYPE in legacy systems.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CommonGroupType">
		<xs:annotation>
			<xs:documentation>Defines various common group items at CIC level like CRC, CPC, Common cost cd.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CommonCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> For retai only lCommon Cd links items with common pricing structures.  All packs of 60 gm jello jelly powder will have the same common Cd. They will get the same price. When used with the cost subCd similar packs will get the same cost.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="5"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CommonCdDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description for the common cd.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CommonCostSubCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>X -Identifies a pack within the group of common items when used with the Common Cd. Used to apply cost changes to a group of items. A common cost Cd of zero is used to identify a common retail Cd record in SSITMCCG.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="1"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LikeItemCompareCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to group items for comparison reporting. For example: generic vs store brand vs national brand on all 1L bleach.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CommonRetailCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to establish a corporate set of items at the retail level. The Common Retail Cd is different from Common Cd although users may choose to set both Cds the same.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="6"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CommonRetailCdDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description for the common retail cd.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CRCItemSizeDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CommonPromotionCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Also known as common div promo cd, grouping of CICs at Div lelvel for pormotions.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ComparisonItemTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This Cd is used to break down items into groups so that like items can be compared. It is a finer level than product group and is usually used between items in the same common Cd. Item Type Cds are found on the Item Type Table(SMITMTYPTABLE)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="3"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ConsumerSellingCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CSC - Consumer Selling Code is a grouping of similar purchase-able items.
For example, Coke sold in the individual can or in a 6-pack are two distinct "purchase-able" consumer Items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ConsumerSellingCdDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PriceAreaCd" type="xs:string">
		<xs:annotation>
			<xs:documentation>Price areas are groups of stores within a ROG that have the same Pricing structure. This is the individual price area within the Price Area group. Price areas are found on the Price Area Facility Table (SSPAFACL_TABLE).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DisplayItem">
		<xs:annotation>
			<xs:documentation>Defines Display items, Display items are pre-built and sent to the store in it's own packaging.
The store just puts that whole "display case" out on sales floor somewhere</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId"/>
			<xs:element ref="DivisionId"/>
			<xs:element ref="DistributionCenterId"/>
			<xs:element ref="WarehouseId"/>
			<xs:element name="DisplayGroup" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Display items and related component items are defined as special display group at corporate level and maintained in SSITMDGP in legacy system.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DisplayItem" minOccurs="0">
							<xs:annotation>
								<xs:documentation>main CIC for a dispaly group.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="CorporateItemCd" minOccurs="0"/>
									<xs:element name="DisplayItemDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="DisplayItemStatus" type="CodeWithDescription" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ComponentItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Component items included within a pre packed display item. One display CIC can have multiple component CICs.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="DistributionCenterId" minOccurs="0"/>
									<xs:element ref="WarehouseId" minOccurs="0"/>
									<xs:element ref="CorporateItemCd" minOccurs="0"/>
									<xs:element name="ComponentItemDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ComponentItemStatus" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="MCLBRNbr" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Branch identifier, to be used in conjucton with branch item code to make branch item cd unique. Old legacy identifier for warehouse items.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="10"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="BranchItemCd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>This is the old five digit item code used with the MCL branch to identify an item. This is Used to interface to detail files systems not converted to corporate item code and divisional users. It is sometimes referred to as Division Item Code.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="10"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="UPC" minOccurs="0">
										<xs:complexType>
											<xs:complexContent>
												<xs:extension base="Abs:UPC"/>
											</xs:complexContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="UPCComponents" minOccurs="0">
										<xs:annotation>
											<xs:documentation>UPC ID broken into individual Components.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:complexContent>
												<xs:extension base="UPCComponentsType"/>
											</xs:complexContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="ShipUnitPackQty" nillable="false" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The quantity of shelf units in a warehouse unit, or pack for the item at a corporate level. e.g. 24 shelf units in a warehouse unit. Nbr of consumer units per warehouse shipping pack (or store receiving pack for DSD) with Descriptive Size, appears on Purchase Orders for warehoused items. This tells our retail operations how many shelf units are in the warehouse pack (Itempack) Known as PACK_WHSE in SSITMCDS</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="7"/>
												<xs:fractionDigits value="2"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SizeDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ShelfUnitQty" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number of shelf units decalred in display group source.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="14"/>
												<xs:fractionDigits value="4"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ConsumerSellingCd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>CSC - Consumer Selling Code is a grouping of similar purchase-able items.
For example, Coke sold in the individual can or in a 6-pack are two distinct "purchase-able" consumer Items.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="CostMemoAmt" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cost memo it the amount of the total display item cost assigned to this shelf item whithin the display. It is stricktly a memo field. Provincial billing additions are not used with this field.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="14"/>
												<xs:fractionDigits value="4"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="SensitiveItem">
		<xs:annotation>
			<xs:documentation>Price sensitive information for an item that can affect pricing policies.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="SensitiveItemInd" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:maxLength value="5"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="SensitiveTier" type="CodeWithDescription" minOccurs="0"/>
				<xs:element name="SensitiveRole" type="CodeWithDescription" minOccurs="0"/>
				<xs:element name="SensitiveClass" type="CodeWithDescription" minOccurs="0"/>
				<xs:element name="SensitiveChannel" type="CodeWithDescription" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ShelfPackDsc">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:complexType name="WarehouseItemStatusType">
		<xs:sequence>
			<xs:element name="StatusCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StatusDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StatusEffDt" type="xs:date" minOccurs="0"/>
			<xs:element name="CreateDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item create date at DC/Whse level.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorpItemStatusType">
		<xs:sequence>
			<xs:element name="StatusCd" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="5"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StatusDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StatusEffDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Dt the Status on ITMCDS changed from New to Valid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreateDt" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item create date at corporate level.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UsageType">
		<xs:annotation>
			<xs:documentation>ItemUsageType</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemUsageInd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>classifies item usage
R - resale 
E - expensed (were previously denoted by 68 or 69 in 2nd and  3rd digits of item Cd) 
M - materials (includes ingredients, primal cuts of meat and  large packs of pharmacy items. These items have no  retail and are billed at cost. 
Q - coupons Note that no POS information will be sent to the stores for any E or M type items since they are not sold at the store.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemUsageTypeCd" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This Cd represents a further breakdown of the Item Usage Indicator. Valid values for Item Usage Indicator  are: 
R - basic resale items (e.g. can of beans, 2 litre bottle of cola, box of cooki
S - store created items (e.g. cuts of meat from primals, goods baked at store bakery
C - customer service items (e.g. ski lift tickets, bus passes, etc.)
M - materials or ingredients used to construct a finished product sold at the st(e.g. bakery flour, floral ribbon, etc.) 
valid values for Item Usage Indicator is E are:
 W - wrapping - expense items that leave the store with the customer (e.g. berry L - laundry expense items (e.g. meat smocks) 
O - other expenses (non-wrap) - expense items that are used in the store (e.g. floor wax, push brooms, etc.)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemUsageTypeDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="BaseProductNbr">
		<xs:annotation>
			<xs:documentation>Popularly known as BPN number in eCommerce world. Identifier generated in eCom for a group of similar elements. BPN can represent multiple CICs or UPCs. BPN is used to dispaly items in safeway.com online sales site.
 Ex Seedless red grapes will have one BPN but there may be multiple varities with in red grapes like crimson red, dark red or light red with different cic/upcs.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:decimal">
				<xs:totalDigits value="14"/>
				<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:complexType name="ManufacturerTypeType">
		<xs:sequence>
			<xs:element name="ManufacturerNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="Address" minOccurs="0"/>
			<xs:element name="ConatctNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorpItemReferenceType">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="UPCID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UPC Cd used in retail systems and scanned during the sale transction at retail facility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UPCNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UPC as numeric field</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UPCComponents" type="UPCComponentsType" minOccurs="0"/>
			<xs:element name="UPCType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shows which of the Consumer, Multipack, or Case UPCs is used to make up the right 5 digitis of the UPC. One of these must be chosen.Called UNIT_TYPE in legacy systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusCd" type="xs:string" minOccurs="0"/>
			<xs:element name="PackNutrientInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates if the package contains all the nutrient information wanted on a label.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NutriEnvirItemCd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This indicates if the UPC is a nutritional or environmental item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrefCICSeqNbr" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Preferred CIC (Corporate Item Cd) Sequential Nbr is used to identify a 1-1 UPC-CIC mapping. The CIC chosen as the 'preferred CIC' is the CIC with the lowest Sequential Nbr, an Integer. A unique index is applied to the UPC-Preferred CIC Sequential Nbr to ensure that there will always be one and only one lowest (Preferred) CIC to map to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrefCICLockInd" type="xs:string" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Preferred CIC Lock Switch indicates if a Preferred CIC is 'locked' from being re-evaluated during the automated Preferred CIC upDt process or not. This control column provides a Business User the ability to 'lock' (permanently flag) a CIC as a particular Preferred CIC.  Valid Values: Y (locked), N (not locked) Default: N</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StockingSectionId" type="xs:integer">
		<xs:annotation>
			<xs:documentation>Stocking section of a SMIC item in a warehouse.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StockingSectionNm">
		<xs:annotation>
			<xs:documentation>Super sections of stocking section in a warehouse.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="250"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
</xs:schema>