BROKER SCHEMA com.abs.cmnflows

/*----------------------------------------------------------------------
SUBFLOW NAME: RetryValidate_Exception.subflow
DESCRIPTION	: This is a common flow to all the flows for capturing failure
			messages and check whether retry is eligible or not and send 
			messages to retry Queue or else it send messages into exception 
			subflow 
AUTHOR		: Snehansu (TCS)
BU			: TCS
CREATED DT	: 7/08/2018
-------------------------------------------------------------------------
Program History
Project	Release	Version	 ChangeOwner		  Date		 Description
------- ------- -------	----------  		---------  	 -----------
EDIS    Drop2	0.1		Snehansu    7/08/2018	Initial Draft
-------------------------------------------------------------------------*/
DECLARE retry_Max_Count EXTERNAL CHARACTER '';
DECLARE retry_Time_Interval EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE RetryValidate_Exception_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		/*Checks whether the retryFlag is present or not. 
		If present, Check message is having MQRFH2 headers */
		IF Environment.Variables.retryFlag = 'Y' THEN
			
			DECLARE retry_Count INTEGER COALESCE(InputRoot.MQRFH2.usr.retry_Counter, 1);
			
			/*If MQRFH2 is not present then create MQRFH2 in headers*/
			IF NOT EXISTS(InputRoot.MQRFH2[]) THEN
				CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2'; 
			END IF;
			
			IF retry_Count <  retry_Max_Count THEN
				SET OutputRoot.MQRFH2.usr.retry_Counter = retry_Count + 1;
				SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.SourceQueue;
				SET OutputRoot.MQRFH2.usr.retry_Wait_Time = retry_Time_Interval;
				
				/*Propagating the msg to Out1 for doing retry*/
				PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			ELSE
				/*Propagating the msg to out for login exception*/
				SET OutputExceptionList = InputExceptionList;
				PROPAGATE TO TERMINAL 'out' DELETE NONE;
						
			END IF;	
			
		ELSE
			/*Checks whether the retryFlag is present or not. 
			If not present, send message to exception subflow by Propagating
			the Exceptionmsg to out2 for login exception*/
			SET OutputExceptionList = InputExceptionList;
			PROPAGATE TO TERMINAL 'out2' DELETE NONE;
		END IF;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
