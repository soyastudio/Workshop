<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSpy v2021 rel. 2 sp1 (x64) (http://www.altova.com) by poliv02 (Albertsons) --><xs:schema xmlns="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:altova="http://www.altova.com/xml-schema-extensions" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">	<!--V1.0 Jayson Leo Soliman 08/14/19 Initial Version-->	<!--V1.1 Alex Nunes 4/14/2020 Changes during review with system of record stakeholder: Remove Person Delivery: In Order Capture there is no such data available. This is part of downstram applications. Shorten complex types such as Customer and Facility. Add customer order addresses which are different from customer addresses master data.-->	<!--V1.1 Alex Nunes 5/12/2020 Additional changes. Missing elements added.-->	<!--V1.1 Alex Nunes 6/3/2020 Additional changes from data mapping review.-->	<!--V1.3Alex Nunes 7/9/2020 Noun name chage from GroceryDelivery to GroceryOrder. Minor changes on unbounded elements (phone, payment and email statuses.). Introduced the concept of sub-order. Added AddressType to Billing Address.-->	<!--V1.4 Sai N 8/31/20  WYSIWYG changes-->	<!--V1.5 Sai N 09/16/20 GorceryOrder Review changes : Add Charges and Offers at Header level alsoAdd promo info at header level also additional profiles at SubOrder level Delivery & Billing Address at SubOrder level handle Multiple fulfillment systems scenario-->	<!--V1.6 Sai N   Customer Total Savings captured.-->	<!--V1.7 Sai N 12/14/20 Added ExceptionType at differnt levels-->	<!--V1.8   02/18/21 Added RefundId for refund and cancellation transactions.-->	<!--V1.9   03/15/21 Added SellByWeight in Delivereditem and ARO attributes in order line.-->	<!--V1.10  03/23/2021  Added Auto replenishment for delivered item, return item-->	<!--V1.11 Patrick O. 04/10/21: Added RefundByType, CancelByType to capture user data for refund and/or cancellation. Re-named ReturnedItem.AutoReplenishmentType to ReturnedItem.AutoReplenishmentOrderType-->	<!--V1.12 Patrick Oliver 05/21: Following changes for GO v1.12:  [v1.12.1 – 05/17: WYSIWYG, AR, Substitution, Auto Refund]Added OfferId to CustomerSavings (WYSIWYG fix), Added PricePerAmt (WYSIWYG fix)Added CustomerPreferredSubstituteItem , Added ARLinkPLUNbr to AutoReplenishmentOrderType , Added TenderOriginCd to Tender[v1.12.2 – 05/25: Reschedule, Echo]Added RescheduledDtTm, Added BasePricePerAmt, Added ArSavingsAmt to AutoReplenishmentOrderType Added SmartSubstituteItemInd to DeliveredItem 	Added AvgItemWeight		-->	<!--V1.13.1: Patrick Oliver 05/27/21: Added following for MFC and Promise projects:• FulfillmentStoreId  (MFC) Below fields added to DeliveryInfo (Promise):• SlotTillByDttm• SlotAvailableDttm• PartnerDataPatrick Oliver 07/13/21: Added following for Snap 2.0/MTO:• Changed SuborderType to unbounded (MTO), MadeToOrderItemInd (MTO), MadeToOrderItemTxt (MTO), PreperationTm (MTO)SNAPTotalAmt (SNAP), NonSNAPTotalAmt (Snap) , WeightDebitAmt (SNAP), SNAPItemInd (SNAP) , NetItemPrice (SNAP), MasterSlotId (Echo)-->	<!--V1.14.1 Patrick Oliver 10/05/21: • Added TotalTaxFeeAmt (WYSIWIG)• Updated FulfillmentStoreId to integer• Updated PreperationTm to integer• Change MiscChargesType to unboundedCustomerPayment.Tender changes:• Removed Refund and Cancellation from CustomerPayment/Tender• Created CustomerRefund and CustomerRefundCancellation complex types -->	<!--V2.0 Patrick Oliver 09/21: • Updated BaseProductNbr to string• ShipMethodType (White Glove Delivery)• ShipMethodSubType (White Glove Delivery)• Added OrderCancellationRequestData to OrderRecordDateInfo-->	<xs:include schemaLocation="../Global/AbsGlobalComponents.xsd"/>	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>	<xs:include schemaLocation="RetailCustomer.xsd"/>	<xs:include schemaLocation="ItemMaster.xsd"/>	<xs:complexType name="GroceryOrder">		<xs:annotation>			<xs:documentation>Represents Albertsons Grocery Order. Grocery Order can either be a regular  Delivery order or In-store Pickup/Drive Up and Go (DUG). order The recipient of the delivery is usually a Retail Customer and the orders are normally placed online (either via Web Site or Mobile App) through the e-Commerce system of Albertsons. Furthermore, the customer can opt for either an Attended delivery where the customer has to be there to receive the delivery, or Unattended delivery where the delivery can be done even in the customer's absence.  This also captures the customer's payments (and type of payment), applicable delivery details (such as charges, delivery slot, etc), applicable delivery promotions, and customer savings through club cards and other instruments.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="GroceryOrderHeader" type="GroceryOrderHeaderType">				<xs:annotation>					<xs:documentation>Header information of this Grocery order.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="GrocerySubOrder" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>SubOrder details of the Grocery Order.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence>						<xs:element name="SubOrderNbr" type="xs:integer">							<xs:annotation>								<xs:documentation>Contains the sub order number generated by the ERums system.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SubOrderType" type="CodeWithDescription" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Type of suborder. ex Rescheduled order, Made to Order (MTO) order, etc.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SubOrderStatus" type="StatusType" minOccurs="0"/>						<xs:element name="StatusReasonType" type="CodeWithDescription" minOccurs="0"/>						<xs:element name="SubOrderActionStatus" type="StatusType" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates the action taken on the custome rsub order.Ex: Created, delivered, rescheduled.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SubOrderServiceLevelType" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>Service level committed to the customer. Ex Express service, 1Hr delivery service..etc</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="EditCutoffDtTm" minOccurs="0"/>						<xs:element ref="CancelByDtTm" minOccurs="0">							<xs:annotation>								<xs:documentation>Customer cancels order. Cancel date and time for this order.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="RescheduledDtTm" minOccurs="0"/>						<xs:element ref="FulFillmentSystemType" minOccurs="0"/>						<xs:element name="GroceryOrderDetail" type="GroceryOrderDetailType" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Items ordered in the customer online order.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="ReturnedItem" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Items returned for a refund at the time of order/delivery and recorded as part of grocery order.</xs:documentation>							</xs:annotation>							<xs:complexType>								<xs:sequence>									<xs:element name="ReferenceOrderId" type="xs:string" minOccurs="0">										<xs:annotation>											<xs:documentation>order id thru which return items were originally purchased.</xs:documentation>										</xs:annotation>									</xs:element>									<xs:element name="Item" type="ItemId" minOccurs="0"/>									<xs:element ref="Quantity" minOccurs="0"/>									<xs:element ref="UOM" minOccurs="0"/>									<xs:element ref="UnitPriceAmt" minOccurs="0"/>									<xs:element ref="ItemPriceAmt" minOccurs="0"/>									<xs:element name="WeightDebitAmt" minOccurs="0">										<xs:annotation>											<xs:documentation>Weight debit amount for random weighted items.Ex: For SNAP items this is can be 10% of the item price.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:decimal">												<xs:totalDigits value="14"/>												<xs:fractionDigits value="4"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="CurrencyCd" type="xs:string" minOccurs="0"/>									<xs:element ref="WICItemInd" minOccurs="0"/>									<xs:element name="SNAPItemInd" type="xs:boolean" minOccurs="0">										<xs:annotation>											<xs:documentation>Indicates if the item is Supplemental-Nutrition Assistance-Program eligible  or not.</xs:documentation>										</xs:annotation>									</xs:element>									<xs:element name="AutoReplenishmentOrderType" type="AutoReplenishmentOrderType" minOccurs="0"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="FullFillmentType" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates if this is a DELIVERY, or a PICKUP</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PickupInfo" minOccurs="0">							<xs:annotation>								<xs:documentation>Contains information related to Drive Up and Go (DUG) Service Type</xs:documentation>							</xs:annotation>							<xs:complexType>								<xs:complexContent>									<xs:extension base="PickupType"/>								</xs:complexContent>							</xs:complexType>						</xs:element>						<xs:element name="DeliveryInfo" type="DeliveryType" minOccurs="0">							<xs:annotation>								<xs:documentation>Contains Delivery slot information as well as total delivery charge amount and other relevant information</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="ChargeInfo" type="DeliveryChargeType" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Contains details about the charges for this delivery or DUG.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="DeliveryPromotion" type="PromotionType" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Contains details about promotions used for this order.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="CustomerPayment" type="PaymentType" minOccurs="0"/>						<xs:element name="CustomerService" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Details on the customer service at the store</xs:documentation>							</xs:annotation>							<xs:complexType>								<xs:sequence minOccurs="0">									<xs:element name="PhoneFaxContact" type="GroceryPhoneType" minOccurs="0"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="ShoppingBagCnt" type="xs:integer" minOccurs="0">							<xs:annotation>								<xs:documentation>Total number of shopping bags used in the sub order.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="InstructionTxt" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Any free format text pertaining to the grocery SubOrder.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="GrocerySubOrderExceptionType" type="OrderExceptionType" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryItemType">		<xs:annotation>			<xs:documentation>Retail Item identifiers generally used in albertsons ecommerce business.</xs:documentation>		</xs:annotation>		<xs:sequence minOccurs="0" maxOccurs="unbounded">			<xs:element name="UPC" minOccurs="0">				<xs:complexType>					<xs:complexContent>						<xs:extension base="Abs:UPC"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="UPCComponents" minOccurs="0">				<xs:annotation>					<xs:documentation>UPC ID broken into individual Components.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="UPCComponentsType"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="GTINID" type="xs:string" minOccurs="0"/>			<xs:element name="VendorProductID" type="xs:string" minOccurs="0"/>			<xs:element name="SystemSpecificItemId" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Like NDA id for Drugs.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="InternalItemId" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string"/>				</xs:simpleType>			</xs:element>			<xs:element ref="BaseProductNbr" minOccurs="0"/>			<xs:element name="PLUCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Product look up code.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ItemDescription" type="xs:string" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GrocerySubstituteItemType">		<xs:annotation>			<xs:documentation>Details for substitute Item that is used in place of an out of stock ordered item. </xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="UPC" minOccurs="0">				<xs:complexType>					<xs:complexContent>						<xs:extension base="Abs:UPC"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="UPCComponents" minOccurs="0">				<xs:annotation>					<xs:documentation>UPC ID broken into individual Components.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="UPCComponentsType"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="GTINID" type="xs:string" minOccurs="0"/>			<xs:element name="VendorProductID" type="xs:string" minOccurs="0"/>			<xs:element name="SystemSpecificItemId" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Like NDA id for Drugs.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="BaseProductNbr" minOccurs="0">				<xs:annotation>					<xs:documentation>Popularly known as BPN number in eCommerce world. Identifier generated in eCom for a group of similar elements. BPN can represent multiple CICs or UPCs. BPN is used to dispaly items in safeway.com online sales site. Ex Seedless red grapes will have one BPN but there may be multiple varities with in red grapes like crimson red, dark red or light red with different cic/upcs.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="0"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PLUCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Product look up code.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ItemDescription" type="xs:string" minOccurs="0"/>			<xs:element name="SubstituteItemRankNbr" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>Priority number field that is used to rank customer's substitute items. </xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryOrderHeaderType">		<xs:annotation>			<xs:documentation>Contains header information about this grocery order.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="OrderId" type="xs:string">				<xs:annotation>					<xs:documentation>Grocery Delivery Order Id</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OrderCreateTS" type="xs:dateTime">				<xs:annotation>					<xs:documentation>Date and time stamp of when the order was created.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OrderModifyTS" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Date and time stamp of when the order was last modified.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CompanyId" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>For now always set to 1. This field contains company Id that is required by the OMS system.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="VersionNbr" type="xs:int" minOccurs="0">				<xs:annotation>					<xs:documentation>Initial version of the order is 1. Version Number increments as the order is updated</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="RevisionNbr" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains revision number generated from the eRums system</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CartNbr" type="xs:long" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains the shopping Cart Id.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SourceReferenceId" minOccurs="0">				<xs:annotation>					<xs:documentation>cross reference id from source system for the grocery order.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="OrderStatus" type="StatusType" minOccurs="0">				<xs:annotation>					<xs:documentation>Status of the grocery order. example: PENDING,CREATED,EDITED,CANCEL;</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OrderStatusReasonType" type="CodeWithDescription" minOccurs="0"/>			<xs:element name="OrderActionStatus" type="StatusType" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates the action taken on the order received from customer.Ex: order created, order rescheduled..etc</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="EditCutoffDtTm" minOccurs="0"/>			<xs:element ref="CancelByDtTm" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer cancels order. Cancel date and time for this order.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="RescheduledDtTm" minOccurs="0"/>			<xs:element name="EditReasonType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer order edit/modification reason .</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="FulfillingFacility" minOccurs="0">				<xs:annotation>					<xs:documentation>Retail facility that fullfills the order</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="FulfillingFacilityType"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="RetailCustomer" type="GroceryCustomerType" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the retail customer who is the recepient of this delivery</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveryType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Type of delivery. Defines whether the delivery man can leave the delivery without the customer Possible values: Unattended, attended</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ServiceType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the service type. Example of this is Delivery or DUG (Drive Up and GO).</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CurrencyCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Currency used in paying for the delivery. Usually represented in US$</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="TotalItemCount" minOccurs="0">				<xs:annotation>					<xs:documentation>Total number of items in this order</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalUniqueItemCount" minOccurs="0">				<xs:annotation>					<xs:documentation>Total number of unique items in this order</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total amount due to the customer which includes taxes and fees.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalTaxAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total Tax due for this delivery</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="SNAPTotalAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Captures the total elgible Supplemental Nutrition Assistance Program amount. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="NonSNAPTotalAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Captures the total non-elgible Supplemental Nutrition Assistance Program amount. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="EstimatedClubCardSavingsAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Estimated savings in $ as a result of using Club Card</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalBasePriceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total Base Price amount. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="EstimatedTotalPriceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Estimated total price amount</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="QualifyingDollarValueAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Qualifying Dollar Value Amount</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalTaxFeeAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total taxes and fees amount.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="MiscChargesType" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Miscelleneous charges at Header level like bag fees, taxes, etc. </xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="OrderChargesType"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="PromotionType" type="PromotionType" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Header level promotions applied to the order.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="CustomerOffers" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Eligible offers at transaction Header level. like Transaction level discounts.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerPayment" type="PaymentType" minOccurs="0"/>			<xs:element name="CustomerRefund" type="RefundCancellationType" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Customer order Refund data including type of refund, refund amounts and authorization details. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerRefundCancellation" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Customer order Refund Cancellation data that shows which refund was cancelled, cancelled amounts and authorization data. </xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence>						<xs:element name="SequenceNbr" type="xs:integer" minOccurs="0">							<xs:annotation>								<xs:documentation>The refund sequence number can be used as to uniquely distinguish mulitple refund transactions of same type. </xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="RefundId" minOccurs="0">							<xs:annotation>								<xs:documentation>The refundId tied to the type of refund such as credit card.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="TenderTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Tender type such as  CREDIT_CARD.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TenderSubTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Tender sub type such as .</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="CurrencyCd" minOccurs="0">							<xs:annotation>								<xs:documentation>This is the company base currency code.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="20"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="RequiredAuthAmt" type="xs:decimal" minOccurs="0">							<xs:annotation>								<xs:documentation>This is the amount that requires authorization from the credit company.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="CancelByType" type="CancelByType" minOccurs="0">							<xs:annotation>								<xs:documentation>When customer order is cancelled the source will pass  cancellation and refund user data. </xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="RefundByType" type="RefundByType" minOccurs="0"/>						<xs:element name="TenderOriginCd" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates the origin of the tender. This is a dynamic field where values assigned are from source of refund MI/VPOS/ECHO. Also referred to by business as 'stateOfOrigin'.</xs:documentation>							</xs:annotation>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element ref="CustomerSavings" minOccurs="0"/>			<xs:element name="ExpiringPromoInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if there are items in this order that have expiring promotions</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="RestrictedItemsInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates whether this order has restricted items in it or not</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="OrderRecordDateInfo" minOccurs="0">				<xs:annotation>					<xs:documentation>Information when this Delivery order is created and updated</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="RecordAuditData">							<xs:sequence>								<xs:element name="OrderCancellationRequestData" minOccurs="0" maxOccurs="unbounded">									<xs:complexType>										<xs:sequence>											<xs:element name="CancelRequestedByType" type="CodeWithDescription" minOccurs="0"/>											<xs:element name="CancelReasonCd" type="CodeWithDescription" minOccurs="0"/>											<xs:element name="CancelRequestedDtTm" type="xs:dateTime" minOccurs="0"/>											<xs:element name="CancelSourceCd" type="CodeWithDescription" minOccurs="0"/>											<xs:element name="CancelPlatformCd" type="CodeWithDescription" minOccurs="0"/>											<xs:element name="CancelApprovedByType" type="CodeWithDescription" minOccurs="0"/>										</xs:sequence>									</xs:complexType>								</xs:element>							</xs:sequence>						</xs:extension>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="ThirdPartyDeliveryInd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if the delivery will be done by a third party provider like InstaCart</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="Device" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Same as OrderCreatedDevice. This field will be depricated in future versions.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OrderCreatedDeviceType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Order created Device information. mobile, laptop</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="CustomerNotesTxt" minOccurs="0" maxOccurs="10"/>			<xs:element ref="InstructionTxt" minOccurs="0" maxOccurs="10"/>			<xs:element name="AffiliatePartnerType" minOccurs="0">				<xs:annotation>					<xs:documentation>Affiliate partners are external websites that directs web traffic to albertsons eCom sites.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="AffiliatePartnerId" minOccurs="0">							<xs:annotation>								<xs:documentation>Unique identifier for the affiliate partner</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="30"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="AffiliatePartnerNm" minOccurs="0">							<xs:annotation>								<xs:documentation>The name of the affiliate partner</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="OrderReferenceTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Order reference text.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="255"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="AffiliatePartnerBusinessType" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>The type of the affiliate partner business. Ex: Search, bloggers, influecer, review, email martketing, coupons.</xs:documentation>							</xs:annotation>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="OrderSourceSystemType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Source system that generated customer grocery order. ex: eRums</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="FulFillmentSystemType" minOccurs="0"/>			<xs:element name="GroceryOrderProfileType" type="GroceryOrderProfileTypeType" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates general profiles of an order. Ex: WYSIWYG type order (what you see is what you get)</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="GroceryOrderHeaderExceptionType" type="OrderExceptionType" minOccurs="0" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GrocerySubOrderType">		<xs:annotation>			<xs:documentation>Type that represents the concept of suborder. In case custumers wish to split deliveries and pickups.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="SubOrderNbr" type="xs:long">				<xs:annotation>					<xs:documentation>Contains the sub order number generated by the ERums system.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="RetailCustomer" type="GroceryCustomerType" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the retail customer who is the recepient of this delivery</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupInfo" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains information related to Drive Up and Go (DUG) Service Type</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="PickupType"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="DeliveryInfo" type="DeliveryType" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains Delivery slot information as well as total delivery charge amount and other relevant information</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SubOrderProfileType" type="GroceryOrderProfileTypeType" minOccurs="0"/>			<xs:element ref="CustomerNotesTxt" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryOrderDetailType">		<xs:annotation>			<xs:documentation>Contains item level information for this grocery order.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="OrderLineNbr" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>Line sequence nbr of the order item.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CartLineNbr" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>Line sequence nbr of the item in the cart.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ItemId" type="GroceryItemType" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer Ordered item Identifier.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="BasePriceAmt" minOccurs="0"/>			<xs:element ref="UnitPriceAmt" minOccurs="0"/>			<xs:element ref="ExtendedUnitPriceAmt" minOccurs="0"/>			<xs:element ref="ItemPriceAmt" minOccurs="0"/>			<xs:element ref="ExtendedItemPriceAmt" minOccurs="0"/>			<xs:element ref="NetItemPriceAmt" minOccurs="0"/>			<xs:element name="TotalPriceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total price derived by ItemPriceAmt X Quantity.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TotalBaseAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total base price of an item (qty * amt).</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PricePerAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Price per amount for random weight items displayed as eaches.  </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="BasePricePerAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Base price per amount for random weight items displayed as eaches.  </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="WeightDebitAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Weight debit amount for random weighted items.Ex: For SNAP items this is can be 10% of the item price.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CurrencyCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Currency used for the price of the item.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="PriceEffectiveStartDtTm" minOccurs="0"/>			<xs:element ref="PriceEffectiveEndDtTm" minOccurs="0"/>			<xs:element ref="Quantity" minOccurs="0"/>			<xs:element ref="UOM" minOccurs="0"/>			<xs:element ref="SellByWeightType" minOccurs="0"/>			<xs:element name="AvgItemWeight" minOccurs="0">				<xs:annotation>					<xs:documentation>For random weight items shows the average weight</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element ref="DiscountAllowedInd" minOccurs="0"/>			<xs:element ref="RewardAllowedInd" minOccurs="0"/>			<xs:element name="SubstitutionType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains information about the item substitution.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SubstitutionPreferenceNm" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer substitution preference in case the item is not available. For example, for an item called: Gerber Graduates Wagon Wheels Puffed Grains Apple Harvest - 1.48 OzCustomer can opt to have a substitution preference that says "Same Size Diff Brand"</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerPreferredSubstituteItem" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Customers preferred substitute item(s) to be used in place of an out of stock ordered item. Note that customer can choose multiple preferred substitute items or may not choose any preferred substitute items.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="SubstituteItemLineNbr" type="xs:int" minOccurs="0">							<xs:annotation>								<xs:documentation>Line sequence nbr of the customer preferred substitute item.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SubstituteItem" type="GrocerySubstituteItemType" minOccurs="0"/>						<xs:element name="Department" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>Contains department infomation such as:International CuisineFruits and VegetablesFrozen Food etc</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="Quantity" minOccurs="0"/>						<xs:element ref="UOM" minOccurs="0"/>						<xs:element ref="SellByWeightType" minOccurs="0"/>						<xs:element name="AvgItemWeight" minOccurs="0">							<xs:annotation>								<xs:documentation>For random weight items shows the average weight</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element ref="BasePriceAmt" minOccurs="0"/>						<xs:element ref="UnitPriceAmt" minOccurs="0"/>						<xs:element ref="ExtendedUnitPriceAmt" minOccurs="0"/>						<xs:element ref="ItemPriceAmt" minOccurs="0"/>						<xs:element ref="ExtendedItemPriceAmt" minOccurs="0"/>						<xs:element name="NetItemPriceAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Net item price amount in $</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="PricePerAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Price per amount for random weight items displayed as eaches.  </xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="BasePricePerAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Base price per amount for random weight items displayed as eaches.  </xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="WeightDebitAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Weight debit amount for random weighted items.Ex: For SNAP items this is can be 10% of the item price.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element ref="PriceEffectiveStartDtTm" minOccurs="0"/>						<xs:element ref="PriceEffectiveEndDtTm" minOccurs="0"/>						<xs:element name="ItemTaxAmt" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="AppliedDiscountAmt" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="CurrencyCd" type="xs:string" minOccurs="0"/>						<xs:element name="RegulatedItemInd" type="xs:boolean" minOccurs="0"/>						<xs:element name="PromotionTxt" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>Contains any promotional text for this item</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PromotionalDsc" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>Promotional description</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PromotionType" type="CodeWithDescription" minOccurs="0"/>						<xs:element ref="PromotionTriggerCd" minOccurs="0"/>						<xs:element ref="PromotionId" minOccurs="0"/>						<xs:element ref="LinkPLUNbr" minOccurs="0"/>						<xs:element ref="CouponPLUNbr" minOccurs="0"/>						<xs:element ref="PromotionPriceAmt" minOccurs="0"/>						<xs:element ref="CustomerOffers" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Eligible offers for a ordered/substitute item</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="RewardAllowedInd" minOccurs="0"/>						<xs:element ref="DiscountAllowedInd" minOccurs="0"/>						<xs:element ref="WICItemInd" minOccurs="0"/>						<xs:element name="SNAPItemInd" type="xs:boolean" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates if the item is Supplemental-Nutrition Assistance-Program eligible  or not.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="CustomerSavings" minOccurs="0"/>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="RegulatedItemInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if this item is a Regulated Item.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="RegulatedItemTxt" minOccurs="0">				<xs:annotation>					<xs:documentation>Label pertaining to a regulated item also known as retricted value.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="MadeToOrderItemInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if this item is a Made to Order (MTO) Item.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="MadeToOrderItemTxt" minOccurs="0">				<xs:annotation>					<xs:documentation>Label pertaining to a Made to Order item. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PreparationTm" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>If MTO Item then indicates the the maximum time (in hours) it may take to prep this item.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PromotionTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains any promotional text for this item</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PromotionalDsc" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Promotional description</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PromotionType" type="CodeWithDescription" minOccurs="0"/>			<xs:element ref="PromotionTriggerCd" minOccurs="0"/>			<xs:element ref="PromotionId" minOccurs="0"/>			<xs:element ref="LinkPLUNbr" minOccurs="0"/>			<xs:element ref="CouponPLUNbr" minOccurs="0"/>			<xs:element ref="PromotionPriceAmt" minOccurs="0"/>			<xs:element ref="CustomerOffers" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="ImageURLTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains hyperlink to the image of the item</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="Aisle" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains Aisle information where item is located example: aisleId: 1_15_7_4aisleName: Ice Cream and Novelties</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SimilarItemURLTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Hyperlink that points to similar items</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ItemDetailURLTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Hyperlink that points to where the item details can be found</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ConsumerWarnIconRequiredInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates whether this item needs to display the Consumer Item Warning icon.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="Department" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains department infomation such as:International CuisineFruits and VegetablesFrozen Food etc</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DisplayType" type="CodeWithDescription" minOccurs="0"/>			<xs:element name="ItemAvailableInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates whether the item is available</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ItemFoundInd" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element ref="WICItemInd" minOccurs="0"/>			<xs:element name="SNAPItemInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if the item is Supplemental-Nutrition Assistance-Program eligible  or not.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="AutoReplenishmentOrderType" type="AutoReplenishmentOrderType" minOccurs="0">				<xs:annotation>					<xs:documentation>Type to capture data related to Auto Replenishment Orders (ARO).</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveredItem" minOccurs="0">				<xs:annotation>					<xs:documentation>delivered/fullfilled  item details with respect to an ordered item. Multiple deliverred items can exist for an ordered item in case of substitutions.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence maxOccurs="unbounded">						<xs:element name="DeliveredItemLineNbr" type="xs:int" minOccurs="0"/>						<xs:element name="FulfillmentOrderId" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>Fulfillment order id generated with in th efulfillment system to pick the corresponding item.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="Item" type="GroceryItemType" minOccurs="0">							<xs:annotation>								<xs:documentation>Delivered item Identifier. It can be a original ordered item or a substitute item.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SubstitutedItemInd" type="xs:boolean" minOccurs="0"/>						<xs:element ref="Quantity" minOccurs="0"/>						<xs:element ref="UOM" minOccurs="0"/>						<xs:element ref="SellByWeightType" minOccurs="0"/>						<xs:element name="AvgItemWeight" minOccurs="0">							<xs:annotation>								<xs:documentation>For random weight items shows the average weight</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element ref="BasePriceAmt" minOccurs="0"/>						<xs:element ref="UnitPriceAmt" minOccurs="0"/>						<xs:element ref="ExtendedUnitPriceAmt" minOccurs="0"/>						<xs:element ref="ItemPriceAmt" minOccurs="0"/>						<xs:element ref="ExtendedItemPriceAmt" minOccurs="0"/>						<xs:element name="NetItemPriceAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Net item price amount in $</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="PricePerAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Price per amount for random weight items displayed as eaches.  </xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="BasePricePerAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Base price per amount for random weight items displayed as eaches.  </xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="WeightDebitAmt" minOccurs="0">							<xs:annotation>								<xs:documentation>Weight debit amount for random weighted items.Ex: For SNAP items this is can be 10% of the item price.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element ref="PriceEffectiveStartDtTm" minOccurs="0"/>						<xs:element ref="PriceEffectiveEndDtTm" minOccurs="0"/>						<xs:element name="ItemTaxAmt" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="AppliedDiscountAmt" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="14"/>									<xs:fractionDigits value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="CurrencyCd" type="xs:string" minOccurs="0"/>						<xs:element name="RegulatedItemInd" type="xs:boolean" minOccurs="0"/>						<xs:element name="PromotionTxt" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>Contains any promotional text for this item</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PromotionalDsc" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>Promotional description</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PromotionType" type="CodeWithDescription" minOccurs="0"/>						<xs:element ref="PromotionTriggerCd" minOccurs="0"/>						<xs:element ref="PromotionId" minOccurs="0"/>						<xs:element ref="LinkPLUNbr" minOccurs="0"/>						<xs:element ref="CouponPLUNbr" minOccurs="0"/>						<xs:element ref="PromotionPriceAmt" minOccurs="0"/>						<xs:element ref="CustomerOffers" minOccurs="0" maxOccurs="unbounded">							<xs:annotation>								<xs:documentation>Eligible offers for a ordered/substitute item</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="RewardAllowedInd" minOccurs="0"/>						<xs:element ref="DiscountAllowedInd" minOccurs="0"/>						<xs:element ref="WICItemInd" minOccurs="0"/>						<xs:element name="SNAPItemInd" type="xs:boolean" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates if the item is Supplemental-Nutrition Assistance-Program eligible  or not.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SmartSubstituteItemInd" type="xs:boolean" minOccurs="0">							<xs:annotation>								<xs:documentation>Valid values: False – Substituted item is not the suggested smart sub itemTrue – Substituted item is the suggested smart sub item.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element ref="CustomerSavings" minOccurs="0"/>						<xs:element name="DeliveredItemExceptionType" type="OrderExceptionType" minOccurs="0" maxOccurs="unbounded"/>						<xs:element name="AutoReplenishmentOrderType" type="AutoReplenishmentOrderType" minOccurs="0"/>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="OrderQty" minOccurs="0">				<xs:annotation>					<xs:documentation>customer ordered qty for the line item.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="FulfilledQty" minOccurs="0">				<xs:annotation>					<xs:documentation>fullfilled qty for the coresponding order item.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element ref="CustomerSavings" minOccurs="0"/>			<xs:element name="OrderLineExceptionType" type="OrderExceptionType" minOccurs="0" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="OrderType">		<xs:annotation>			<xs:documentation>Represents Retail Customer Order information</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="OrderNbr"/>			<xs:element name="SourceRetailFacility" type="FacilityType" minOccurs="0"/>			<xs:element name="CurrentStatusCd"/>			<xs:element name="CancelReasonCd"/>			<xs:element name="OriginCd"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="DeliveryType">		<xs:annotation>			<xs:documentation>Represents general grocery delivery information such as Slot Id, delivery charge, etc.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="CustomerType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains customer Type. Can be Residential, Business, etc.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliverySubType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>same as customerType, will be depricated in future versions.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliverySlotId" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Delivery Slot Id. This is a system generated id to uniquely identify the delivery slot.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="MasterSlotId" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Master Slot Id. This is a system generated id to indicate if delivery slot is a Master slot.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliverySlot" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Same as DeliverySlotId. Will be depricated in future versions.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliverySlotType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the delivery slot type. Example of a delivery slot is TWOHR (2 hr). There can also be 1 hr, and 4 hr delivery slots.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveryServiceType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines whether the delivery can be received by the user ATTENDED or UNATTENDED.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotPlan" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Delivery Slot Name. Can be STANDARD or PREMIUM depending on a lot of factors. Premium slots usually have a delivery time of 1 hr. Premium slot plans are also offered depending on the store where the order is placed. If the store is hybrid (with 3rd party delivery) then premium slots are usually offered.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="StartDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Start timestamp of the delivery in UTC</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="EndDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>End timestamp of the delivery in UTC</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="TotalDeliveryChargeAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Amount charged for this delivery</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveryFeeWaivedInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator to say whether the delivery fee is waived or not.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="FuelSurchargeWaivedInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator to say whether the fuel surcharge is waived or not.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ServiceFeeWaivedInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator to say whether the service fee is waived or not.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="SlotInvalidatedInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator of whether or not slot is invalid.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="DisplayStartDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the timestamp that is displayed to the user adjusted to the user's local timezone.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DisplayEndDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the timestamp that is displayed to the user adjusted to the user's local timezone.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DisplayExpiryDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Display Timestamp of when this delivery slot expires.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotAvailableDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Timestamp when slot is first available occurs. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotTillByDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Timestamp when expected till by slot time occurs. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotExpiryDtTm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Timestamp when this delivery slot expires</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="StageByDtTm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Stage By Date Time</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="EditCutoffDtTm" minOccurs="0"/>			<xs:element name="CustomerInstructionTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains special instructions for delivery left by the customer.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveryTimeZoneCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains the Time Zone for this particular delivery.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DeliveryNotesTxt" type="xs:string" minOccurs="0"/>			<xs:element name="DeliveryAddress" type="AddressEncryptedType" minOccurs="0"/>			<xs:element name="PartnerData" type="PartnerDataType" minOccurs="0"/>			<xs:element name="ShipMethodType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains ship method type. Ex: 'White Glove' </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ShipMethodSubType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains ship method sub types. Ex: 'Attended', ' In Home', 'Refrigerator', etc.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryCustomerType">		<xs:annotation>			<xs:documentation>Contains the retail customer information. Most of these attributes are taken from RetailCustomer BOD.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="CustomerId" type="IDType" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer Identification.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerAlternateId" type="AlternateIdType" minOccurs="0" maxOccurs="5"/>			<xs:element name="CustomerNm" type="PersonNameType" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer name Type.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="Contact" type="GroceryCommunicationType" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="ClubCardNbr" nillable="true" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer club card number.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CustomerPreference" type="CustomerPreferenceType" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Contains specific customer preferences like Terms.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerSubscription" type="CustomerSubscriptionType" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="InvalidatedInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Field represents whether or not customer is invalid.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryCommunicationType" abstract="false" mixed="false">		<xs:annotation>			<xs:documentation>Common type for specifying basic communication details including voice and digital channels.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="PhoneFaxContact" type="GroceryPhoneType" minOccurs="0"/>			<xs:element name="DigitalContact" type="GroceryDigitalAddressType" minOccurs="0"/>			<xs:element name="Address" type="AddressEncryptedType" minOccurs="0">				<xs:annotation>					<xs:documentation>Contact address</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="EncryptionOneWayDigest" minOccurs="0"/>			<xs:element ref="EffectiveTimePeriod" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryDigitalAddressType">		<xs:annotation>			<xs:documentation>Contains digital address like email id, facebook id, instagram id, linkedin URL and the type of address like id, URL etc.</xs:documentation>		</xs:annotation>		<xs:sequence>			<!--SM 16-Apr: As defined below it makes digitial address to have at least one value / entry. Is this intentional?-->			<xs:element name="AddressType" type="CodeWithName" minOccurs="0"/>			<xs:element name="DigitalAddress" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="200"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="EmailStatuses" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="EmailStatusCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Code of the email status</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="10"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="EmailStatusDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Description of the email status</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="EmailStatusVal" minOccurs="0">							<xs:annotation>								<xs:documentation>Phone status value.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="ResponseTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Phone status response text.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="200"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="ReferenceId" minOccurs="0">							<xs:annotation>								<xs:documentation>Reference Id</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="200"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="Sources" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="BannerCd" minOccurs="0">										<xs:annotation>											<xs:documentation>Banner code.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="10"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StoreNbr" minOccurs="0">										<xs:annotation>											<xs:documentation>Store number.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="10"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="SourceNm" minOccurs="0">										<xs:annotation>											<xs:documentation>Source name.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>								</xs:sequence>							</xs:complexType>						</xs:element>					</xs:sequence>					<xs:attribute ref="typeCode"/>				</xs:complexType>			</xs:element>			<xs:element name="EmailPurposes" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="PurposeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Code of the purpose.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="10"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="PurposeDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Description of the purpose.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="EffectivePeriod" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="FirstEffectiveDt" type="xs:date" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The first Dt on which a condition or a version of an object is, was, or will be in effect.  In order to simplify joins that must match a transaction record to reference data with a Dt filter, First Effective Dt should never contain null values.  When the First Effective Dt is unknown, it should be set to a default of 01/01/0001 or the lowest Dt value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="FirstEffectiveTm" type="xs:time" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The first time on which a condition or a version of an object is, was, or will be in effect. When the First Effective time is unknown, it should be set to a default of 00:00:00 or the lowest time value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="LastEffectiveDt" type="xs:date" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The last Dt on which a condition or a version of an object was, or will be in effect.  In order to simplify joins that must match a transaction record to reference data with a Dt filter, Last Effective Dt should never contain null values.  When the Last Effective Dt is unknown, it should be set to a default of 12/31/9999 or the highest Dt value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="LastEffectiveTm" type="xs:time" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The last time on which a condition or a version of an object is, was, or will be in effect. When the First Effective time is unknown, it should be set to a default of 23:59:59 or the lowest time value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="DurationNbr" minOccurs="0">							<xs:annotation>								<xs:documentation>Number that represents the duration.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="10"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="DurationUnitDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Duration unit. D for Days, W for weeks.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="20"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="InclusiveInd" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates whether or not the dates and times are inclusive or not.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="2"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>					<xs:attribute ref="typeCode"/>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="GroceryPhoneType">		<xs:annotation>			<xs:documentation>common object used to identify the usage type of phone like business, home</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="AreaCd" type="xs:integer" minOccurs="0"/>			<xs:element name="PhoneNbr" type="xs:integer" minOccurs="0"/>			<xs:element name="AreaCdTxt" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="10"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PhoneNbrTxt" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ExtensionNbr" type="xs:string" minOccurs="0"/>			<xs:element name="CountryCd" type="xs:integer" minOccurs="0"/>			<xs:element name="PhonePurposes" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="PurposeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Code of the purpose.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="10"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="PurposeDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Description of the purpose.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="EffectivePeriod" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="FirstEffectiveDt" type="xs:date" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The first Dt on which a condition or a version of an object is, was, or will be in effect.  In order to simplify joins that must match a transaction record to reference data with a Dt filter, First Effective Dt should never contain null values.  When the First Effective Dt is unknown, it should be set to a default of 01/01/0001 or the lowest Dt value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="FirstEffectiveTm" type="xs:time" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The first time on which a condition or a version of an object is, was, or will be in effect. When the First Effective time is unknown, it should be set to a default of 00:00:00 or the lowest time value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="LastEffectiveDt" type="xs:date" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The last Dt on which a condition or a version of an object was, or will be in effect.  In order to simplify joins that must match a transaction record to reference data with a Dt filter, Last Effective Dt should never contain null values.  When the Last Effective Dt is unknown, it should be set to a default of 12/31/9999 or the highest Dt value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="LastEffectiveTm" type="xs:time" nillable="false" minOccurs="0">							<xs:annotation>								<xs:documentation>The last time on which a condition or a version of an object is, was, or will be in effect. When the First Effective time is unknown, it should be set to a default of 23:59:59 or the lowest time value supported by the DBMS.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="DurationNbr" minOccurs="0">							<xs:annotation>								<xs:documentation>Number that represents the duration.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="10"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="DurationUnitDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Duration unit. D for Days, W for weeks.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="20"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="InclusiveInd" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates whether or not the dates and times are inclusive or not.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="2"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>					<xs:attribute ref="typeCode"/>				</xs:complexType>			</xs:element>		</xs:sequence>		<xs:attribute name="TypeCode" type="xs:string" use="optional" default="">			<xs:annotation>				<xs:documentation>Business/Mobile/Home/Fax</xs:documentation>			</xs:annotation>		</xs:attribute>		<xs:attribute name="PrimaryFlag" type="xs:boolean" use="optional" default="0"/>	</xs:complexType>	<xs:complexType name="CustomerSavingsType">		<xs:annotation>			<xs:documentation>defines total amount saved by the customer and various types of eligibilities for savings with in the order at header level.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="TotalCustomerSavingsAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>total amount saved by the customer</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="SavingsCategoryType" minOccurs="0" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Various types of customer eligible programs for savings.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:sequence>						<xs:element name="OfferId" type="xs:long" minOccurs="0">							<xs:annotation>								<xs:documentation>Unique Id generated for an offer with in offer authorizing system.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="SavingsCategoryId" type="xs:long" minOccurs="0"/>						<xs:element name="SavingsCategoryNm" type="xs:string" minOccurs="0"/>						<xs:element name="SavingsAmt" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:decimal">									<xs:totalDigits value="10"/>									<xs:fractionDigits value="2"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="DeliveryChargeType">		<xs:annotation>			<xs:documentation>Contains details about delivery charges.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="UPC" type="UPC" minOccurs="0">				<xs:annotation>					<xs:documentation>UPC for this charge. It is not item UPC, upc captured a s part of charges like plastic bags, delivary charge.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="Charge" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the actual charge. example: Service Charge, Fuel Surcharge</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ChargeCategory" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Charge category. Example: Service, surcharge</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ChargeAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Amount charged.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ActualChargeAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Actual amount charged</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CurrentFeeAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Fee that is charged after waivers are applied</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="FeeWaiveInd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if the fee for this charge is waived</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CurrencyCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Currency used for the Charge amount</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="PromotionType">		<xs:annotation>			<xs:documentation>Contains details about delivery promotions.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element ref="PromotionId" minOccurs="0"/>			<xs:element name="PromotionCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Promotion code. Ex: CHOBANI</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PromotionDsc" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Description of the promotion</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PromotionDiscountAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Amount discounted because of the promotion. </xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="CustomerPreferenceType">		<xs:annotation>			<xs:documentation>Contains customer preference fields.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="CheckedTermsInd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates whether the Terms and Conditions is ticked by the customer</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="VersionNbr" type="xs:int" minOccurs="0"/>			<xs:element name="PreferenceType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains preference type from Erums. Sample of preference is TEXT/SMS msg</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OptInContactNbr" minOccurs="0">				<xs:annotation>					<xs:documentation>Contact number provided by the customer in the Contact Number field during opt in. Can be different from the customer's actual contact number in their profile.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="OptInInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if the customer is opted in to a subscription.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="FulfillingFacilityType">		<xs:annotation>			<xs:documentation>Contains store related information.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element ref="RetailStoreId"/>			<xs:element ref="BannerCd" minOccurs="0"/>			<xs:element name="MFCInd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if this facility is a Micro Fulfillment Center (MFC)</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="HybridStoreInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if this facility is a hybrid store. A hybrid facility is one that provides both in-house and third party deliveries.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PremiumStoreInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates that this facility is a Premium store. Only Albertsons trucks do delivery for these kinds of facilities</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ThirdPartyDeliveryOnlyInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates if this facility only has Third Party Delivery available.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ERUMSEnabledInd" minOccurs="0">				<xs:annotation>					<xs:documentation>indicates if this facility is covered by the eRUMS system already.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="1"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="FulfillmentStoreId" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>For online Ecommerce orders an alternate store may be used to fulfill orders.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="PickupType">		<xs:annotation>			<xs:documentation>Contains In-store pickup or Drive Up and Go information.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="ShortOrderNbr" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PickupSlot" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Pickup Slot Id. This is a system generated id to uniquely identify the pickup slot. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupSlotType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>For DUG, slot types are usually just 1 hr.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotPlan" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Delivery Slot Name. Can be STANDARD or PREMIUM depending on a lot of factors. Premium slots usually have a delivery time of 1 hr. Premium slot plans are also offered depending on the store where the order is placed. If the store is hybrid (with 3rd party delivery) then premium slots are usually offered.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupStartDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Start timestamp of the expected pickup</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupEndDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>End timestamp of the pickup</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="TotalPickupChargeAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Amount charged for this DUG. Usually this is in the form of service fees</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupFeeWaivedInd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator to say whether the pickup fee is waived or not.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DisplayStartDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the timestamp that is displayed to the user adjusted to the user's local timezone.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="DisplayEndDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the timestamp that is displayed to the user adjusted to the user's local timezone.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SlotExpiryDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Timestamp when this pickup slot expires</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="StageByDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Stage By Date Time</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="EditCutoffDttm" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Edit Cutoff Date for this pickup</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CustomerInstructionTxt" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains special instructions for pickup left by the customer.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PickupTimeZoneCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>Contains the Time Zone for this particular delivery.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:element name="UOM" type="UOMType">		<xs:annotation>			<xs:documentation>Unit of Measure used for this item</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="Quantity">		<xs:annotation>			<xs:documentation>Item Quantity </xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="UnitPriceAmt">		<xs:annotation>			<xs:documentation>Unit price of the item in $</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="ItemPriceAmt">		<xs:annotation>			<xs:documentation>Derived by UnitPriceAmt X UOM Factor. example. Unit Price of 0.19 and factor of 36.8 FL OZ. ItemPrice will be 6.99</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:complexType name="CustomerSubscriptionType">		<xs:sequence>			<xs:element name="SubscriptionTypeCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>A code defining a high level categorization of a subscription typeExample:                     E  Email SavingsJ   J4UG   Grocery Delivery</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="SubscriptionDsc" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>The description of the subscriptions (subjects) that a customer can subscribe to.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="OptInInd" minOccurs="0">				<xs:annotation>					<xs:documentation>Opt Indicator.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string"/>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:element name="CustomerOffers">		<xs:annotation>			<xs:documentation>Eligible offers for an item</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="OfferId" type="xs:long" minOccurs="0">					<xs:annotation>						<xs:documentation>Unique Id generated for an offer with in offer authorizing system.</xs:documentation>					</xs:annotation>				</xs:element>				<xs:element name="ReferenceOfferId" type="xs:string" minOccurs="0">					<xs:annotation>						<xs:documentation>Offer Id referenced with external systems like offer execution system (Copient)</xs:documentation>					</xs:annotation>				</xs:element>				<xs:element name="OfferDiscountAmt" minOccurs="0">					<xs:annotation>						<xs:documentation>Eligible discount amt derived after applying offer conditions by the promotions engine. Offe rmay have cents off or percent off. Promotion engine derives the actual discount amount using offer parameters.</xs:documentation>					</xs:annotation>					<xs:simpleType>						<xs:restriction base="xs:decimal">							<xs:totalDigits value="10"/>							<xs:fractionDigits value="4"/>						</xs:restriction>					</xs:simpleType>				</xs:element>				<xs:element name="OfferSourceType" type="CodeWithDescription" minOccurs="0"/>				<xs:element name="CustomerRewards" minOccurs="0" maxOccurs="unbounded">					<xs:annotation>						<xs:documentation>Rewards applied or accumlated for an item</xs:documentation>					</xs:annotation>					<xs:complexType>						<xs:sequence>							<xs:element name="RewardsProgramId" type="xs:long" minOccurs="0"/>							<xs:element name="RewardsProgramNm" minOccurs="0">								<xs:simpleType>									<xs:restriction base="xs:string">										<xs:maxLength value="50"/>									</xs:restriction>								</xs:simpleType>							</xs:element>							<xs:element name="PointsEarnedQty" type="xs:integer" minOccurs="0">								<xs:annotation>									<xs:documentation>Reward points earned by the customer for the item purchased.</xs:documentation>								</xs:annotation>							</xs:element>							<xs:element name="PointsUsedQty" type="xs:integer" minOccurs="0">								<xs:annotation>									<xs:documentation>Reward pointsused by the customer for the item purchased.</xs:documentation>								</xs:annotation>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="ExtendedUnitPriceAmt">		<xs:annotation>			<xs:documentation>unit price derived after applying all promotions and eligible customer offers.</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="ExtendedItemPriceAmt">		<xs:annotation>			<xs:documentation>total item price after applying promotions and offers.</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="PromotionId" type="xs:long"/>	<xs:element name="LinkPLUNbr" type="xs:long">		<xs:annotation>			<xs:documentation>This is the link number assigned for the electronic coupon. If non-zero, CPN_PLU must be zero.  The CMS application responsible for pricing electronic club card promotions currently has a pool of 5 digit link numbers attached to it for identifying promotions. The starting digit of all the links is 8. This is currently done to identify the electronic promotion links from paper coupon PLUs and grocery lookup codes at Point of Sales.  In order to increase the number of available links, so that business will have the flexibility to price significantly more promotions in coming years, the 5 digit link is being expanded to 12 digits starting with 248. </xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="CouponPLUNbr">		<xs:simpleType>			<xs:restriction base="xs:string">				<xs:maxLength value="50"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="PromotionPriceAmt">		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="PromotionTriggerCd">		<xs:simpleType>			<xs:restriction base="xs:string">				<xs:maxLength value="50"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:complexType name="GroceryOrderProfileTypeType">		<xs:sequence maxOccurs="unbounded">			<xs:element name="ProfileType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines various order profiles.Ex WYSIWYG</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ProfileValueInd" type="xs:boolean" minOccurs="0"/>			<xs:element name="ProfileValueTxt" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="200"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:element name="FulFillmentSystemType" type="CodeWithDescription"/>	<xs:element name="EditCutoffDtTm" type="xs:dateTime">		<xs:annotation>			<xs:documentation>Customer order changes Cutoff Date for this delivery.</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="RescheduledDtTm" type="xs:dateTime">		<xs:annotation>			<xs:documentation>Customer reschedules order. Reschedule date and time for the order.</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="InstructionTxt">		<xs:annotation>			<xs:documentation>Any free format text pertaining to the grocery delivery order.</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:simpleContent>				<xs:extension base="xs:string">					<xs:attribute ref="typeCode"/>				</xs:extension>			</xs:simpleContent>		</xs:complexType>	</xs:element>	<xs:element name="CustomerNotesTxt">		<xs:annotation>			<xs:documentation>notes from customer for the order.</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:simpleContent>				<xs:extension base="xs:string">					<xs:attribute ref="typeCode"/>				</xs:extension>			</xs:simpleContent>		</xs:complexType>	</xs:element>	<xs:element name="DiscountAllowedInd" type="xs:boolean"/>	<xs:element name="RewardAllowedInd" type="xs:boolean">		<xs:annotation>			<xs:documentation>Indicates if the reward points can be eraned or used by the customer for the item.</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="WICItemInd" type="xs:boolean">		<xs:annotation>			<xs:documentation>Indicates if the item is Women-Infant-Child support program eligible or not.</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="PriceEffectiveEndDtTm" type="xs:dateTime"/>	<xs:element name="PriceEffectiveStartDtTm" type="xs:dateTime"/>	<xs:element name="BasePriceAmt">		<xs:annotation>			<xs:documentation>Base Price of the item</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:element name="NetItemPriceAmt">		<xs:annotation>			<xs:documentation>Used with a factor and price point (Ex: 1/$3.99, 2/$4.00)</xs:documentation>		</xs:annotation>		<xs:simpleType>			<xs:restriction base="xs:decimal">				<xs:totalDigits value="14"/>				<xs:fractionDigits value="4"/>			</xs:restriction>		</xs:simpleType>	</xs:element>	<xs:complexType name="OrderExceptionType">		<xs:annotation>			<xs:documentation>defines varous types of exceptions happened during the order process like pricing exception, qty short, oos, subs..etc</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="ExceptionId" type="xs:long" minOccurs="0"/>			<xs:element name="ExceptionType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Type of exception captured. ex pricing exemption or Qty excemption</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ExceptionReasonType" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>reson for excemption:ex: not enough stock, or offer not valid</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ExceptionCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Actual excemption code generated by the application.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ExceptionDsc" minOccurs="0">				<xs:annotation>					<xs:documentation>Actual excemption code description generated by the application.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="500"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ExceptionItemQty" minOccurs="0">				<xs:annotation>					<xs:documentation>exception item qty, if it is quantity exception type.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ExceptionCreateTs" type="xs:dateTime" minOccurs="0"/>			<xs:element name="CommentTxt" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="500"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ExceptionReportedByType" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="ReportedByUserId" type="xs:string" minOccurs="0"/>						<xs:element name="ReportedByFirstNm" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="ReportByLastNm" minOccurs="0">							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:element name="CustomerSavings" type="CustomerSavingsType">		<xs:annotation>			<xs:documentation>customer total savings  from all th eligible programs and offers.</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="RefundId" type="xs:long"/>	<xs:element name="SellByWeightType" type="CodeWithDescription">		<xs:annotation>			<xs:documentation>Defines whether this item is sold by weight or individual</xs:documentation>		</xs:annotation>	</xs:element>	<xs:complexType name="AutoReplenishmentOrderType">		<xs:sequence>			<xs:element name="AROItemInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates that this item can be Auto replenished.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="AROLineInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates that user subscribed to this item for Auto Replenishment on a schedule.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="UnitPriceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Unit price of the AutoRreplenishment item </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="ItemPriceAmt" minOccurs="0"/>			<xs:element name="ARLinkPLUNbr" type="xs:long" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the link PLU number assigned for Auto Replenishment Savings.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ARSavingsAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates the auto replenishment savings amount for customer</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="RefundByType">		<xs:annotation>			<xs:documentation>Indicates user and time who conducted Grocery Order refund</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="UserId" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="255"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="FirstNm" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="LastNm" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="RefundByReasonType" type="CodeWithDescription" minOccurs="0"/>			<xs:element ref="RefundByDtTm" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:element name="RefundByDtTm" type="xs:dateTime"/>	<xs:complexType name="CancelByType">		<xs:annotation>			<xs:documentation>Indicates user and time who conducted Grocery Order cancellation</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="UserId" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="255"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="FirstNm" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="LastNm" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CancelByReasonType" type="CodeWithDescription" minOccurs="0"/>			<xs:element ref="CancelByDtTm" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:element name="CancelByDtTm" type="xs:dateTime"/>	<xs:complexType name="PartnerDataType">		<xs:annotation>			<xs:documentation>Details about business partner identification for grocery order deliveries, pickup, etc. </xs:documentation>		</xs:annotation>		<xs:sequence minOccurs="0" maxOccurs="unbounded">			<xs:element name="PartnerTypeCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Business partner types (Fuel partner, Delivery partner, Fullfillment partner, Picker partner, etc. ). </xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:complexContent>						<xs:extension base="CodeWithDescription"/>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="InternalParnterInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Flag to indicate if partner is internal to Albertsons. (ex: ABS-GROCERY)</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="PartnerId" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PartnerNm" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="200"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="OrderChargesType">		<xs:annotation>			<xs:documentation>Contains various attributes related to grocery order charges.</xs:documentation>		</xs:annotation>		<xs:sequence minOccurs="0">			<xs:element name="TypeCd" type="xs:string" minOccurs="0"/>			<xs:element name="ChargeCd" default="" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="BasisAmt" default="0" minOccurs="0">				<xs:annotation>					<xs:documentation>Base Amt from which the charge is derived</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="BasisQty" default="0" minOccurs="0">				<xs:annotation>					<xs:documentation>Base quantity for which charge Amt is calculated</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="QuantityUOM" default="" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ChargeRate" default="0" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ChargeAmt" default="0" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="14"/>						<xs:fractionDigits value="4"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ChargePercent" default="0" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="6"/>						<xs:fractionDigits value="3"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ChargeDsc" default="" minOccurs="0">				<xs:annotation>					<xs:documentation>Description for the Charge</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="ReasonCd" minOccurs="0">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="PaymentType">		<xs:annotation>			<xs:documentation>Contains customer payment information</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="Tender" minOccurs="0" maxOccurs="unbounded">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="TenderId" minOccurs="0">							<xs:annotation>								<xs:documentation>Tenrder Identification UUID.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="36"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TenderTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Tender type such as  CREDIT_CARD.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TenderSubTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Tender sub type such as .</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="HolderNm" minOccurs="0">							<xs:annotation>								<xs:documentation>Card holder name.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="100"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TokenTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Encrypted token string.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="100"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="MaskedTenderNbr" minOccurs="0">							<xs:annotation>								<xs:documentation>masked tender number last 4 digits only.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="PrimaryPurposeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Primary purpose of the tender, SHOP, DELIVERY_SUBSCRIPTION.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="100"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="ExpireMonthYearTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Tender Expiry information, month and year MMYY</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="5"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="CardTypeNm" minOccurs="0">							<xs:annotation>								<xs:documentation>Type of card. Ex: VISA, AMEX, MC.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="30"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="EntityIssuerNm" minOccurs="0">							<xs:annotation>								<xs:documentation>Entity issuing tender.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="100"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="BillingAddress" type="AddressType" minOccurs="0">							<xs:annotation>								<xs:documentation>Address identification of billing.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="PostalCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Postal Code associated with the tender for payment pusposes.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="6"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="Token" minOccurs="0">							<xs:complexType>								<xs:sequence minOccurs="0">									<xs:element name="TokenId" minOccurs="0">										<xs:annotation>											<xs:documentation>Encryption token Id.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="36"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="TokenTypeCd" minOccurs="0">										<xs:annotation>											<xs:documentation>Encryption token type.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="KeyVersionNbr" minOccurs="0">										<xs:annotation>											<xs:documentation>Encryption key version number.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="KeyAliasTxt" minOccurs="0">										<xs:annotation>											<xs:documentation>Encryption key alias.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="4"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="SaltTxt" minOccurs="0">										<xs:annotation>											<xs:documentation>Encryption key salt text.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="Status" minOccurs="0">							<xs:complexType>								<xs:sequence minOccurs="0">									<xs:element name="StatusCd" minOccurs="0">										<xs:annotation>											<xs:documentation>Status code of the payment.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusTypeCd" minOccurs="0">										<xs:annotation>											<xs:documentation>Status type code of the payment.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusDsc" minOccurs="0">										<xs:annotation>											<xs:documentation>Status description.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="200"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusVal" minOccurs="0">										<xs:annotation>											<xs:documentation>The value of the status.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusResponseTxt" minOccurs="0">										<xs:annotation>											<xs:documentation>Status response description.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="500"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusReferenceId" minOccurs="0">										<xs:annotation>											<xs:documentation>Refence Id of the status.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="100"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusSourceNm" minOccurs="0">										<xs:annotation>											<xs:documentation>Source name of the status.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="StatusBannerId" minOccurs="0">										<xs:annotation>											<xs:documentation>BannerId of the status.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="50"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="TokenEffectivePeriod" minOccurs="0">										<xs:complexType>											<xs:sequence minOccurs="0">												<xs:element ref="FirstEffectiveDt" minOccurs="0"/>												<xs:element ref="FirstEffectiveTm" minOccurs="0"/>												<xs:element ref="LastEffectiveDt" minOccurs="0"/>												<xs:element ref="LastEffectiveTm" minOccurs="0"/>												<xs:element name="DurationNbr" minOccurs="0">													<xs:annotation>														<xs:documentation>Number that represents the duration.</xs:documentation>													</xs:annotation>													<xs:simpleType>														<xs:restriction base="xs:string">															<xs:maxLength value="10"/>														</xs:restriction>													</xs:simpleType>												</xs:element>												<xs:element name="DurationUnitDsc" minOccurs="0">													<xs:annotation>														<xs:documentation>Duration unit. D for Days, W for weeks.</xs:documentation>													</xs:annotation>													<xs:simpleType>														<xs:restriction base="xs:string">															<xs:maxLength value="20"/>														</xs:restriction>													</xs:simpleType>												</xs:element>												<xs:element name="InclusiveInd" minOccurs="0">													<xs:annotation>														<xs:documentation>Indicates whether or not the dates and times are inclusive or not.</xs:documentation>													</xs:annotation>													<xs:simpleType>														<xs:restriction base="xs:string">															<xs:maxLength value="2"/>														</xs:restriction>													</xs:simpleType>												</xs:element>											</xs:sequence>											<xs:attribute ref="typeCode"/>										</xs:complexType>									</xs:element>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="RequiredAuthAmt" type="xs:decimal" minOccurs="0">							<xs:annotation>								<xs:documentation>This is the amount that requires authorization from the credit company</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="AuthCd" type="xs:string" minOccurs="0">							<xs:annotation>								<xs:documentation>This is the authorization code provided by the credit card company upon approving a transaction</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="AuthDt" type="xs:dateTime" minOccurs="0">							<xs:annotation>								<xs:documentation>Date and time when the authorization code was issued.</xs:documentation>							</xs:annotation>						</xs:element>						<xs:element name="TransactionTagId" minOccurs="0">							<xs:annotation>								<xs:documentation>Transaction Tag identification.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="20"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="InvalidInd" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates whether or not this payment is invalid.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="1"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="FullAuthorizationPayInd" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates whether the entire amount has been payed.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="1"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TenderOriginCd" type="CodeWithDescription" minOccurs="0">							<xs:annotation>								<xs:documentation>Indicates the origin of the tender. This is a dynamic field where values assigned are from source of refund MI/VPOS/ECHO. Also referred to by business as 'stateOfOrigin'.</xs:documentation>							</xs:annotation>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="RefundCancellationType">		<xs:annotation>			<xs:documentation>Contains customer refund and cacelleation information.</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="SequenceNbr" type="xs:integer" minOccurs="0">				<xs:annotation>					<xs:documentation>The refund sequence number can be used as to uniquely distinguish mulitple refund transactions of same type. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element ref="RefundId" minOccurs="0">				<xs:annotation>					<xs:documentation>The refundId tied to the type of refund such as credit card.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="TenderId" minOccurs="0">				<xs:annotation>					<xs:documentation>Tenrder Identification UUID.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="36"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TenderTypeCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Tender type such as  CREDIT_CARD.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TenderSubTypeCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Tender sub type such as .</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TokenTxt" minOccurs="0">				<xs:annotation>					<xs:documentation>Encrypted token string.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="MaskedTenderNbr" minOccurs="0">				<xs:annotation>					<xs:documentation>masked tender number last 4 digits only.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="PrimaryPurposeCd" minOccurs="0">				<xs:annotation>					<xs:documentation>Primary purpose of the tender, SHOP, DELIVERY_SUBSCRIPTION.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="100"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="Token" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="TokenId" minOccurs="0">							<xs:annotation>								<xs:documentation>Encryption token Id.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="36"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TokenTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Encryption token type.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="KeyVersionNbr" minOccurs="0">							<xs:annotation>								<xs:documentation>Encryption key version number.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="KeyAliasTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Encryption key alias.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="4"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="SaltTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Encryption key salt text.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="TenderStatus" minOccurs="0">				<xs:complexType>					<xs:sequence minOccurs="0">						<xs:element name="StatusCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Status code of the payment.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusTypeCd" minOccurs="0">							<xs:annotation>								<xs:documentation>Status type code of the payment.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusDsc" minOccurs="0">							<xs:annotation>								<xs:documentation>Status description.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="200"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusVal" minOccurs="0">							<xs:annotation>								<xs:documentation>The value of the status.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusResponseTxt" minOccurs="0">							<xs:annotation>								<xs:documentation>Status response description.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="500"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusReferenceId" minOccurs="0">							<xs:annotation>								<xs:documentation>Refence Id of the status.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="100"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusSourceNm" minOccurs="0">							<xs:annotation>								<xs:documentation>Source name of the status.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="StatusBannerId" minOccurs="0">							<xs:annotation>								<xs:documentation>BannerId of the status.</xs:documentation>							</xs:annotation>							<xs:simpleType>								<xs:restriction base="xs:string">									<xs:maxLength value="50"/>								</xs:restriction>							</xs:simpleType>						</xs:element>						<xs:element name="TokenEffectivePeriod" minOccurs="0">							<xs:complexType>								<xs:sequence minOccurs="0">									<xs:element ref="FirstEffectiveDt" minOccurs="0"/>									<xs:element ref="FirstEffectiveTm" minOccurs="0"/>									<xs:element ref="LastEffectiveDt" minOccurs="0"/>									<xs:element ref="LastEffectiveTm" minOccurs="0"/>									<xs:element name="DurationNbr" minOccurs="0">										<xs:annotation>											<xs:documentation>Number that represents the duration.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="10"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="DurationUnitDsc" minOccurs="0">										<xs:annotation>											<xs:documentation>Duration unit. D for Days, W for weeks.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="20"/>											</xs:restriction>										</xs:simpleType>									</xs:element>									<xs:element name="InclusiveInd" minOccurs="0">										<xs:annotation>											<xs:documentation>Indicates whether or not the dates and times are inclusive or not.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:restriction base="xs:string">												<xs:maxLength value="2"/>											</xs:restriction>										</xs:simpleType>									</xs:element>								</xs:sequence>								<xs:attribute ref="typeCode"/>							</xs:complexType>						</xs:element>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="CurrencyCd" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the company base currency code.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="RequiredAuthAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the amount that requires authorization from the credit company.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="BalanceAmt" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>Customer balance amount associated to the tender type/sub type. Ex: Balance amount for EBT_SNAP, EBT_CASH, COA, etc.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="AuthCd" type="xs:string" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the authorization code provided by the credit card company upon approving a transaction</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="AuthDt" type="xs:dateTime" minOccurs="0">				<xs:annotation>					<xs:documentation>Date and time when the authorization code was issued.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="TransactionTagId" minOccurs="0">				<xs:annotation>					<xs:documentation>Transaction Tag identification.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="TenderOriginCd" type="CodeWithDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates the origin of the tender. This is a dynamic field where values assigned are from source of refund MI/VPOS/ECHO. Also referred to by business as 'stateOfOrigin'.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="CreditOnAccntId" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifier for when customer has a credit on account (COA) balance amount associated to their account.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="RefundByType" type="RefundByType" minOccurs="0"/>			<xs:element name="CancellationEligibleInd" type="xs:boolean" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicator to say if the refund is eligible for cancellation.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="CreditOnAccountType">		<xs:annotation>			<xs:documentation>Customer Credit on Account (COA) information such as COA eligible amounts and COA balances.  </xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="CreditOnAccntId" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifier for when customer has a credit on account (COA) amount associated to their account. Note for COA type there will be no associated token number for payment. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="50"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CurrencyCd" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the company base currency code.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="20"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CreditOnAccountAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Total amount classifed as Credit On Account (COA)</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="CreditOnAccountBalanceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Current balance for Credit on Account</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="AppliedCreditOnAccountAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>Applied Credit on account amount</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="ElectronicBenefitTrnsfBalanceType">		<xs:annotation>			<xs:documentation>Customer's Electronic Benefit Transfer (EBT) balane data such as EBT cash balances and EBT Supplemental Nutrition Assistance Program (SNAP) balance. </xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="CashBalanceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>EBT remaining eligible cash balance amount. </xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="SNAPBalanceAmt" minOccurs="0">				<xs:annotation>					<xs:documentation>EBT remaining eligible SNAP balance amount.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base="xs:decimal">						<xs:totalDigits value="10"/>						<xs:fractionDigits value="2"/>					</xs:restriction>				</xs:simpleType>			</xs:element>		</xs:sequence>	</xs:complexType></xs:schema>