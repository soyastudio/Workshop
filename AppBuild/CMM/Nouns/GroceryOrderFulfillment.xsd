<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2021 rel. 2 sp1 (x64) (http://www.altova.com) by poliv02 (Albertsons) -->
<!-- This file was generated by W3C XML/XSD Export Model Bridge from Meta Integration Technology, Inc. (MITI) -->
<xs:schema xmlns="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:altova="http://www.altova.com/xml-schema-extensions" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<!--V1.7 Patrick Oliver 10/14/21: Following changes done for Acupick:
• Changed FulfilledItem to unbounded 
• Moved ItemQty and ActualPickQty to FulfilledItem
• Added SellByWeightType to FulfilledItem
• Changed SubstituteItem to unbounded -->
	<!--V1.6 Patrick Oliver 08/13/21: Following changes done for Acupick:
• Added EventStorageUnitData to AssignmentEvent 
• Added StorageUnitLooseInd  
• ItemStorageUnitType complex type at ItemSelection
• Added PrimaryPicklistInd at Assignment-->
	<!--V1.5 Patrick O. 07/13/21: Added PickListSelectedType-->
	<!--V1.4 07/08/21 Added OrderBatch details.-->
	<!--V1.3 Patrick Oliver 05/13/21: (1) Added SubstituteItem, SmartSubstituteItemInd, SubstituteItemReasonCd-->
	<!--V1.2 Patrick O. 04/21/21: Updated EmployeeAltId datatype to AlternateIdType-->
	<!--V1.1 Sai  012221  Added AltTransaction and ShiftNbr-->
	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>
	<xs:complexType name="GroceryOrderFulfillmentType">
		<xs:annotation>
			<xs:documentation>Represents data related to the workl time in a warehouse shipment selection task by customer order, assignments and associate.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="unbounded">
			<xs:element ref="Abs:CorporationId"/>
			<xs:element ref="Abs:DivisionId"/>
			<xs:element name="FacilityId">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FacilityType" type="CodeWithDescription"/>
			<xs:element name="FacilityAltId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrderFulfillmentData" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines various types of assignments and events with in fulfillment process.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Assignment" type="AssignmentType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Assignment is a unit of work to be performed with in a line of business.
Ex: Grocery Order Fulfillment, Grocery Order Consolidation, Grocery Order Staging, Grocery Order Delivery.
Each assignment can have one or more events.
Fulfillment can have item selection/picking as an event.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AssignmentEvent" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Different types of events with in an assignment.
Order fulfillment can be an assignment
Item picking can be an event.
Staging bins can be an event.
Employees can be assigned at assignment level or an event level.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="AssignmentEventType" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="AssignmentEventSubType" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="AssignmentEventId" type="xs:long" minOccurs="0"/>
									<xs:element ref="FacilityEmployee" minOccurs="0"/>
									<xs:element name="AssignmentEventStatus" type="StatusType" minOccurs="0"/>
									<xs:element name="PickListSelectedType" type="CodeWithDescription" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Type that shows which picklist was selected in relation to all  other picklists shown at time of picking.  
Ex: If there are four picklists available for assignment and an associate picks a non-defaulted picklist in the list, instead of the expected first one in the list, we want to capture the selected pick list was not the default one.  </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EventStartTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="EventEndTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element ref="ScheduledStartTs" minOccurs="0"/>
									<xs:element ref="ScheduledEndts" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Expected end time to complete the event.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EventJobData" type="JobDataType" minOccurs="0"/>
									<xs:element name="EventLocation" type="FacilityLocationPointType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Item selection or staging location with in the facility </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EventStorageUnitData" minOccurs="0">
										<xs:complexType>
											<xs:sequence minOccurs="0">
												<xs:element name="EventStorageUnitType" type="StorageUnitType" minOccurs="0"/>
												<xs:element ref="StorageUnitId" minOccurs="0"/>
												<xs:element name="StorageUnitWt" minOccurs="0">
													<xs:annotation>
														<xs:documentation>total weight of the storage unit.</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:decimal">
															<xs:totalDigits value="14"/>
															<xs:fractionDigits value="4"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="StorageUnitItemQty" type="xs:integer" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Number of Items stored in each storage unit.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element ref="StorageUnitLooseInd" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="EventExceptions" type="FulfillmentExceptionType" minOccurs="0" maxOccurs="unbounded"/>
									<xs:element name="ItemSelection" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Selection/picking of order items from facility locations to complete the fulfillment order</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PickListId" type="xs:long" minOccurs="0">
													<xs:annotation>
														<xs:documentation>item pick list generated by the fulfillment system to select items from the fulfillment facility.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="FulfillmentOrderId" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Fulfillment order id generated with in fulfillment system.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="OrderId" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Customer order or store order that has information about the items needed form the warehouse and dleivery schedules.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="VersionNbr" type="xs:int" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Initial version of the order is 1. Version Number increments as the order is updated</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="RevisionNbr" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Contains revision number generated from the eRums system</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SubOrderNbr" type="xs:integer" minOccurs="0"/>
												<xs:element name="OrderDetailId" type="xs:integer" minOccurs="0"/>
												<xs:element name="ServiceType" type="CodeWithDescription" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Customer order delivery service type. ex: Delivery or DUG</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SelectionType" type="CodeWithDescription" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Selection type ID (HS=Hand Select,
PS=Pallet Select)</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="OrderBatch" minOccurs="0">
													<xs:annotation>
														<xs:documentation>If the picklist order is part of a batch that conatins multiple orders together for fulfillment processing.</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:sequence>
															<xs:element name="OrderBatchInd" type="xs:boolean" minOccurs="0"/>
															<xs:element name="OrderBatchNbr" type="xs:string" minOccurs="0"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
												<xs:element name="OrderedItem" type="GroceryItemType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Customer ordered item attributes. </xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SubstitutionAllowedInd" type="xs:boolean" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Indicates if the substitution is allowed for the ordered item.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SubstitutionType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Substituted item type.</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:complexContent>
															<xs:extension base="CodeWithDescription"/>
														</xs:complexContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="SubstituteItem" type="GrocerySubstituteItemType" minOccurs="0" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Shows the list of acceptable substitute item(s) that can be used in place of the customers ordered item. </xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="FulfilledItem" minOccurs="0" maxOccurs="unbounded">
													<xs:complexType>
														<xs:complexContent>
															<xs:extension base="GroceryItemType">
																<xs:sequence>
																	<xs:element name="ItemQty" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>Quantity of picked UPC </xs:documentation>
																		</xs:annotation>
																		<xs:simpleType>
																			<xs:restriction base="xs:decimal">
																				<xs:totalDigits value="14"/>
																				<xs:fractionDigits value="4"/>
																			</xs:restriction>
																		</xs:simpleType>
																	</xs:element>
																	<xs:element name="ActualPickQty" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>This represents the fulfilledQty. Note that for weighted items set to total quantity ordered. For other item types it generally is same as upc qty.</xs:documentation>
																		</xs:annotation>
																		<xs:simpleType>
																			<xs:restriction base="xs:decimal">
																				<xs:totalDigits value="14"/>
																				<xs:fractionDigits value="4"/>
																			</xs:restriction>
																		</xs:simpleType>
																	</xs:element>
																	<xs:element ref="StorageUnitId" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>Bin or tote tag id.</xs:documentation>
																		</xs:annotation>
																	</xs:element>
																	<xs:element ref="SellByWeightType" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>Defines whether this item is sold by weight or individual. Example values include: 'E', or 'w' or 'I' , 'P'  </xs:documentation>
																		</xs:annotation>
																	</xs:element>
																	<xs:element name="SubstituteItemInd" type="xs:boolean" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>Flag if set indicates that the substitution item is picked instead of an original item </xs:documentation>
																		</xs:annotation>
																	</xs:element>
																	<xs:element name="SmartSubstituteItemInd" type="xs:boolean" minOccurs="0">
																		<xs:annotation>
																			<xs:documentation>Valid values: False – Substituted item is not the suggested smart sub item
True – Substituted item is the suggested smart sub item.</xs:documentation>
																		</xs:annotation>
																	</xs:element>
																	<xs:element name="SubstituteItemReasonCd" type="CodeWithDescription" minOccurs="0"/>
																</xs:sequence>
															</xs:extension>
														</xs:complexContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="ItemExpiryDt" type="xs:date" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Expiry dt of the selected item in case of preshables </xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ItemUnitWt" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Product weight in Pounds</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:decimal">
															<xs:totalDigits value="14"/>
															<xs:fractionDigits value="4"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="WeightUOM" type="UOMType" minOccurs="0"/>
												<xs:element name="ItemUnitVol" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Product volume in cubic inches</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:decimal">
															<xs:totalDigits value="14"/>
															<xs:fractionDigits value="4"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="VolumeUOM" type="UOMType" minOccurs="0"/>
												<xs:element name="ItemSizeDsc" type="xs:string" minOccurs="0"/>
												<xs:element name="PalletData" type="PalletDataType" minOccurs="0" maxOccurs="unbounded"/>
												<xs:element name="SelectionStartTs" type="xs:dateTime" minOccurs="0"/>
												<xs:element name="SelectionEndTs" type="xs:dateTime" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Actual end time of the item selection process.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element ref="ScheduledStartTs" minOccurs="0"/>
												<xs:element ref="ScheduledEndts" minOccurs="0"/>
												<xs:element name="OrderQty" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Customer ordered quantity.</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:decimal">
															<xs:totalDigits value="14"/>
															<xs:fractionDigits value="4"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="SelectionLocation" type="FacilityLocationPointType" minOccurs="0"/>
												<xs:element name="SelectionLocationSeq" type="xs:int" minOccurs="0">
													<xs:annotation>
														<xs:documentation>identiifes location sequence within a selection process.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="HazardousInd" type="xs:boolean" minOccurs="0"/>
												<xs:element name="BulkSelectionLimit" type="xs:integer" minOccurs="0"/>
												<xs:element name="MultiPickInd" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>indicate if this work unit is
part of a multi-pick assignment</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Route" type="CodeWithDescription" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Item Selection route</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="RouteStopSeqNbr" type="xs:int" minOccurs="0"/>
												<xs:element name="PickGroupId" type="xs:integer" minOccurs="0"/>
												<xs:element name="PriorityType" type="CodeWithDescription" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Type of Priority in selection</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ItemStorageUnitType" type="StorageUnitType" minOccurs="0"/>
												<xs:element name="OrderLineExceptions" type="FulfillmentExceptionType" minOccurs="0" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>defines varous types of exceptions happened during the process like qty short, oos, subs, picking delays...etc</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="OrderLineAuditData" type="RecordAuditData" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AssignmentType">
		<xs:annotation>
			<xs:documentation>Defines the work assignment for a warehouse task like shipping, replenishment or putaway.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AssignmentId" type="xs:long">
				<xs:annotation>
					<xs:documentation>task assignment id. Uniquely identifies the unit of work assignment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PicklistId" type="xs:long" minOccurs="0"/>
			<xs:element name="PrimaryPicklistInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicator stating if the picklist is primary or not</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AltTransaction" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>define various other transactions ids like system ids or any other reference ids.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AltTransactionId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AltTransactionType" type="CodeWithDescription" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FulfillmentSystemType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>System type that handles the fulfillment order in a facility. Ex Manhattan</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignmentNm" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>name of the task. ex picking order items or staging the bins/totes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignmentType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Assignment type within a task. Fulfillment is the task and picking/selection is an assignment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="FacilityEmployee" minOccurs="0"/>
			<xs:element name="AssignmentJobCd" type="JobDataType" minOccurs="0"/>
			<xs:element name="AssignmentPriority" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Priority of the assignment. 1=High and 9=Low</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignmentStatus" type="StatusType" minOccurs="0"/>
			<xs:element name="SplitAssignmentId" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Split (re-assigned) assignment
number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignedDtTm" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time assignment was assigned to an
associate</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartTs" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Assignment work actual Start timestamp</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTs" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Assignment work actual End Timestamp</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScheduledStartTS" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Originally Scheduled assignment start timestamp</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScheduledEndTs" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Originally Scheduled selection end timestamp</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShiftNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Facility work shift nbr.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ServiceType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>customer order delivery service type. 
Values : Delivery
             DUG
             WUG</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Equipment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Details of the equipment used for the assignment. ex: Fork lift</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="EquipmentType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="EquipmentId" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Equipment Unit ID number/code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EquipmentClass" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="EquipmentCategory" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="EquipmentReadyTm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Time associate is allowed to retrieve
equipment and return after use</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:duration">
										<xs:attribute ref="UOMCd"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AssignmentToStartTm" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Initial Time taken to start an assignment</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:duration">
							<xs:attribute ref="UOMCd"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AssignmentToEndTm" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time taken to end an assignment.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:duration">
							<xs:attribute ref="UOMCd"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="TotalTravelDistance" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Distance travelled as part of the assignment within a facility. 
Ex: distance covered to pick all the items from different ailes in a facility.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute name="UOMCd" type="xs:string"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="TotalItemQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Count of total item accumlated in the assignment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalWt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total accumlated wt of all selected items.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WeightUOM" type="UOMType" minOccurs="0"/>
			<xs:element name="StorageUnitData" minOccurs="0">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="ActivityStorageUnitType" type="StorageUnitType" minOccurs="0"/>
						<xs:element ref="StorageUnitId" minOccurs="0"/>
						<xs:element name="StorageUnitWt" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="StorageUnitItemQty" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of Items stored in each storage unit.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="StorageUnitLooseInd" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TotalStorageUnitQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>total number of bins/ totes/bags used in the assignment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignmentExceptions" type="FulfillmentExceptionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Fulfillment exceptions captured at header level. like picking delays, labor not avlbl, OOS, Short order..etc</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignmentAuditData" type="RecordAuditData" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LocationCoordinates">
		<xs:annotation>
			<xs:documentation>Coordinates of a location point in a warehouse.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CoordinateTypeNm" type="xs:string" minOccurs="0"/>
			<xs:element name="XCoordinate" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="8"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="YCoordinate" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="8"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ZCoordinate" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="8"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PalletHI" type="xs:integer" nillable="true">
		<xs:annotation>
			<xs:documentation>Number of layers of inventory units (cases) on a pallet.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PalletTI" type="xs:integer" nillable="true">
		<xs:annotation>
			<xs:documentation>Number of inventory units (cases) that make up a layer on a pallet.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="PalletDataType">
		<xs:annotation>
			<xs:documentation>Defines pallet related attributes in a work unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PalletTypeNm" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Selection, return, residual..etc</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LicensePlateId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="18"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PalletNbr" type="xs:string" minOccurs="0"/>
			<xs:element name="RotatePalletInd" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>to indicate if pallet is to be rotated when inserted in the location</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PalletCategory" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Category of the pallet
(R=Reserve, S=Selection</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="PalletHI" minOccurs="0"/>
			<xs:element ref="PalletTI" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SectionDataType">
		<xs:annotation>
			<xs:documentation>Defines data for various warehouse sections involved in a work unit like from section, to section, residual section etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SectionTypeNm" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of the section refered in this segment, ex from section, To section, Residual section, Replenishment section..etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Warehouse From Aisle section range</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaskDurationType">
		<xs:annotation>
			<xs:documentation>Time taken for various kinds of activities in a warehouse task.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TaskNm" type="xs:string" minOccurs="0"/>
			<xs:element name="TimeTaken" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:fractionDigits value="3"/>
						<xs:totalDigits value="7"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TimeUOM" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time unit used to measure Task duration. ex minutes, seconds, hours</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FacilityEmployeeType">
		<xs:annotation>
			<xs:documentation>Defines warehouse employee assigned to an assignment in a warehouse task.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EmployeeId" type="xs:integer" minOccurs="0"/>
			<xs:element name="EmployeeAltId" type="AlternateIdType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="EmployeeNm" type="PersonNameType" minOccurs="0"/>
			<xs:element name="AssociateType" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="AssociateStatus" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="SupervisorInd" type="xs:boolean" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FacilityLocationPointType">
		<xs:annotation>
			<xs:documentation>Various location point and point description data in a facility. Ex: Item picking locations like Ailes, or staging location or drop off loation or customer pickup location.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LocationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Type of the location. Ex Aisle, Section, Bay, Side..etc</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="CodeWithName">
							<xs:sequence>
								<xs:element name="LocationSubTypeCd" type="CodeWithName" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Subtype with in a type of location.
Ex: Aisle with in a section.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LocationId" minOccurs="0">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="20"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="LocationPointNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LocationCoordinate" type="LocationCoordinates" minOccurs="0"/>
			<xs:element name="LocationDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TempZoneCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Temperature Zone code of the item location. Ex freezer, Dry</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GroceryItemType">
		<xs:annotation>
			<xs:documentation>Retail Item identifiers generally used in albertsons ecommerce business.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UPC" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:UPC"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="UPCComponents" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UPC ID broken into individual Components.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="UPCComponentsType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="GTINID" type="xs:string" minOccurs="0"/>
			<xs:element name="VendorProductID" type="xs:string" minOccurs="0"/>
			<xs:element name="SystemSpecificItemId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Like NDA id for Drugs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseProductNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Popularly known as BPN number in eCommerce world. Identifier generated in eCom for a group of similar elements. BPN can represent multiple CICs or UPCs. BPN is used to dispaly items in safeway.com online sales site.
 Ex Seedless red grapes will have one BPN but there may be multiple varities with in red grapes like crimson red, dark red or light red with different cic/upcs.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PLUCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Product look up code.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemDescription" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GrocerySubstituteItemType">
		<xs:annotation>
			<xs:documentation>Details for substitute Item that is used in place of an out of stock ordered item. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UPC" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:UPC"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="UPCComponents" minOccurs="0">
				<xs:annotation>
					<xs:documentation>UPC ID broken into individual Components.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="UPCComponentsType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="GTINID" type="xs:string" minOccurs="0"/>
			<xs:element name="VendorProductID" type="xs:string" minOccurs="0"/>
			<xs:element name="SystemSpecificItemId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Like NDA id for Drugs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseProductNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Popularly known as BPN number in eCommerce world. Identifier generated in eCom for a group of similar elements. BPN can represent multiple CICs or UPCs. BPN is used to dispaly items in safeway.com online sales site.
 Ex Seedless red grapes will have one BPN but there may be multiple varities with in red grapes like crimson red, dark red or light red with different cic/upcs.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PLUCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Product look up code.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ItemDescription" type="xs:string" minOccurs="0"/>
			<xs:element name="SubstituteItemRankNbr" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Priority number field that is used to rank customer's substitute items. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FulfillmentExceptionType">
		<xs:annotation>
			<xs:documentation>defines varous types of exceptions happened during the process like pricing exception, qty short, oos, subs..etc</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ExceptionId" type="xs:long" minOccurs="0"/>
			<xs:element name="ExceptionType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of exception captured. ex pricing exemption or Qty excemption</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExceptionReasonType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>reson for excemption:
ex: not enough stock, or offer not valid</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExceptionCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Actual excemption code generated by the application.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExceptionDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Actual excemption code description generated by the application.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExceptionItemQty" minOccurs="0">
				<xs:annotation>
					<xs:documentation>exception item qty, if it is quantity exception type.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExceptionCreateTs" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="CommentTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExceptionReportedByType" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ReportedByUserId" type="xs:string" minOccurs="0"/>
						<xs:element name="ReportedByFirstNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ReportByLastNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StorageUnitType">
		<xs:annotation>
			<xs:documentation>defines the type of storage used in assignment, ex bin, tote, bag or a container.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StorageUnitType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of the storage unit like Bin, Bag, Tote..etc</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StorageUnitSubType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>sub type of storage unit. like types of bins ex Frozen, Chilled, Dry, Hot Zone, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StorageUnitCapacity" minOccurs="0">
				<xs:annotation>
					<xs:documentation>different types of storage bin/container capacities like weight, vol..etc</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="CapacityType" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="CapacityValueNbr" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="14"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="JobDataType">
		<xs:annotation>
			<xs:documentation>Defines warehouse job codes and functions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="JobCd" type="xs:integer" minOccurs="0"/>
			<xs:element name="JobDsc" type="xs:string" minOccurs="0"/>
			<xs:element name="JobShortDsc" type="xs:string" minOccurs="0"/>
			<xs:element name="JobCategory" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="JobClassification" type="CodeWithDescription" minOccurs="0"/>
			<xs:element name="JobFunction" type="CodeWithDescription" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StorageUnitId">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="FacilityEmployee" type="FacilityEmployeeType">
		<xs:annotation>
			<xs:documentation>Facility employee assigned to the assignment</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ScheduledStartTs" type="xs:dateTime"/>
	<xs:element name="ScheduledEndts" type="xs:dateTime">
		<xs:annotation>
			<xs:documentation>Expected end time to complete the selection process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StorageUnitLooseInd" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Indicator to specify if customer choose not to have items placed in a storage unit (i.e. bag, container, etc.). </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SellByWeightType" type="CodeWithDescription">
		<xs:annotation>
			<xs:documentation>Defines whether this item is sold by weight or individual</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>