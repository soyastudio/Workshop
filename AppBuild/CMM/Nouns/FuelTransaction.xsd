<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2021 rel. 2 sp1 (x64) (http://www.altova.com) by poliv02 (Albertsons) -->
<!-- This file was generated by W3C XML/XSD Export Model Bridge from Meta Integration Technology, Inc. (MITI) -->
<xs:schema xmlns="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:altova="http://www.altova.com/xml-schema-extensions" xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" vc:minVersion="1.1">
	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>
	<xs:include schemaLocation="../Nouns/FinanceMaster.xsd"/>
	<!--V1.0 Patrick Oliver 06/03/21: Initial Draft-->
	<xs:element name="FuelTransaction" type="FuelTransactionType">
		<xs:annotation>
			<xs:documentation>Root element. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="FuelTransactionType">
		<xs:annotation>
			<xs:documentation>Business Object Document for Albertsons (ABS) Fuel Transaction. This object will show data related to ABS fuel station transactions that are transmitted daily from every store close. The data will include transaction amounts, pricing, markdowns, fuel grades, customer club card and tender information.  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="CorporationId" minOccurs="0"/>
			<xs:element ref="DivisionId"/>
			<xs:element name="RetailStoreId" type="xs:integer"/>
			<xs:element name="AltStoreId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alternate sotre id, generally store id in char format.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TransactionType">
				<xs:annotation>
					<xs:documentation>Business transaction Id(s) attached to a partner event.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TransactionId">
							<xs:annotation>
								<xs:documentation>Business transaction Id.
Ex Partner transaction</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="TransactionDt" type="xs:date" nillable="false">
							<xs:annotation>
								<xs:documentation>The date the fuel transaction was occured. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TransactionTs" type="xs:dateTimeStamp">
							<xs:annotation>
								<xs:documentation>The timestamp when the fuel transaction was updated.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TransactionTypeCd" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Can be used to specify the transaction type ('REQ' = Request, "CANREQ" = Cancel request, etc.) </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ReferenceNbr" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A cross reference nbr that can be used to external systems for internal transaction id.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AltTransaction" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Alternate transaction Ids linked to the fuel  transaction.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="AltTransactionId" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="AltTransactionType" type="CodeWithDescription" minOccurs="0"/>
									<xs:element name="AltTransactionTs" type="xs:dateTimeStamp" minOccurs="0">
										<xs:annotation>
											<xs:documentation>This is the timestamp when the transaction was updated.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StatusType" type="FuelTransactionStatusType" minOccurs="0"/>
			<xs:element name="CustomerData" type="CustomerType" minOccurs="0"/>
			<xs:element name="TransactionData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer Reward transaction data (rewards, amounts, purchases.).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="TenderTypeCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A code which uniquely identifies the type of tender, ie cash, check, credit card, etc. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FuelPumpId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Partner fuel pump where customer trasaction occured.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="RegisterId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Register where customer trasaction occured.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="FuelGradeCd" type="CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>An octane rating.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PurchUOMCd" type="UOMType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The code used to specify the units in which a value is being expressed, or manner in which a measurement has been taken.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TotalPurchQty" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total purchase quantity. </xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="18"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="TotalPurchAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total fuel purchase amount</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="18"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UnitPrice" minOccurs="0">
							<xs:annotation>
								<xs:documentation>unit price of the item per unit Qty specified</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Amt" default="0" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="18"/>
												<xs:fractionDigits value="4"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="PerQty" default="0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>indicates per Qty side of the Amt.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="18"/>
												<xs:fractionDigits value="4"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="DiscountAmt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Discount per gallon Amount that can be applied to the purchase.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="18"/>
									<xs:fractionDigits value="4"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="DiscLimitQty" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Gallon Quantity Limit allowed in the purchase.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NonFuelPurchAmt" type="AmountType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Non fuel Purchase amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TotalPurchaseAmt" type="AmountType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total purchase amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TotalSavingsValAmt" type="AmountType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total savings value amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PartnerTransactionException" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer Reward transaction exception data (error codes, messages)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ExceptionMsgId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Error message ID (Optional)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ExceptionTypeCd" type="CodeWithDescription" minOccurs="0"/>
						<xs:element name="ExceptionTxnTs" type="xs:dateTimeStamp" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This is the timestamp when the the exception occurs.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AuditData" type="RecordAuditData" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CustomerType">
		<xs:annotation>
			<xs:documentation>Customer attributes associated with a partner reward transaction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="HouseholdId" type="IDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique identifier assigned to a household.  Households are created by matching addresses and/or phone numbers across loyalty card accounts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ClubCardNbr" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A number which is embossed on a Loyalty Card and which uniquely identifies it.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OldClubCardNbr" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Legacy club card numbers. For some old longer club card no, a conversion is done into current standard club card no. </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PhoneNbr" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The phone number for the retail customer.   This is used as an alternate club membership identifier when the customer does not have their club card or card number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomerAccountNbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer account nbr</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CustomerId" type="IDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer Identification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomerNm" type="PersonNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Customer Name Data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomerType" type="CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies Customer type.
Residential or
Business</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TenderTypeCd" type="CodeWithDescription">
		<xs:annotation>
			<xs:documentation>A code which uniquely identifies the type of tender, ie cash, check, credit card, etc. Sample Values: CASH - currency CREDIT - credit card DEBIT - debit card CUST_ACCT - customer credit account with retailer EBT - electronic benefits transfer CHEQUE - personal or business cheque STORED_VALUE - gift cert. or gift card COUPON - mfg coupon VOUCHER - retailer issued debit (e.g. coinstar voucher) SEND_CHECK - paid out/refund via acct pay. TRADEIN - trade in kind/trade in debit OTHER - other debit offset tender type	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="FuelTransactionStatusType">
		<xs:annotation>
			<xs:documentation>conatins data about various types of status Cds.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StatusCd" default="" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status Code</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="Type" type="xs:string">
								<xs:annotation>
									<xs:documentation>Type of Status code</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Description" default="" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EffectiveDtTm" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>