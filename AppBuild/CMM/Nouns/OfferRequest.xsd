<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2021 rel. 3 (x64) (http://www.altova.com) by kvisa02 (Albertsons) -->
<!-- W3C Schema generated by XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com) -->
<xs:schema xmlns:Abs="http://collab.safeway.com/it/architecture/info/default.aspx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="http://collab.safeway.com/it/architecture/info/default.aspx" elementFormDefault="qualified" vc:minVersion="1.1">
	<!--V1.0 Initial version 06102020   Sai Nuthakki-->
	<!--V1.1 Rosabel Macario 11/04/2020 - Added tag to resolve dateTimeStamp issue-->
	<!--V1.2  snuth00 05/04/21  to support additionsl types of offer programs.-->
	<!--V1.3 Patrick Oliver 05/13/21: Changed ItemOfferPrice.EffectiveStartDt to EffectStartTs and ItemOfferPrice.EffectiveEndDt to EffectEndTs-->
	<!--V1.4 Patrick Oliver 06/02/21: Updated RepresentativeStatus.EffectiveStartTs and RepresentativeStatus.EffectiveStartTs to dateTimeStamp -->
	<!--V1.5 Patrick Oliver 06/18/21:  Added OfferRequestChangeDetail-->
	<!--V1.6 Patrick Oliver 08/17/21: Updated NOPAStartDt, NOPAEndDt, EffectiveDtTm, DisplayStartDt, DisplayEndDt, OfferStartDt, OfferEndDt, TestStartDt, TestEndDt, CreateTs, UpdateTs to dateTimeStamp-->
	<!--V1.7 Patrick Oliver 08/24/21: Added AllocationTypeCd-->
	<!--V1.8 Kumar Visalakshi Sekar 12/23/21: Added OfferReviewChecklist, OfferFulfillmentChannel, OfferRequestTemplateStatus for otstatus for which the otstatuses are Review, process, active, new, parked, Removed, No UPC's.-->
	<!--V1.9 Kumar Visalakshi Sekar 01/21/22: Added child element to the OfferEffectiveDay - DayOfWk & DayOfWkInd and added new element to the UsageLimitPeriodNbr to OfferRestrictionType column. All these changes were done on the OfferRequestType. Changed the dataType for UsageLimitPeriodNbr from Int to String to reflect Source dataType. ComplexType-->
	<xs:include schemaLocation="../AbsMaster/AbsOmMaster.xsd"/>
	<xs:include schemaLocation="../Global/AbsGlobalComponents.xsd"/>
	<xs:element name="OfferRequestType" type="Abs:OfferRequestType">
		<xs:annotation>
			<xs:documentation>Business Object to define the the request process to generate a promotional offer applicable in a specific location and for specific set of sale items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProductGroupType">
		<xs:annotation>
			<xs:documentation>Pre defined group of items to include in an offer.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:ProductGroupId" minOccurs="0"/>
			<xs:element ref="Abs:ProductGroupVersionId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Id generated with in source system UI o identify a product group attached to an offer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductGroupNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ProductGroupDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DisplayOrderNbr" type="xs:integer" minOccurs="0"/>
			<xs:element name="ItemQty" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UOM" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:UOMType">
							<xs:sequence>
								<xs:element name="UOMDsc" minOccurs="0">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="100"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="GiftCardInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indictes if this product group is to promote gift cards.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnyProductInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates that there is no paricular product group and offer applies to any product.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueItemInd" type="xs:boolean" minOccurs="0"/>
			<xs:element name="ConjunctionDsc" type="xs:string" minOccurs="0"/>
			<xs:element name="MinimumPurchaseAmt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MaximumPurchaseAmt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InheritedInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the information in the product group is inherited from offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExcludedProductGroup" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="Abs:ProductGroupId" minOccurs="0"/>
						<xs:element name="ProductGroupNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductGroupTier" type="Abs:ProductGroupTierType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ProductGroupItemType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>representative item id for a product group, could be a CIC or UPC or CSC.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="Abs:CorporateItemCd" minOccurs="0"/>
						<xs:element name="UPC" type="Abs:UPC" minOccurs="0"/>
						<xs:element name="RepresentativeStatus" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Representative status of the item in a product group.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="StatusTypeCd" default="" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status Code</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attribute name="Type" type="xs:string">
														<xs:annotation>
															<xs:documentation>Type of Status code</xs:documentation>
														</xs:annotation>
													</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="Description" default="" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="EffectiveStartTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="EffectiveEndTs" type="xs:dateTime" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Timestamp until the UPC can be Rep UPC.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="StatusReason" type="Abs:CodeWithDescription" minOccurs="0"/>
						<xs:element name="ItemOfferPrice" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ItemOfferPriceAmt" type="xs:decimal" minOccurs="0"/>
									<xs:element name="UOM" type="Abs:UOMType" minOccurs="0"/>
									<xs:element name="EffectiveStartTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="EffectiveEndTs" type="xs:dateTime" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreGroupType">
		<xs:annotation>
			<xs:documentation>Pre defined group of stores as one unit to implement set of offers.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="Abs:StoreGroupId" minOccurs="0"/>
			<xs:element name="StoreGroupNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StoreGroupDsc" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LimitType">
		<xs:annotation>
			<xs:documentation>Defines various types of limits that can be applied on offers / discounts or Rewards to make them eligible to include in retail sale transaction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LimitQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item quantity or offer qty limit eligible for offer/discount/reward.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LimitWt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item weight limit eligible for offer/discount/reward.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LimitVol" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item volume limit eligible for offer/discount/reward.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="UOM" type="Abs:UOMType" minOccurs="0"/>
			<xs:element name="LimitAmt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Item dollar value limit eligible for offer/discount/reward.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StoreGroupVersionId" type="xs:long"/>
	<xs:element name="StoreGroupId" type="xs:long"/>
	<xs:element name="ProductGroupId" type="xs:long"/>
	<xs:element name="ProductGroupVersionId" type="xs:long"/>
	<xs:element name="DiscountVersionId" type="xs:long"/>
	<xs:element name="OfferId" type="xs:long"/>
	<xs:complexType name="OfferRequestType">
		<xs:sequence>
			<xs:element name="OfferRequestId" type="xs:long">
				<xs:annotation>
					<xs:documentation>Unique identiifer for each offer request created in source systems like offer management system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferOrganization" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Group" minOccurs="0">
							<xs:annotation>
								<xs:documentation>organizational structure who owns an offer or multiple offers. This could be at a group that conatins multiple divisions or a division with multiple sub-divisions.
									In case of multiple divisions, Group division and Division will have values.
									ex :Corporate: group div Corp, div - all divisions.
									In case of one Division, Group Division and Division will have same value. It may also contain sub divisions. Ex Norcal 25: Group Div 25, Div 25 and sub division ' HI'</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence maxOccurs="unbounded">
									<xs:element name="GroupId" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Common identiifer for group of divisions.
												Ex: Corporate or Multi-Division, or west coast..etc</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="10"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="GroupCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="10"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="GroupNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="SubGroup" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>SubGroup with in a group.
												When group is Corporate, all SubGroups will be listeed.
												When group is mulit-SubGroup specifc SubGroups will be listed.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="SubGroupId" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="10"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="SubGroupCd" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="10"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="SubGroupNm" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="100"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="OfferRegion" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>geographic regions where offers are targeted to implement.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RegionId" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="RegionNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="200"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferDeliveryChannelType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Channel thru which the offfer will be delivered to customers.
						values :CC- clip and click, DO - digital only, ET - email campaign, IS- in store, PO - paper coupon only</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DeliveryChannelTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="10"/>
									<xs:enumeration value="CC"/>
									<xs:enumeration value="DO"/>
									<xs:enumeration value="ET"/>
									<xs:enumeration value="IS"/>
									<xs:enumeration value="PO"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="DeliveryChannelTypeDsc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferFulfillmentChannel" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Channel thru whcih the offer will be fulfilled to customers.
						eg., "delivery", "dug", "inStorePurchase",
						"wug"</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="FulfillmentChannelTypeCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="FulfillmentChannelTypeDesc" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="FulfillmentChannelInd" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferBank" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="OfferBankTypeCd" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of th eoffer bank,
									Ex: Master Offer Bank (MOB)</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OfferBankId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OfferBankNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestTemplate" minOccurs="0">
				<xs:annotation>
					<xs:documentation>reference template used for creation of offer rquest</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TemplateId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="TemplateNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestTemplateStatus" type="Abs:StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Various statuses for Offer template are
						Ex: Review, process, active, new parked, Removed, No UPC's</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Abs:DepartmentId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Retail department to which the offer items belong to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DepartmentNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OfferNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OfferRequestDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Detail description for an offer</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BrandInfoTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SizeDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>general size description of the offer items.
						ex: Kellogs cereal bonus pack</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CustomerSegmentInfoTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OfferItemDsc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>generic description of items included in the offer. </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OfferRequestStatus" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>various statuses of offer request.
						Ex: Draft, Submitted, Approved, Deleted, Resubmitted, Active..etc
						It also contains status like digital and non-digital status of offer request.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:StatusType">
							<xs:sequence>
								<xs:element name="OfferRequestStatusTypeCd" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Each offer request may have multiple types of status based on type of offer.
											Ex: overall offer rquest status, digital offer request, non-digital offer request.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="20"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
								<xs:element name="TimeZoneCd" minOccurs="0">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="20"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestChangeDetail" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Offer request changes details including change types, change category, and change reasons.  </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ChangeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer Request change types.  Ex: "ALLOCATION", "OVERLAP", etc.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ChangeTypeCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ChangeTypeDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="500"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ChangeTypeQty" type="xs:integer" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ChangeCategory" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer Request change categories.                          Ex: "FIX", "STRATEGY". etc.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ChangeCategoryCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ChangeCategoryDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="500"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ChangeCategoryQty" type="xs:integer" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ReasonType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer Request reason types  Ex: "DISCO", "FUNDING", "RECALL",  "SEASONAL", etc. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ReasonTypeCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ReasonTypeDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="500"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="CommentTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="500"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ChangeByType" type="Abs:ChangedByType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VendorPromotionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Vendor promotions related to the offer. Vendors submit their promotions thru NOPA - notification of promotion allowance with specfic promo period and location</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="VendorPromotionId" minOccurs="0" maxOccurs="unbounded">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="NOPAStartDt" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="NOPAEndDt" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="BillingOptionType" type="Abs:CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>vendor Bill back options</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NOPAAssignStatus" type="Abs:NopaStatusType" minOccurs="0"/>
						<xs:element name="AllowanceType" type="Abs:CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Vendor allowance types like case allowance, flat allowance..etc</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BilledInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if vendor is already billed for the promoted offer.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PromotionProgram" type="Abs:CodeWithName" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Promotion program name and code.
						Ex: GR - Grocery Rewards, SC - Store Coupons, PD - personal Deals</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionProgramType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Type/Sub type of a promotion program. Type could be Meat and Fish  and sub type could be Meat.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:CodeWithName">
							<xs:sequence>
								<xs:element name="ProgramSubType" type="Abs:CodeWithName" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PromotionPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Planned promotion period data.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PromotionPeriodId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PromotionPeriodNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="200"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PromotionWeekId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PromotionStartDt" type="xs:date" minOccurs="0"/>
						<xs:element name="PromotionEndDt" type="xs:date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdvertisementType" type="Abs:CodeWithDescription" minOccurs="0"/>
			<xs:element name="TriggerId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>barcode from paper coupon that triggers the offer redemption at point of sale.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SavingsValueTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DisclaimerTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ImageId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OfferPeriodType" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DisplayStartDt" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="DisplayEndDt" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="OfferStartDt" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer effective start dt</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OfferEndDt" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer Effective End dt.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TestStartDt" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="TestEndDt" type="xs:dateTime" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestSource" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SourceSystemId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ApplicationId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UpdatedApplicationId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UserUpdate" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="UserTypeCd" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Create user, update user, digital usr, non digital user.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="UserId" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="FirstNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="LastNm" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="CreateTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="UpdateTs" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="TimeZoneCd" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="20"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferEffectiveDay" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Day of the week on which the offer will be qualified..</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DayOfWk" type="xs:string" minOccurs="0"/>
						<xs:element name="DayOfWkInd" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferEffectiveTm" minOccurs="0">
				<xs:annotation>
					<xs:documentation>effective ofer qualified time period with in a day.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StartTm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer qualification effective start time.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="EndTm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer qualification effective end time.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="TimeZoneCd" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRestrictionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Restrictions or limits applicable to an offer. lIke one per user, one per transaction..etc</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Abs:LimitType">
							<xs:sequence>
								<xs:element name="RestrictionType" type="Abs:CodeWithDescription" minOccurs="0"/>
								<xs:element ref="Abs:UsageLimitTypeTxt" minOccurs="0"/>
								<xs:element name="UsageLimitPeriodNbr" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Usage Limit period can be number of days or number of weeks that this limit can be applicable to.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="UsageLimitNbr" type="xs:decimal" minOccurs="0">
									<xs:annotation>
										<xs:documentation>ex: number of offers customer can get or combine with current offer.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="RequirementType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>requirement or conditions for the customer to receive the offer.
						ex: rewards / points / miles required.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RequirementTypeCd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>ex: rewards, points or miles</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RequiredQty" type="xs:integer" minOccurs="0"/>
						<xs:element name="RequiredInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>defines if a particular type of requirement is required to get the offer</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestReferenceId" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Other reference Ids for an offer like external system ids or vendor offer ids.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="QualifierCd">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:maxLength value="20"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ManufacturerType" type="Abs:IdWithNameType" minOccurs="0"/>
			<xs:element name="AttachmentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Files and link urls assocoiated with offer information.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0">
						<xs:element name="FileNm" minOccurs="0">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="Qualifier">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:maxLength value="20"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="LinkURL" minOccurs="0">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="Qualifier">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:maxLength value="20"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferRequestTypeCd" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of the offer rquest like item discount, bogo, meal deal..etc</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
						<xs:enumeration value="ITEM_DISCOUNT"/>
						<xs:enumeration value="BUYX_GETX"/>
						<xs:enumeration value="BUYX_GETY"/>
						<xs:enumeration value="MEAL_DEAL"/>
						<xs:enumeration value="BUNDLE"/>
						<xs:enumeration value="MUST_BUY"/>
						<xs:enumeration value="FAB_5_OR_SCORE_4"/>
						<xs:enumeration value="WOD_OR_POD"/>
						<xs:enumeration value="REWARDS_ACCUMULATION"/>
						<xs:enumeration value="REWARDS_FLAT"/>
						<xs:enumeration value="CONTINUITY"/>
						<xs:enumeration value="INSTANT_WIN"/>
						<xs:enumeration value="ALASKA_AIRMILES"/>
						<xs:enumeration value="STORE_CLOSURE"/>
						<xs:enumeration value="CUSTOM"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AllocationTypeCd" type="Abs:CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of allocation code for the offer.
						Ex: '01' = Default</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BusinessJustificationTxt" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>business justification for the offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferRequestCommentTxt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1000"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AttachedOfferType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Offers included in an offer request. One offer request can have multiple offers.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AttachedOfferTypeId" type="xs:long" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identifier for each attached offer type in an offer request.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="Abs:StoreGroupVersionId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>version id generated with in source system UI to identify a store group with offer. One StoreGroupVersion can have multiple types of store groups like Digital, Non-Digital, POD.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="Abs:DisplayOrderNbr" minOccurs="0"/>
						<xs:element name="ProtoType" type="Abs:CodeWithDescription" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer proto type code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StoreGroup" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>different types of store groups attached to an offer request. like digital and non digital. One store group version will have multiple types of store groups.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="Abs:StoreGroupType">
										<xs:sequence>
											<xs:element name="StoreGroupType" type="Abs:CodeWithDescription" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Defines the type of store group.
														POD Store group - store eligible for PODs like mobile clips
														Digital Store Groups - stores eligible for digital and paper coupons
														NonDigital Store Groups - stores eligible for paper coupons.  Also J4U store group</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="ProductGroupVersion" type="Abs:ProductGroupVersionType" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="StoreTagType" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="TagNbr" type="xs:integer" minOccurs="0"/>
									<xs:element name="TagAmt" minOccurs="0">
										<xs:annotation>
											<xs:documentation>item Price amount displayed on the tag</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:totalDigits value="14"/>
												<xs:fractionDigits value="4"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="LoyaltyPgmTagInd" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation>indicator to print loyalty pgm tags like J4U tag in store to display for the offer.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TagDsc" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="500"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="PODDetailType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Offer request details specifc to POD like a mobile device.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DisplayImage" minOccurs="0">
										<xs:annotation>
											<xs:documentation>details of the images to be displayed on POD like mobile device for the offer.
												IVIE image or Scene7 image</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence maxOccurs="unbounded">
												<xs:element name="ImageTypeCd" minOccurs="0">
													<xs:annotation>
														<xs:documentation>type of image like IVIE or Scene7</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="50"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="ImageId" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="50"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="HeadlineTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string"/>
										</xs:simpleType>
									</xs:element>
									<xs:element name="HeadlineSubTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string"/>
										</xs:simpleType>
									</xs:element>
									<xs:element name="OfferDsc" minOccurs="0">
										<xs:annotation>
											<xs:documentation>offer description specific to POD display.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string"/>
										</xs:simpleType>
									</xs:element>
									<xs:element name="OfferDetail" type="Abs:CodeWithDescription" minOccurs="0"/>
									<xs:element name="PriceInfoTxt" minOccurs="0">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ItemQty" type="xs:decimal" minOccurs="0"/>
									<xs:element name="UOM" type="Abs:UOMType" minOccurs="0"/>
									<xs:element ref="Abs:UsageLimitTypeTxt" minOccurs="0"/>
									<xs:element name="DisclaimerTxt" type="xs:string" minOccurs="0"/>
									<xs:element name="DisplayStartDt" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="DisplayEndDt" type="xs:dateTime" minOccurs="0"/>
									<xs:element name="SpecialEventType" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>special events like '$5 friday' or 'weekend savings' or 'pizza night'..etc</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence minOccurs="0">
												<xs:element name="EventId" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="20"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="EventNm" minOccurs="0">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="100"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="CustomerFriendlyCategory" type="Abs:CodeWithDescription" minOccurs="0">
										<xs:annotation>
											<xs:documentation>customer friendly product categories like baby care, beverages, bread - bakery.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ShoppingListCategory" type="Abs:CodeWithDescription" minOccurs="0" maxOccurs="unbounded"/>
									<xs:element name="PODCategory" type="Abs:CodeWithDescription" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Categories specific to POD. website may have more categories than mobile. </xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="InstantWinProgramType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>defines instant win programs that apply at the time of sale transaction based on certain conditions. ex monopoly points.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="InstantWinProgramId" type="xs:integer" minOccurs="0"/>
									<xs:element ref="Abs:InstantWinVersionId" minOccurs="0"/>
									<xs:element name="PrizeItemQty" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number of prizes win at the time of sale transaction. like monopoly points.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="FrequencyDsc" minOccurs="0">
										<xs:annotation>
											<xs:documentation>ex: once total transaction amount reaches $50.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="AttachedOffer" type="Abs:AttachedOfferType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VersionQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of versions with in an offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TierQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of tiers with in an offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of products with in an offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreGroupQty" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of storegroups with in an offer request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeletedOfferType" type="Abs:AttachedOfferType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ChargeBackDepartment" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DepartmentId" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="10"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="DepartmentNm" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OfferReviewChecklist" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Checklist is for review flags, the field reviewFlags is a Map i.e name value pair, where the name is a string and the value is Boolean. To note that reviewflags may not contain all four keys at a time.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ReviewChecklistTypeCd" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Checklist for review in the offer request template, this checklist may contain the names or value eg., repUPC, qtyUOM, reActivated, ringType</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ReviewChecklistInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Boolean value for the review flags.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreGroupOrganizationType">
		<xs:sequence>
			<xs:element ref="Abs:DivisionId" minOccurs="0"/>
			<xs:element ref="Abs:BannerCd" minOccurs="0"/>
			<xs:element ref="Abs:ROGCd" minOccurs="0"/>
			<xs:element name="RetailStoreType" minOccurs="0">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element ref="Abs:RetailStoreId" minOccurs="0"/>
						<xs:element ref="Abs:Address" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ExcludedRetailStoreType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store groups also can be created for a division with exclusion of stores with in that division.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element ref="Abs:RetailStoreId" minOccurs="0"/>
						<xs:element ref="Abs:Address" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductGroupTierType">
		<xs:sequence>
			<xs:element name="TierLevelId" type="xs:integer" minOccurs="0"/>
			<xs:element name="TierLevelAmt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DiscountTierType">
		<xs:sequence>
			<xs:element name="TierLevelnbr" type="xs:integer" minOccurs="0"/>
			<xs:element name="DiscountAmt" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LimitType" type="Abs:LimitType" minOccurs="0"/>
			<xs:element name="RewardQty" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ReceiptTxt" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text to be printed on the receipt for discounts.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DiscountUptoQty" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DiscountType">
		<xs:sequence minOccurs="0">
			<xs:element name="DiscountId" type="xs:long" minOccurs="0"/>
			<xs:element name="DiscountType" type="Abs:CodeWithDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the type of discount as item level, basket level or dept level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Abs:DisplayOrderNbr" minOccurs="0"/>
			<xs:element name="BenefitValueType" type="Abs:CodeWithDescription" minOccurs="0"/>
			<xs:element name="BenefitValueQty" minOccurs="0">
				<xs:annotation>
					<xs:documentation>benefit value based on benefit type. If benefit type is cents off, benefitvalueqty will be like 20 for 20 cents off. if percent off, it will have value 10 for 10% off.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="IncludedProductGroupId" type="xs:integer" minOccurs="0"/>
			<xs:element name="IncludedProductgroupNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExcludedProductGroupId" type="xs:integer" minOccurs="0"/>
			<xs:element name="ExcludedProductGroupNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ChargebackDepartmentId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ChargebackDepartmentNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DiscountTier" type="Abs:DiscountTierType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirMileTierType">
		<xs:sequence>
			<xs:element name="AirMileTierNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="200"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AirMilePointQty" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductGroupVersionType">
		<xs:sequence>
			<xs:element name="ProductGroup" type="Abs:ProductGroupType" minOccurs="0"/>
			<xs:element name="DiscountVersion" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Various types fo discounts offered for this product group as part of promotion offer.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="Abs:DiscountVersionId" minOccurs="0"/>
						<xs:element name="Discount" type="Abs:DiscountType" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="AirMileProgram" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="AirMileProgramId" type="xs:integer" minOccurs="0"/>
									<xs:element name="AirMileProgramNm" minOccurs="0">
										<xs:annotation>
											<xs:appinfo/>
											<xs:documentation>ex Alaska airmiles program</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="200"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="AirMileTier" type="Abs:AirMileTierType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AttachedOfferType">
		<xs:sequence>
			<xs:element ref="Abs:StoreGroupVersionId" minOccurs="0"/>
			<xs:element ref="Abs:ProductGroupVersionId" minOccurs="0"/>
			<xs:element ref="Abs:DiscountVersionId" minOccurs="0"/>
			<xs:element ref="Abs:InstantWinVersionId" minOccurs="0"/>
			<xs:element name="DiscountId" type="xs:long" minOccurs="0"/>
			<xs:element ref="Abs:OfferId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique Id generated for an offer with in offer authorizing system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferenceOfferId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Offer Id referenced with external systems like offer execution system (Copient)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Status" type="Abs:NopaStatusType" minOccurs="0"/>
			<xs:element name="AppliedProgram" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>different customer loyalty//promo/rewards programs applicable for an offer.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0">
						<xs:element name="ProgramNm" minOccurs="0">
							<xs:annotation>
								<xs:documentation>ex J4U</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AppliedInd" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DistinctId" type="xs:string" minOccurs="0"/>
			<xs:element name="OfferRankNbr" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>in case of multiple offers to chose by promo engine or pos, preferred rank number for this offer.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="InstantWinVersionId" type="xs:long"/>
	<xs:element name="UsageLimitTypeTxt">
		<xs:annotation>
			<xs:documentation>Customer limit types like one per transaction, one per day..etc</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DisplayOrderNbr" type="xs:integer"/>
	<xs:complexType name="ChangedByType">
		<xs:annotation>
			<xs:documentation>Indicates user and time who conducted Grocery Order refund</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserId" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FirstNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LastNm" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ChangeByDtTm" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NopaStatusType">
		<xs:annotation>
			<xs:documentation>conatins data about various types of nopa status Cds.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StatusTypeCd" default="" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status Code</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="Type" type="xs:string">
								<xs:annotation>
									<xs:documentation>Type of Status code</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Description" default="" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EffectiveDtTm" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>